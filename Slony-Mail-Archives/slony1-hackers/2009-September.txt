From mailings at oopsware.de  Fri Sep 11 05:52:50 2009
From: mailings at oopsware.de (Bernd Helmle)
Date: Fri Sep 11 05:53:00 2009
Subject: [Slony1-hackers] slonyVersion() and getModuleVersion() mismatch in
	current CVS
Message-ID: <88CC283367A30ADFAF504DF2@[172.26.14.62]>

Folks,

seems current CVS is inconsistent between module version and schema version 
strings. Build from a fresh CVS checkout gives the following:


SELECT _movies.slonyVersion();
 slonyversion
--------------
 2.0.3
(1 row)

SELECT _movies.getModuleVersion();
 getmoduleversion
------------------
 2.0.2
(1 row)

Accordingly, slon complains in db_checkSchemaVersion():

ERROR  Slony-I schema version is 2.0.3
ERROR  please upgrade Slony-I schema to version 2.0.2
FATAL  main: Node has wrong Slony-I schema or module version loaded

Seems we have to bump up SLONY_I_VERSION_STRING, too (patch level in the 
schema
is already set to 3) ?

-- 
Thanks

	Bernd
From cbbrowne at ca.afilias.info  Fri Sep 11 08:32:13 2009
From: cbbrowne at ca.afilias.info (Christopher Browne)
Date: Fri Sep 11 08:32:24 2009
Subject: [Slony1-hackers] slonyVersion() and getModuleVersion() mismatch
	in current CVS
In-Reply-To: <88CC283367A30ADFAF504DF2@[172.26.14.62]> (Bernd Helmle's message
	of "Fri\, 11 Sep 2009 14\:52\:50 +0200")
References: <88CC283367A30ADFAF504DF2@[172.26.14.62]>
Message-ID: <87eiqdcxaa.fsf@dba2.int.libertyrms.com>

Bernd Helmle <mailings@oopsware.de> writes:
> Folks,
>
> seems current CVS is inconsistent between module version and schema
> version strings. Build from a fresh CVS checkout gives the following:
>
>
> SELECT _movies.slonyVersion();
> slonyversion
> --------------
> 2.0.3
> (1 row)
>
> SELECT _movies.getModuleVersion();
> getmoduleversion
> ------------------
> 2.0.2
> (1 row)
>
> Accordingly, slon complains in db_checkSchemaVersion():
>
> ERROR  Slony-I schema version is 2.0.3
> ERROR  please upgrade Slony-I schema to version 2.0.2
> FATAL  main: Node has wrong Slony-I schema or module version loaded
>
> Seems we have to bump up SLONY_I_VERSION_STRING, too (patch level in
> the schema
> is already set to 3) ?

I expect that you failed to run "autoconf"; the value in
BUILDHOME/config.h.in is indeed 2.0.3; that gets stowed in config.h by
autoconf.
-- 
output = reverse("ofni.sailifa.ac" "@" "enworbbc")
Christopher Browne
"Bother,"  said Pooh,  "Eeyore, ready  two photon  torpedoes  and lock
phasers on the Heffalump, Piglet, meet me in transporter room three"
From mailings at oopsware.de  Sat Sep 12 03:35:58 2009
From: mailings at oopsware.de (Bernd Helmle)
Date: Sat Sep 12 03:36:54 2009
Subject: [Slony1-hackers] slonyVersion() and getModuleVersion() mismatch
	in current CVS
In-Reply-To: <87eiqdcxaa.fsf@dba2.int.libertyrms.com>
References: <88CC283367A30ADFAF504DF2@[172.26.14.62]>
	<87eiqdcxaa.fsf@dba2.int.libertyrms.com>
Message-ID: <F04A631F9C861AF6C5CF8659@amenophis>



--On 11. September 2009 11:32:13 -0400 Christopher Browne 
<cbbrowne@ca.afilias.info> wrote:

> I expect that you failed to run "autoconf"; the value in
> BUILDHOME/config.h.in is indeed 2.0.3;

Hmm, i'm confused, CVS HEAD has the following:

$ grep SLONY_I_VERSION config.h.in
#define SLONY_I_VERSION_STRING	"2.0.2"
#define SLONY_I_VERSION_STRING_DEC 2,0,2

However, i see that REL_2_0_STABLE and REL_2_0_3_RC2 has them set 
correctly...

See also:

<http://main.slony.info/viewcvs/viewvc.cgi/slony1-engine/config.h.in?revision=1.23&view=markup&pathrev=HEAD>

-- 
Thanks

	Bernd
From mailings at oopsware.de  Mon Sep 14 16:12:01 2009
From: mailings at oopsware.de (Bernd Helmle)
Date: Mon Sep 14 16:12:41 2009
Subject: [Slony1-hackers] cloneNodePrepare() broken in 2.0.3RC
Message-ID: <AB1F7F24148B3A694EA74EBB@amenophis>

It seems cloneNodePrepare() is currently broken in the recent 2.0 branch 
(looks like 2.0.3 RC2 has this also). The function is declared to return 
int4, however, calling createEvent() within the function is supposed to 
return bigint.

create or replace function @NAMESPACE@.cloneNodePrepare (int4, int4, text)
returns int4
...

Maybe this is an oversight in the last efforts to change functions 
returning event numbers to bigint?

-- 
Thanks

	Bernd
From mailings at oopsware.de  Fri Sep 18 15:42:29 2009
From: mailings at oopsware.de (Bernd Helmle)
Date: Fri Sep 18 15:43:14 2009
Subject: [Slony1-hackers] cloneNodePrepare() broken in 2.0.3RC
In-Reply-To: <AB1F7F24148B3A694EA74EBB@amenophis>
References: <AB1F7F24148B3A694EA74EBB@amenophis>
Message-ID: <DE1AC8A5B95AF3B52D1C6323@amenophis>



--On 15. September 2009 01:12:01 +0200 Bernd Helmle <mailings@oopsware.de> 
wrote:

> It seems cloneNodePrepare() is currently broken in the recent 2.0 branch
> (looks like 2.0.3 RC2 has this also). The function is declared to return
> int4, however, calling createEvent() within the function is supposed to
> return bigint.

Hmm, nobody wants to comment on this? At least, it's easy to reproduce with 
2.0.3RC2, CLONE PREPARE generates the following on my little test instance:

ERROR:  value "5000000005" is out of range for type integer
CONTEXT:  PL/pgSQL function "clonenodeprepare" while casting return value 
to function's return type
STATEMENT:  select "_movies".cloneNodePrepare(3, 2, 'clone of node 2');


-- 
Thanks

	Bernd
