From wieck at lists.slony.info  Tue Jun  3 11:54:44 2008
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue Jun  3 11:54:46 2008
Subject: [Slony1-commit] slony1-engine/src/slonik slonik.c
Message-ID: <20080603185444.74968290455@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slonik
In directory main.slony.info:/tmp/cvs-serv9927

Modified Files:
      Tag: REL_1_2_STABLE
	slonik.c 
Log Message:
No idea how that part of the switch statement broke.

Jan


Index: slonik.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slonik/slonik.c,v
retrieving revision 1.67.2.16
retrieving revision 1.67.2.17
diff -C2 -d -r1.67.2.16 -r1.67.2.17
*** slonik.c	7 Mar 2008 19:01:37 -0000	1.67.2.16
--- slonik.c	3 Jun 2008 18:54:42 -0000	1.67.2.17
***************
*** 1282,1295 ****
  
  					if (slonik_init_cluster(stmt) < 0)
  			case STMT_REPAIR_CONFIG:
! 					{
! 						SlonikStmt_repair_config *stmt =
! 						(SlonikStmt_repair_config *) hdr;
  
! 						if (slonik_repair_config(stmt) < 0)
! 							errors++;
! 					}
! 					break;
! 					errors++;
  				}
  				break;
--- 1282,1296 ----
  
  					if (slonik_init_cluster(stmt) < 0)
+ 						errors++;
+ 				}
+ 				break;
+ 
  			case STMT_REPAIR_CONFIG:
! 				{
! 					SlonikStmt_repair_config *stmt =
! 					(SlonikStmt_repair_config *) hdr;
  
! 					if (slonik_repair_config(stmt) < 0)
! 						errors++;
  				}
  				break;

From cbbrowne at lists.slony.info  Fri Jun  6 13:56:46 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun  6 13:56:47 2008
Subject: [Slony1-commit] slony1-engine/src/backend slony1_funcs.sql
Message-ID: <20080606205646.A71BD290EA5@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv5417

Modified Files:
	slony1_funcs.sql 
Log Message:
Make error message about adding a table to a subscribed set a bit more
precise.


Index: slony1_funcs.sql
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.sql,v
retrieving revision 1.139
retrieving revision 1.140
diff -C2 -d -r1.139 -r1.140
*** slony1_funcs.sql	28 May 2008 18:09:47 -0000	1.139
--- slony1_funcs.sql	6 Jun 2008 20:56:44 -0000	1.140
***************
*** 2701,2705 ****
  			where sub_set = p_set_id)
  	then
! 		raise exception ''Slony-I: cannot add table to currently subscribed set %'',
  				p_set_id;
  	end if;
--- 2701,2705 ----
  			where sub_set = p_set_id)
  	then
! 		raise exception ''Slony-I: cannot add table to currently subscribed set % - must attach to an unsubscribed set'',
  				p_set_id;
  	end if;

From cbbrowne at lists.slony.info  Fri Jun  6 14:01:45 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun  6 14:01:46 2008
Subject: [Slony1-commit] slony1-engine/doc/adminguide slonik_ref.sgml
Message-ID: <20080606210145.464D7290E50@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv5815

Modified Files:
	slonik_ref.sgml 
Log Message:
Improve documentation on SET ADD TABLE and on what needs to be done if
you discover you can't do so due to the set already being subscribed.


Index: slonik_ref.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/slonik_ref.sgml,v
retrieving revision 1.85
retrieving revision 1.86
diff -C2 -d -r1.85 -r1.86
*** slonik_ref.sgml	11 Apr 2008 15:44:22 -0000	1.85
--- slonik_ref.sgml	6 Jun 2008 21:01:43 -0000	1.86
***************
*** 1476,1481 ****
          <listitem><para> &slony1; does not support adding tables to
          sets that are already participating in subscriptions.
!         Probably you need to define a new set to associate additional
!         tables to. </para> </listitem> </varlistentry>
  
     </variablelist>    
--- 1476,1484 ----
          <listitem><para> &slony1; does not support adding tables to
          sets that are already participating in subscriptions.
!         Instead, you need to define a new replication set, and add any
!         new tables to <emphasis>that</emphasis> set.  You might then
!         use <xref linkend="stmtmergeset"> to merge the new set into an
!         existing one, if that seems appropriate. </para> </listitem>
!         </varlistentry>
  
     </variablelist>    

From cbbrowne at lists.slony.info  Thu Jun 12 11:17:51 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Thu Jun 12 11:17:52 2008
Subject: [Slony1-commit] slony1-engine/tests/testmergeset gen_ddl_slonik.sh
Message-ID: <20080612181751.97D17290E50@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/tests/testmergeset
In directory main.slony.info:/tmp/cvs-serv16832

Modified Files:
	gen_ddl_slonik.sh 
Log Message:
Fix up WAIT FOR EVENT requests


Index: gen_ddl_slonik.sh
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tests/testmergeset/gen_ddl_slonik.sh,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** gen_ddl_slonik.sh	26 Oct 2007 14:47:24 -0000	1.3
--- gen_ddl_slonik.sh	12 Jun 2008 18:17:49 -0000	1.4
***************
*** 14,25 ****
    set add table (set id=999, origin=1, id=${tableid}, fully qualified name='public.sales_txns_${year}_${month}');
    subscribe set (id=999, provider=1, receiver=2, forward = yes);
    sync (id=1);
!   wait for event (origin=1, confirmed=2, wait on=1);
    subscribe set (id=999, provider=1, receiver=3, forward = no);
    sync (id=1);
!   wait for event (origin=1, confirmed=3, wait on=1);
    subscribe set (id=999, provider=2, receiver=4, forward = no);
    sync (id=1);
!   wait for event (origin=1, confirmed=ALL, wait on=1);
    merge set (ID = 1, ADD ID = 999, ORIGIN = 1 );
  
--- 14,28 ----
    set add table (set id=999, origin=1, id=${tableid}, fully qualified name='public.sales_txns_${year}_${month}');
    subscribe set (id=999, provider=1, receiver=2, forward = yes);
+   wait for event (origin=2, confirmed=1, wait on=1);
    sync (id=1);
!   wait for event (origin=1, confirmed=2, wait on=2);
    subscribe set (id=999, provider=1, receiver=3, forward = no);
+   wait for event (origin=3, confirmed=1, wait on=1);
    sync (id=1);
!   wait for event (origin=1, confirmed=3, wait on=3);
    subscribe set (id=999, provider=2, receiver=4, forward = no);
+   wait for event (origin=4, confirmed=1, wait on=1);
    sync (id=1);
!   wait for event (origin=1, confirmed=4, wait on=4);
    merge set (ID = 1, ADD ID = 999, ORIGIN = 1 );
  

From wieck at lists.slony.info  Tue Jun 17 10:48:18 2008
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue Jun 17 10:48:19 2008
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20080617174818.0DFAE290DA6@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv1488/slon

Modified Files:
	remote_worker.c 
Log Message:
Changed ducttape test 2 to use "wait for event" after subscriptions
in order to subscribe node 3 as soon as possible, which is when node
2 has finished the copy set operation and has done it's very first
sync processing.

This revealed a problem in the remote worker. Messages that forward
confirmations need to be inserted at the head of the internal message
queue in order to get processed in case the node is waiting for the
data provider to catch up before starting to copy set in a cascaded
setup.

Jan


Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.171
retrieving revision 1.172
diff -C2 -d -r1.171 -r1.172
*** remote_worker.c	28 May 2008 19:46:46 -0000	1.171
--- remote_worker.c	17 Jun 2008 17:48:15 -0000	1.172
***************
*** 2099,2102 ****
--- 2099,2113 ----
  					oldmsg->con_seqno = con_seqno;
  					strcpy(oldmsg->con_timestamp_c, con_timestamp_c);
+ 
+ 					/*
+ 					 * Move the message to the head of the queue
+ 					 */
+ 					if (oldmsg != node->message_head)
+ 					{
+ 						DLLIST_REMOVE(node->message_head,
+ 								node->message_tail, oldmsg);
+ 						DLLIST_ADD_HEAD(node->message_head,
+ 								node->message_tail, oldmsg);
+ 					}
  				}
  				pthread_mutex_unlock(&(node->message_lock));
***************
*** 2107,2111 ****
  
  	/*
! 	 * No message found. Create a new one and add it to the queue.
  	 */
  	msg = (SlonWorkMsg_confirm *)
--- 2118,2122 ----
  
  	/*
! 	 * No message found. Create a new one and stick it in front of the queue.
  	 */
  	msg = (SlonWorkMsg_confirm *)
***************
*** 2118,2122 ****
  	strcpy(msg->con_timestamp_c, con_timestamp_c);
  
! 	DLLIST_ADD_TAIL(node->message_head, node->message_tail,
  					(SlonWorkMsg *) msg);
  
--- 2129,2133 ----
  	strcpy(msg->con_timestamp_c, con_timestamp_c);
  
! 	DLLIST_ADD_HEAD(node->message_head, node->message_tail,
  					(SlonWorkMsg *) msg);
  

From wieck at lists.slony.info  Tue Jun 17 10:48:17 2008
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue Jun 17 10:48:20 2008
Subject: [Slony1-commit] slony1-engine/src/ducttape test_2_pgbench.in
Message-ID: <20080617174817.EF81D290BF0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv1488/ducttape

Modified Files:
	test_2_pgbench.in 
Log Message:
Changed ducttape test 2 to use "wait for event" after subscriptions
in order to subscribe node 3 as soon as possible, which is when node
2 has finished the copy set operation and has done it's very first
sync processing.

This revealed a problem in the remote worker. Messages that forward
confirmations need to be inserted at the head of the internal message
queue in order to get processed in case the node is waiting for the
data provider to catch up before starting to copy set in a cascaded
setup.

Jan


Index: test_2_pgbench.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_2_pgbench.in,v
retrieving revision 1.7
retrieving revision 1.8
diff -C2 -d -r1.7 -r1.8
*** test_2_pgbench.in	28 May 2008 19:46:46 -0000	1.7
--- test_2_pgbench.in	17 Jun 2008 17:48:15 -0000	1.8
***************
*** 33,38 ****
  DEBUG_LEVEL=2
  
! PGBENCH_SCALE=1
! PGBENCH_CLIENTS=5
  PGBENCH_TRANS=`expr 50000 / $PGBENCH_CLIENTS`
  
--- 33,38 ----
  DEBUG_LEVEL=2
  
! PGBENCH_SCALE=3
! PGBENCH_CLIENTS=6
  PGBENCH_TRANS=`expr 50000 / $PGBENCH_CLIENTS`
  
***************
*** 270,288 ****
  
  	subscribe set ( id = 1, provider = 1, receiver = 2, forward = yes );
- _EOF_
  
! echo ""
! echo "**********************************************************************"
! echo "**** $DB2 should now be copying data and attempting to catch up."
! echo "**********************************************************************"
! echo ""
  
- ######################################################################
- # Setup DB2 as a subscriber node and let it subscribe the replication
- # set of the running pgbench
- ######################################################################
- # echo -n "**** Hit enter when node 2 is done with copy set"
- # read line
- sleep `expr 60 \* $PGBENCH_SCALE`
  echo "**** creating database for Node 3"
  if ! createdb $DB3 ; then
--- 270,282 ----
  
  	subscribe set ( id = 1, provider = 1, receiver = 2, forward = yes );
  
! 	echo '**** Waiting for SUBSCRIBE_SET to reach Origin';
! 	wait for event (origin = 1, confirmed = 1, wait on = 1, timeout = 0);
! 	echo '**** Waiting for node 2 to process ENABLE_SUBSCRIPTION';
! 	sync (id = 1);
! 	wait for event (origin = 1, confirmed = 2, wait on = 2, timeout = 0);
! 	echo '**** Subscription of node 2 complete';
! _EOF_
  
  echo "**** creating database for Node 3"
  if ! createdb $DB3 ; then
***************
*** 345,358 ****
  
  	subscribe set ( id = 1, provider = 2, receiver = 3, forward = no );
  _EOF_
  
  echo ""
  echo "**********************************************************************"
! echo "**** $DB3 should now be copying data and attempting to catch up."
  echo "**********************************************************************"
  echo ""
  
- 
- 
  echo -n "**** waiting for pgbench to finish "
  while kill -0 $pgbench_pid 2>/dev/null ; do
--- 339,357 ----
  
  	subscribe set ( id = 1, provider = 2, receiver = 3, forward = no );
+ 
+ 	echo '**** Waiting for SUBSCRIBE_SET to reach Origin';
+ 	wait for event (origin = 2, confirmed = 1, wait on = 1, timeout = 0);
+ 	echo '**** Waiting for node 3 to process ENABLE_SUBSCRIPTION';
+ 	sync (id = 1);
+ 	wait for event (origin = 1, confirmed = 3, wait on = 3, timeout = 0);
+ 	echo '**** Subscription of node 3 complete';
  _EOF_
  
  echo ""
  echo "**********************************************************************"
! echo "**** $DB3 should now be catching up."
  echo "**********************************************************************"
  echo ""
  
  echo -n "**** waiting for pgbench to finish "
  while kill -0 $pgbench_pid 2>/dev/null ; do
***************
*** 361,373 ****
  done
  echo "**** pgbench finished"
- echo "**** please terminate the replication engines when caught up."
- wait $slon1_pid
- wait $slon2_pid
- wait $slon3_pid
  
! kill $pgbench_pid 2>/dev/null
! kill $slon1_pid 2>/dev/null
! kill $slon2_pid 2>/dev/null
! kill $slon3_pid 2>/dev/null
  
  ./compare_pgbench_dumps $DB1 $DB2
--- 360,381 ----
  done
  echo "**** pgbench finished"
  
! ######################################################################
! # Wait for nodes 2 and 3 to catch up.
! ######################################################################
! sleep 10
! slonik <<_EOF_
! 	cluster name = T1;
! 	node 1 admin conninfo = 'dbname=$DB1';
! 	node 2 admin conninfo = 'dbname=$DB2';
! 	node 3 admin conninfo = 'dbname=$DB3';
! 
! 	echo '**** Waiting for nodes 2 and 3 to catch up';
! 	sync (id = 1);
! 	wait for event (origin = 1, confirmed = all, wait on = 1, timeout = 0);
! 	echo '**** All nodes done catching up';
! _EOF_
! 
! echo "You may terminate the replication engines now."
  
  ./compare_pgbench_dumps $DB1 $DB2

From cbbrowne at lists.slony.info  Thu Jun 19 13:34:02 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Thu Jun 19 13:34:04 2008
Subject: [Slony1-commit] slony1-engine/doc/adminguide slonik_ref.sgml
Message-ID: <20080619203402.DC2882900F9@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv18938

Modified Files:
      Tag: REL_1_2_STABLE
	slonik_ref.sgml 
Log Message:
Fix typo in WAIT FOR EVENT requests in documentation per Dane Miller


Index: slonik_ref.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/slonik_ref.sgml,v
retrieving revision 1.61.2.12
retrieving revision 1.61.2.13
diff -C2 -d -r1.61.2.12 -r1.61.2.13
*** slonik_ref.sgml	11 Mar 2008 15:54:30 -0000	1.61.2.12
--- slonik_ref.sgml	19 Jun 2008 20:34:00 -0000	1.61.2.13
***************
*** 1261,1268 ****
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 2);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 2, WAIT FOR=1);
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 3);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 3, WAIT FOR=1);
       MERGE SET ( ID = 1, ADD ID = 999, ORIGIN = 1 );
      </programlisting>
--- 1261,1268 ----
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 2);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 2, WAIT ON=1);
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 3);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 3, WAIT ON=1);
       MERGE SET ( ID = 1, ADD ID = 999, ORIGIN = 1 );
      </programlisting>
***************
*** 2810,2817 ****
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 2);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 2, WAIT FOR=1);
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 3);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 3, WAIT FOR=1);
       MERGE SET ( ID = 1, ADD ID = 999, ORIGIN = 1 );
      </programlisting>
--- 2810,2817 ----
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 2);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 2, WAIT ON=1);
       SUBSCRIBE SET (ID = 999, PROVIDER = 1, RECEIVER = 3);
       SYNC (ID=1);
!      WAIT FOR EVENT (ORIGIN = 1, CONFIRMED = 3, WAIT ON=1);
       MERGE SET ( ID = 1, ADD ID = 999, ORIGIN = 1 );
      </programlisting>

From cbbrowne at lists.slony.info  Thu Jun 19 13:35:41 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Thu Jun 19 13:35:42 2008
Subject: [Slony1-commit] slony1-engine/doc/adminguide monitoring.sgml
Message-ID: <20080619203541.4519F290124@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv19325

Modified Files:
	monitoring.sgml 
Log Message:
Add some notes on the preference, in modern times, for Perl DBI rather
than the older "Pg" module


Index: monitoring.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/monitoring.sgml,v
retrieving revision 1.43
retrieving revision 1.44
diff -C2 -d -r1.43 -r1.44
*** monitoring.sgml	26 May 2008 18:46:21 -0000	1.43
--- monitoring.sgml	19 Jun 2008 20:35:39 -0000	1.44
***************
*** 156,159 ****
--- 156,166 ----
  script; if you don't like the values, pick your favorites!</para>
  
+ <note><para> Note that there are two versions, one using the
+ <quote>classic</quote> <filename>Pg.pm</filename> Perl module for
+ accessing &postgres; databases, and one, with <filename>dbi</filename>
+ in its name, that uses the newer Perl <function> DBI</function>
+ interface.  It is likely going to be easier to find packaging for
+ <function>DBI</function>. </para> </note>
+ 
  </sect2>
  

From cbbrowne at lists.slony.info  Fri Jun 20 15:19:13 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 20 15:19:14 2008
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20080620221913.46EBE2902B8@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv32628

Modified Files:
      Tag: REL_1_2_STABLE
	remote_worker.c 
Log Message:
There are a few memory leaks in the slon process because some results of
PQexec() calls are not always cleared, in remoteListenThread_main()
(remote_listen.c) and in copy_set() (remote_worker.c) functions.

- patch per Damian Quiroga
http://bugs.slony.info/bugzilla/show_bug.cgi?id=52

Note that these queries are already restructured in CVS HEAD, so this
only affects the 1.2 branch.



Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.124.2.33
retrieving revision 1.124.2.34
diff -C2 -d -r1.124.2.33 -r1.124.2.34
*** remote_worker.c	17 Mar 2008 15:12:56 -0000	1.124.2.33
--- remote_worker.c	20 Jun 2008 22:19:10 -0000	1.124.2.34
***************
*** 3052,3055 ****
--- 3052,3056 ----
  		/* Are we running on < PG 7.4???  result =	*/
  		nodeon73 = atoi(PQgetvalue(res4, 0, 0));
+ 		PQclear(res4);
  
  		slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: "
***************
*** 3090,3093 ****
--- 3091,3095 ----
  			if (rc < 0)
  			{
+ 				PQclear(res2);
  				slon_disconnectdb(pro_conn);
  				dstring_free(&query1);
***************
*** 3132,3135 ****
--- 3134,3138 ----
  			return -1;
  		}
+ 		PQclear(res3);
  
  		/*
***************
*** 3152,3156 ****
  				PQfreemem(copydata);
  				PQputCopyEnd(loc_dbconn, "Slony-I: copy set operation failed");
- 				PQclear(res3);
  				PQclear(res2);
  				PQclear(res1);
--- 3155,3158 ----
***************
*** 3174,3178 ****
  					PQfreemem(copydata);
  					PQputCopyEnd(loc_dbconn, "Slony-I: copy set operation");
- 					PQclear(res3);
  					PQclear(res2);
  					PQclear(res1);
--- 3176,3179 ----
***************
*** 3199,3203 ****
  					 node->no_id, PQerrorMessage(pro_dbconn));
  			PQputCopyEnd(loc_dbconn, "Slony-I: copy set operation failed");
- 			PQclear(res3);
  			PQclear(res2);
  			PQclear(res1);
--- 3200,3203 ----
***************
*** 3257,3260 ****
--- 3257,3261 ----
  			return -1;
  		}
+ 		PQclear(res2);
  		res2 = PQgetResult(loc_dbconn);
  		if (PQresultStatus(res2) != PGRES_COMMAND_OK)

From cbbrowne at lists.slony.info  Fri Jun 20 15:23:51 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 20 15:23:53 2008
Subject: [Slony1-commit] slony1-engine/src/backend slony1_funcs.sql
Message-ID: <20080620222352.0796C290DD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv649/src/backend

Modified Files:
      Tag: REL_1_2_STABLE
	slony1_funcs.sql 
Log Message:
Record release notes for 1.2.15, bump version number so this does not get
missed later.


Index: slony1_funcs.sql
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.sql,v
retrieving revision 1.98.2.27
retrieving revision 1.98.2.28
diff -C2 -d -r1.98.2.27 -r1.98.2.28
*** slony1_funcs.sql	7 Mar 2008 19:06:49 -0000	1.98.2.27
--- slony1_funcs.sql	20 Jun 2008 22:23:49 -0000	1.98.2.28
***************
*** 431,435 ****
  as '
  begin
! 	return 14;
  end;
  ' language plpgsql;
--- 431,435 ----
  as '
  begin
! 	return 15;
  end;
  ' language plpgsql;

From cbbrowne at lists.slony.info  Fri Jun 20 15:23:51 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 20 15:23:53 2008
Subject: [Slony1-commit] slony1-engine RELEASE config.h.in
Message-ID: <20080620222351.D0C9729017D@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv649

Modified Files:
      Tag: REL_1_2_STABLE
	RELEASE config.h.in 
Log Message:
Record release notes for 1.2.15, bump version number so this does not get
missed later.


Index: RELEASE
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/RELEASE,v
retrieving revision 1.1.2.29
retrieving revision 1.1.2.30
diff -C2 -d -r1.1.2.29 -r1.1.2.30
*** RELEASE	16 May 2008 17:31:47 -0000	1.1.2.29
--- RELEASE	20 Jun 2008 22:23:49 -0000	1.1.2.30
***************
*** 1,3 ****
--- 1,9 ----
  $Id$
+ 
+ Release 1.2.15
+ 
+ - Fix memory leak
+   http://bugs.slony.info/bugzilla/show_bug.cgi?id=52
+ 
  RELEASE 1.2.14
  - Fix typo in configure-replication.sh (missing CR)

Index: config.h.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/config.h.in,v
retrieving revision 1.17.2.12
retrieving revision 1.17.2.13
diff -C2 -d -r1.17.2.12 -r1.17.2.13
*** config.h.in	7 Mar 2008 19:06:49 -0000	1.17.2.12
--- config.h.in	20 Jun 2008 22:23:49 -0000	1.17.2.13
***************
*** 13,18 ****
  #define SLONY_I_CONFIG_H
  
! #define SLONY_I_VERSION_STRING	"1.2.14"
! #define SLONY_I_VERSION_STRING_DEC 1,2,14
  
  #ifndef PG_VERSION_MAJOR
--- 13,18 ----
  #define SLONY_I_CONFIG_H
  
! #define SLONY_I_VERSION_STRING	"1.2.15"
! #define SLONY_I_VERSION_STRING_DEC 1,2,15
  
  #ifndef PG_VERSION_MAJOR

From cbbrowne at lists.slony.info  Mon Jun 23 09:04:57 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Mon Jun 23 09:04:59 2008
Subject: [Slony1-commit] slony1-engine/doc/adminguide slonik_ref.sgml
Message-ID: <20080623160457.A72C7290D76@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv16299

Modified Files:
	slonik_ref.sgml 
Log Message:
Indicate memory usage for table IDs.


Index: slonik_ref.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/slonik_ref.sgml,v
retrieving revision 1.86
retrieving revision 1.87
diff -C2 -d -r1.86 -r1.87
*** slonik_ref.sgml	6 Jun 2008 21:01:43 -0000	1.86
--- slonik_ref.sgml	23 Jun 2008 16:04:55 -0000	1.87
***************
*** 1371,1375 ****
  	 determines the order in which the tables are locked in a <xref
  	  linkend="stmtlockset"> command for example. So
! 	 these numbers should represent any applicable table hierarchy
  	 to make sure the <application>slonik</application> command
  	 scripts do not deadlock at any critical
--- 1371,1375 ----
  	 determines the order in which the tables are locked in a <xref
  	  linkend="stmtlockset"> command for example. So
! 	 these numbers might represent any applicable table hierarchy
  	 to make sure the <application>slonik</application> command
  	 scripts do not deadlock at any critical
***************
*** 1378,1382 ****
           <para> This ID must be unique across all sets; you cannot
           have two tables in the same cluster with the same
!          ID. </para></listitem>
        </varlistentry>
        <varlistentry><term><literal> FULLY QUALIFIED NAME = 'string' </literal></term>
--- 1378,1392 ----
           <para> This ID must be unique across all sets; you cannot
           have two tables in the same cluster with the same
!          ID. </para>
! 
! 	 <para> Note that &slony1; generates an in-memory array
! 	 indicating all of the fully qualified table node; if you use
! 	 large table ID numbers, this leads to wastage of memory.
! 	 Each potential table ID consumes a pointer to a char,
! 	 commonly costing 4 bytes per table ID on 32 bit
! 	 architectures, and 8 bytes per table ID on 64 bit
! 	 architectures. </para>
! 
!          </listitem>
        </varlistentry>
        <varlistentry><term><literal> FULLY QUALIFIED NAME = 'string' </literal></term>

From cbbrowne at lists.slony.info  Wed Jun 25 09:02:41 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed Jun 25 09:02:42 2008
Subject: [Slony1-commit] slony1-engine/tools test_slony_state.pl
Message-ID: <20080625160241.37934290BF7@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/tools
In directory main.slony.info:/tmp/cvs-serv7712

Modified Files:
	test_slony_state.pl 
Log Message:
Add comment to test_slony_state.pl indicating that people may prefer
to use DBI rather than the older Pg module


Index: test_slony_state.pl
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tools/test_slony_state.pl,v
retrieving revision 1.7
retrieving revision 1.8
diff -C2 -d -r1.7 -r1.8
*** test_slony_state.pl	2 Jan 2007 19:34:11 -0000	1.7
--- test_slony_state.pl	25 Jun 2008 16:02:39 -0000	1.8
***************
*** 9,12 ****
--- 9,15 ----
  # cluster.
  
+ # Note: This uses the legacy "Pg" module; it is likely that the other
+ # version of this script that uses DBI is preferable to use.
+ 
  use Pg;
  use Getopt::Long;

From cbbrowne at lists.slony.info  Wed Jun 25 09:03:39 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed Jun 25 09:03:40 2008
Subject: [Slony1-commit] slony1-engine RELEASE-2.0
Message-ID: <20080625160339.B551E29001C@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv7786

Modified Files:
	RELEASE-2.0 
Log Message:
Note in release notes the fix to ACCEPT_SET event handling


Index: RELEASE-2.0
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/RELEASE-2.0,v
retrieving revision 1.18
retrieving revision 1.19
diff -C2 -d -r1.18 -r1.19
*** RELEASE-2.0	26 May 2008 21:46:04 -0000	1.18
--- RELEASE-2.0	25 Jun 2008 16:03:37 -0000	1.19
***************
*** 187,188 ****
--- 187,193 ----
    - FAILOVER - BACKUP NODE
    - EXECUTE SCRIPT - EVENT NODE
+ 
+ - Fixed a problem where ACCEPT_SET would wait for the corresponding
+   MOVE_SET or FAILOVER_SET to arrive while holding an exclusive lock
+   on sl_config_lock, preventing the other remote worker to process
+   that event.

From cbbrowne at lists.slony.info  Fri Jun 27 13:16:07 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 27 13:16:09 2008
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20080627201607.0B38C290E14@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv16503

Modified Files:
	remote_worker.c 
Log Message:
Clear a result set, thereby resolving a memory leak.


Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.172
retrieving revision 1.173
diff -C2 -d -r1.172 -r1.173
*** remote_worker.c	17 Jun 2008 17:48:15 -0000	1.172
--- remote_worker.c	27 Jun 2008 20:16:04 -0000	1.173
***************
*** 2867,2870 ****
--- 2867,2871 ----
  			if (rc < 0)
  			{
+ 					PQclear(res3);
  				slon_disconnectdb(pro_conn);
  				dstring_free(&query1);

From cbbrowne at lists.slony.info  Fri Jun 27 13:17:20 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 27 13:17:21 2008
Subject: [Slony1-commit] slony1-engine/doc/adminguide slonik_ref.sgml
Message-ID: <20080627201720.776732901C0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv16572

Modified Files:
	slonik_ref.sgml 
Log Message:
a) Mention a bottleneck where having Very Large table IDs leads to memory
   bloat

b) Discuss effective use of WAIT FOR EVENT


Index: slonik_ref.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/slonik_ref.sgml,v
retrieving revision 1.87
retrieving revision 1.88
diff -C2 -d -r1.87 -r1.88
*** slonik_ref.sgml	23 Jun 2008 16:04:55 -0000	1.87
--- slonik_ref.sgml	27 Jun 2008 20:17:17 -0000	1.88
***************
*** 279,283 ****
      <para>
       Describes how the <application>slonik</application> utility can
!      reach a nodes database in the cluster from where it is run
       (likely the DBA's workstation). The conninfo string is the string
       agrument given to the <function>PQconnectdb()</function> libpq
--- 279,283 ----
      <para>
       Describes how the <application>slonik</application> utility can
!      reach a node's database in the cluster from where it is run
       (likely the DBA's workstation). The conninfo string is the string
       agrument given to the <function>PQconnectdb()</function> libpq
***************
*** 1381,1390 ****
  
  	 <para> Note that &slony1; generates an in-memory array
! 	 indicating all of the fully qualified table node; if you use
! 	 large table ID numbers, this leads to wastage of memory.
! 	 Each potential table ID consumes a pointer to a char,
! 	 commonly costing 4 bytes per table ID on 32 bit
! 	 architectures, and 8 bytes per table ID on 64 bit
! 	 architectures. </para>
  
           </listitem>
--- 1381,1390 ----
  
  	 <para> Note that &slony1; generates an in-memory array
! 	 indicating all of the fully qualified table names; if you use
! 	 large table ID numbers, the sparsely-utilized array can lead
! 	 to substantial wastage of memory.  Each potential table ID
! 	 consumes a pointer to a char, commonly costing 4 bytes per
! 	 table ID on 32 bit architectures, and 8 bytes per table ID on
! 	 64 bit architectures. </para>
  
           </listitem>
***************
*** 2828,2839 ****
      
      <para> <application>Slonik</application> remembers the last event
!      generated on every node during script execution (events generated
!      by earlier calls are currently not checked). In certain situations
!      it is necessary that events generated on one node (such as
!      <command>CREATE SET</command>) are processed on another node
!      before issuing more commands (for instance, <xref
!       linkend="stmtsubscribeset">).  <command>WAIT FOR EVENT</command> may be
!      used to cause the <application>slonik</application> script to wait
!      until the subscriber node is ready for the next action.
      </para>
      
--- 2828,2840 ----
      
      <para> <application>Slonik</application> remembers the last event
!     generated on every node during script execution (events generated
!     by earlier calls are currently not checked). In certain situations
!     it is necessary that events generated on one node (such as
!     <command>CREATE SET</command>) are processed on another node
!     before issuing more commands (for instance, <xref
!     linkend="stmtsubscribeset">).  <command>WAIT FOR EVENT</command>
!     may be used to cause the <application>slonik</application> script
!     to wait for confirmation of an event, which hopefully means that
!     the subscriber node is ready for the next action.
      </para>
      
***************
*** 2903,2907 ****
     linkend="slonik"> script that <xref linkend="stmtsubscribeset"> is
     complete, you may submit a <xref linkend="stmtsync"> event after
!    the subscription, and have the WAIT request wait on that
     <command>SYNC</command> event, as follows. </para>
      <programlisting>
--- 2904,2908 ----
     linkend="slonik"> script that <xref linkend="stmtsubscribeset"> is
     complete, you may submit a <xref linkend="stmtsync"> event after
!    the subscription, and have the WAIT request wait on the
     <command>SYNC</command> event, as follows. </para>
      <programlisting>

From cbbrowne at lists.slony.info  Fri Jun 27 13:31:08 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 27 13:31:09 2008
Subject: [Slony1-commit] slony1-www index.php layout.php
Message-ID: <20080627203108.64512290E4C@main.slony.info>

Update of /home/cvsd/slony1/slony1-www
In directory main.slony.info:/home/community/slony/htdocs

Modified Files:
	index.php layout.php 
Log Message:
Update PHP code to accomodate v2.0 of Slony-I



Index: index.php
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/index.php,v
retrieving revision 1.11
retrieving revision 1.12
diff -C2 -d -r1.11 -r1.12
*** index.php	3 Apr 2007 15:10:45 -0000	1.11
--- index.php	27 Jun 2008 20:31:06 -0000	1.12
***************
*** 30,33 ****
--- 30,34 ----
         if ($_GET["version"] == "1.1") $version = "1.1";
         if ($_GET["version"] == "1.2") $version = "1.2";
+        if ($_GET["version"] == "2.0") $version = "2.0";
         $platform = "";
         if ($_GET["platform"]=="source") $platform = "source";
***************
*** 135,142 ****
          if ($fp){
                  $text="";
                  while (!feof($fp)){
  			 $buf=fgets($fp,256);
  			 if (strpos($buf,'---')!==false){
! 				if ($text != "") echo layout_defaultblock($title,$link,$text);
  				$text = "";
  				$title = trim(@fgets($fp,256));
--- 136,149 ----
          if ($fp){
                  $text="";
+ 		$article_count = 0;
                  while (!feof($fp)){
  			 $buf=fgets($fp,256);
  			 if (strpos($buf,'---')!==false){
! 				if ($article_count < 5){
! 					if ($text != "") echo layout_defaultblock($title,$link,$text);
! 				} else {
! 					break;
! 				}
! 				$article_count++;
  				$text = "";
  				$title = trim(@fgets($fp,256));
***************
*** 155,162 ****
          if ($fp){
                  $text="";
                  while (!feof($fp)){
  			 $buf=fgets($fp,256);
  			 if (strpos($buf,'---')!==false){
! 				if ($text != "") echo layout_defaultblock($title,$link,$text,$stamp,$poster);
  				$text = "";
  				$title = trim(@fgets($fp,256));
--- 162,175 ----
          if ($fp){
                  $text="";
+ 		$article_count = 0;
                  while (!feof($fp)){
  			 $buf=fgets($fp,256);
  			 if (strpos($buf,'---')!==false){
! 				if ($article_count < 12){
! 					if ($text != "") echo layout_defaultblock($title,$link,$text,$stamp,$poster);
! 				} else {
!                                         break;
!                                 }
!                                 $article_count++;
  				$text = "";
  				$title = trim(@fgets($fp,256));

Index: layout.php
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/layout.php,v
retrieving revision 1.10
retrieving revision 1.11
diff -C2 -d -r1.10 -r1.11
*** layout.php	13 Nov 2007 21:00:29 -0000	1.10
--- layout.php	27 Jun 2008 20:31:06 -0000	1.11
***************
*** 136,138 ****
--- 136,152 ----
  }
  
+ function between ($pre, $post, &$data, $n = 1) {
+         $offset = 0;
+         for (; $n > 0; $n--) {
+                 $prepos = strpos($data, $pre, $offset);
+                 if ($prepos == 0) return false;
+                 $prepos += strlen($pre);
+                 $postpos = strpos($data, $post, $prepos);
+                 if ($postpos == 0) return false;
+                 $offset = $postpos + strlen($post);
+         }
+         $taglen = $postpos - $prepos;
+         return trim(substr($data, $prepos, $taglen));
+ }
+ 
  ?>

From cbbrowne at lists.slony.info  Fri Jun 27 13:38:30 2008
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri Jun 27 13:38:31 2008
Subject: [Slony1-commit] slony1-www/content frontpage.txt news.txt
Message-ID: <20080627203830.721C3290E4C@main.slony.info>

Update of /home/cvsd/slony1/slony1-www/content
In directory main.slony.info:/tmp/cvs-serv18500/content

Modified Files:
	frontpage.txt news.txt 
Log Message:
Add notes on 2.0.0 rc1


Index: frontpage.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/frontpage.txt,v
retrieving revision 1.27
retrieving revision 1.28
diff -C2 -d -r1.27 -r1.28
*** frontpage.txt	16 May 2008 17:48:09 -0000	1.27
--- frontpage.txt	27 Jun 2008 20:38:28 -0000	1.28
***************
*** 14,17 ****
--- 14,26 ----
  
  ---
+ Slony-I 2.0.0 first release available
+ 
+ <P> Version 2.0.0 RC1 is now <a href=
+ "http://slony.info/downloads/2.0/source/slony1-2.0.0-rc1.tar.bz2">
+ available.</a>
+ 
+ See the "news" area for more details, including a copy of the release
+ notes.
+ ---
  Slony-I 1.2.14 available
  

Index: news.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/news.txt,v
retrieving revision 1.44
retrieving revision 1.45
diff -C2 -d -r1.44 -r1.45
*** news.txt	16 May 2008 17:48:09 -0000	1.44
--- news.txt	27 Jun 2008 20:38:28 -0000	1.45
***************
*** 11,14 ****
--- 11,220 ----
  <!-- Please keep this item at the top of the news list -->
  ---
+ Slony-I 2.0.0 first RC available
+ http://main.slony.info/downloads/2.0/source/slony1-2.0.0-rc1.tar.bz2
+ 2008-06-27
+ Chris Browne
+ 
+ Now available is a first release candidate of version 2.0 of Slony-I,
+ involving a large number of enhancements done over the last year or
+ so.<br>
+ 
+ <b>Differences from 1.2 stream</b>
+ 
+ <ul>
+ <li> Removal of TABLE ADD KEY
+ 
+ <li> It drops all support for databases prior to Postgres version 8.3.
+ 
+ <P> This is required because we now make use of new functionality in
+ Postgres, namely the trigger and rule support for session replication
+ role. As of now, every node (origin/subscriber/mixed) can be dumped with
+ pg_dump and result in a consistent snapshot of the database.
+ 
+ <li> Still need alterTableRestore() for the upgrade from 1.2.x to 2.0.
+ upgradeSchema() will restore the system catalog to a consistent
+ state and define+configure the new versions of the log and deny_access
+ triggers. 
+ 
+ <li> Fix EXECUTE SCRIPT so that it records the ev_seqno for WAIT FOR EVENT
+ and make sure all DDL is executed in session_replication_role "local"
+ on the origin as well as all subscribers. This will cause the slony
+ triggers to ignore all DML statements while user triggers follow the
+ regular configuration options for ENABLE [REPLICA/ALWAYS] or DISABLE.
+ 
+ <li> Let the logshipping files also switch to session_replication_role =
+ "replica" or "local" (for DDL).
+ 
+ <li> Sequence tracking becomes enormously less expensive; rather than
+ polling *ALL* sequence values for each and every SYNC, the slon
+ stores the last value, and only records entries in sl_seqlog when
+ the value changes from that last value.  If most sequences are
+ relatively inactive, they won't require entries in sl_seqlog very
+ often.
+ 
+ <li> Change to tools/slony1_dump.sh (used to generate log shipping dump);
+   change quoting of "\\\backslashes\\\" to get rid of warning
+ 
+ <li> Cleanup thread revised to push most of the logic to evaluate which
+   tables are to be vacuumed into a pair of stored functions.
+ 
+ <P>  This fairly massively simplifies the C code.
+ 
+ <li> Revised logging levels so that most of the interesting messages are
+   spit out at SLON_CONFIG and SLON_INFO levels.  This can allow users
+   to drop out the higher DEBUG levels and still have useful logs.
+ 
+ <li> Changed log selection query to be less affected by long running
+   transaction.  This should help, in particular, the scenario where
+   it takes a very long time to subscribe to a set.  In that situation,
+   we have had the problem where applying the later SYNCs gets
+   extremely costly as the query selecting logs wound up forced into a
+   Seq Scan rather than an index scan.
+ 
+ <li> Removed all support for STORE/DROP TRIGGER commands. Users 
+   should use the ALTER TABLE [ENABLE|DISABLE] TRIGGER functionality 
+   available directly in Postgres from now on.
+ 
+ <li> Improve Wiki page generation script so that it has an option to add in
+   a set of [[Category:Foo]] tags to allow automated categorization.
+ 
+ <li> Documented how to fix tables that presently use Slony-I-generated
+   primary key candidates generated by TABLE ADD KEY
+ 
+ <li> Add some specific timestamps during the 2007 "DST rule change
+   ambiguous time" (e.g. - during the period which, under former rules,
+   was not DST, but which now is, due to the recent rule change).
+ 
+ <P>  Bill Moran ran into some problems with such dates; varying
+   PostgreSQL versions returned somewhat varying results.  This wasn't
+   a Slony-I problem; the data was indeed being replicated correctly.
+ 
+ <li> Made configure a bit smarter about automatically locating
+   docbook2man-spec.pl on Debian, Fedora, BSD.
+ 
+ <li> Tests now generate |pipe|delimited|output| indicating a number of
+   attributes of each test, including system/platform information,
+   versions, and whether or not the test succeeded or failed.
+ 
+ <li> Revised functions that generate listen paths
+ 
+ <li> tools/configure-replication.sh script permits specifying a
+   destination path for generated config files.  This enables using
+   it within automated processes, and makes it possible to use it to
+   generate Slonik scripts for tests in the "test bed," which has
+   the further merit of making tools/configure-replication.sh a
+   regularly-regression-tested tool.
+ 
+ <li> Fix to bug #15 - where long cluster name (>40 chars) leads to
+   things breaking when an index name is created that contains
+   the cluster name.
+ 
+ <ul>
+   <li> Warn upon creating a long cluster name.
+   <li> Give a useful exception that explains the cause rather
+      than merely watching index creation fail.
+ </ul>
+ 
+    See <a href="http://www.slony.info/bugzilla/show_bug.cgi?id=15"> Bug #15 </a>
+ 
+ <li> Fix for bug #19 - added a script to help the administrator
+   search for any triggers on the database that is the source for
+   a schema that is to be used to initialize a log shipping node.
+ 
+ <p>  The problem is that some/most/sometimes all triggers and rules
+   are likely to need to be dropped from the log shipping node lest
+   they interfere with replication.
+ 
+ <li> Elimination of custom "xxid" functions
+ 
+ <P>  PostgreSQL 8.3 introduces a set of "txid" functions and a
+   "txid_snapshot" type, which eliminates the need for Slony-I to have
+   its own C functions for doing XID comparisons.
+ 
+ <P>  Note that this affects the structure of sl_event, and leads to some
+   changes in the coding of the regression tests.
+ 
+ <P>  This eliminates the src/xxid directory and contents
+ 
+ <li> All of the interesting cleanup work is now done in the stored
+   function, cleanupEvent(interval, boolean).
+ 
+ <P>  Interesting side-effect: You can now induce a cleanup manually,
+   which will be useful for testing.
+ 
+ <li> cleanupEvent now has two parameters, passed in from slon config
+   parameters:
+ 
+ <P>  interval - cleanup_interval (default '10 minutes')
+ 
+ <P>   This controls how quickly old events are trimmed out.  It used to
+    be a hard-coded value.
+ 
+ <P>   Old events are trimmed out once the confirmations are aged by
+    (cleanup_interval).
+ 
+ <P>   This then controls when the data in sl_log_1/sl_log_2 can be
+    dropped.
+ 
+ <P>   Data in <i>those</i> tables is deleted when it is older than the
+    earliest XID still captured in sl_event.
+ 
+ <p>  boolean - cleanup_deletelogs (default 'false')
+ 
+ <P>   This controls whether or not we DELETE data from sl_log_1/sl_log_2
+ 
+ <P>   By default, we now NEVER delete data from the log tables; we
+    instead use TRUNCATE.
+ 
+ <li> We now consider initiating a log switch every time cleanupEvent()
+   runs.
+ 
+ <P>  If the call to logswitch_finish() indicates that there was no log
+   switch in progress, we initiate one.
+ 
+ <P>  This means that log switches will be initiated almost as often as
+   possible.  That's a policy well worth debating :-).
+ 
+ <li> logswitch_finish() changes a fair bit...
+ 
+ <P>  It uses the same logic as in cleanupEvent() to determine if there
+   are any *relevant* tuples left in sl_log_[whatever], rather than
+   (potentially) scanning the table to see if there are any undeleted
+   tuples left.
+ 
+ <li> At slon startup time, it logs (at SLON_CONFIG level) all of the
+ parameter values.  Per <a
+ href="http://www.slony.info/bugzilla/show_bug.cgi?id=21"> Bugzilla
+ entry #21.</a>
+ 
+ <li> New slonik "CLONE PREPARE" and "CLONE FINISH" command to assist in
+   creating duplicate nodes based on taking a copy of some existing
+   subscriber node.
+ 
+ <li> We no longer use LISTEN/NOTIFY for events and confirmations, which
+   eliminates the usage that has caused pg_listener bloat.  We instead
+   poll against the event table.
+ 
+ <li> Various instances where slonik would use a default node ID of 1 have
+   been changed to remove this.
+ 
+ <P>  Slonik scripts may need to be changed to indicate an EVENT NODE (or
+   similar) after migration to v2.0 as a result.
+ 
+ <P>  The slonik commands involved:
+ 
+ <ul>
+   <li> STORE NODE - EVENT NODE
+   <li> DROP NODE - EVENT NODE
+   <li> WAIT FOR EVENT - WAIT ON
+   <li> FAILOVER - BACKUP NODE
+   <li> EXECUTE SCRIPT - EVENT NODE
+ </ul>
+ <li> Fixed a problem where ACCEPT_SET would wait for the corresponding
+   MOVE_SET or FAILOVER_SET to arrive while holding an exclusive lock
+   on sl_config_lock, preventing the other remote worker to process
+   that event.
+ </ul>
+ ---
  Slony-I 1.2.14 available
  http://main.slony.info/downloads/1.2/source/slony1-1.2.14.tar.bz2

