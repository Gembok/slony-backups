From cbbrowne at lists.slony.info  Fri May  1 08:18:24 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri May  1 08:18:26 2009
Subject: [Slony1-commit] slony1-engine/src/slon cleanup_thread.c
Message-ID: <20090501151824.6F441290C42@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv12311

Modified Files:
      Tag: REL_2_0_STABLE
	cleanup_thread.c 
Log Message:
Fix problem with interpretation of return code for VACUUM/ANALYZE

Per Melvin Davidson


Index: cleanup_thread.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/cleanup_thread.c,v
retrieving revision 1.45
retrieving revision 1.45.2.1
diff -C2 -d -r1.45 -r1.45.2.1
*** cleanup_thread.c	28 May 2008 19:09:37 -0000	1.45
--- cleanup_thread.c	1 May 2009 15:18:22 -0000	1.45.2.1
***************
*** 190,193 ****
--- 190,194 ----
  				char	   *tab_nspname = PQgetvalue(res, t, 0);
  				char	   *tab_relname = PQgetvalue(res, t, 1);
+ 				ExecStatusType vrc;
  
  				slon_log(SLON_DEBUG1, "cleanupThread: %s analyze \"%s\".%s;\n",
***************
*** 197,209 ****
  							 vacuum_action, tab_nspname, tab_relname);
  				res2 = PQexec(dbconn, dstring_data(&query_pertbl));
! 				if (PQresultStatus(res) != PGRES_COMMAND_OK)	/* query error */
  				{
  					slon_log(SLON_ERROR,
! 							 "cleanupThread: \"%s\" - %s",
! 					dstring_data(&query_pertbl), PQresultErrorMessage(res2));
  
  					/*
  					 * slon_retry(); break;
  					 */
  				}
  				PQclear(res2);
--- 198,218 ----
  							 vacuum_action, tab_nspname, tab_relname);
  				res2 = PQexec(dbconn, dstring_data(&query_pertbl));
! 				vrc = PQresultStatus(res);
! 				if (vrc == PGRES_FATAL_ERROR)
  				{
  					slon_log(SLON_ERROR,
! 							 "cleanupThread: \"%s\" - %s\n",
! 							 dstring_data(&query_pertbl), PQresultErrorMessage(res2));
  
  					/*
  					 * slon_retry(); break;
  					 */
+ 				} else {
+ 					if (vrc == PGRES_NONFATAL_ERROR) {
+ 						slon_log(SLON_WARN,
+ 								 "cleanupThread: \"%s\" - %s\n",
+ 								 dstring_data(&query_pertbl), PQresultErrorMessage(res2));
+ 						
+ 					}
  				}
  				PQclear(res2);

From cbbrowne at lists.slony.info  Fri May  1 08:29:27 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri May  1 08:29:28 2009
Subject: [Slony1-commit] slony1-engine/tests/testpartition README
	generate_dml.sh
Message-ID: <20090501152927.51364290C49@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/tests/testpartition
In directory main.slony.info:/tmp/cvs-serv13218/tests/testpartition

Modified Files:
      Tag: REL_2_0_STABLE
	README generate_dml.sh 
Log Message:
Fix problem reported by Melvin Davidson relating to cleanup thread.

VACUUM/ANALYZE request return codes were being misinterpreted as errors.

Fixed this, so that:
 - Errors are reported as such
 - Warnings are reported as such

Also modified partitioning test to suppress autovac on at least one table
so that regression tests may be expected to exercise this code.


Index: README
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tests/testpartition/README,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -C2 -d -r1.2 -r1.2.2.1
*** README	6 Sep 2007 16:12:00 -0000	1.2
--- README	1 May 2009 15:29:25 -0000	1.2.2.1
***************
*** 3,4 ****
--- 3,7 ----
  testpartition sets up a partitioning test, periodically adding new
  partitions.
+ 
+ It alters pg_autovac configuration to ensure that some tables are being
+ vacuumed by Slony-I.

Index: generate_dml.sh
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tests/testpartition/generate_dml.sh,v
retrieving revision 1.3.2.1
retrieving revision 1.3.2.2
diff -C2 -d -r1.3.2.1 -r1.3.2.2
*** generate_dml.sh	28 Apr 2009 21:48:20 -0000	1.3.2.1
--- generate_dml.sh	1 May 2009 15:29:25 -0000	1.3.2.2
***************
*** 79,82 ****
--- 79,85 ----
    status "done"
  
+   $pgbindir/psql -h $host -p $port -d $db -U $user -c "insert into pg_catalog.pg_autovacuum (vacrelid, enabled, vac_base_thresh, vac_scale_factor, anl_base_thresh, anl_scale_factor, vac_cost_delay, vac_cost_limit, freeze_min_age, freeze_max_age) (select oid, 'f', 0, 0, 0, 0, 0,0,0,0 from pg_catalog.pg_class where relnamespace = (select oid from pg_namespace where nsp_name = '_${CLUSTER1}') and relname = 'sl_seqlog');" 1> $mktmp/suppressautovac.log 2> $mktmp/suppressautovac.log
+   status "make sure there is at least one table being vacuumed by Slony-I"
+ 
    more_data
    wait_for_catchup

From cbbrowne at lists.slony.info  Fri May  1 08:29:27 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri May  1 08:29:28 2009
Subject: [Slony1-commit] slony1-engine RELEASE
Message-ID: <20090501152927.44523290464@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv13218

Modified Files:
      Tag: REL_2_0_STABLE
	RELEASE 
Log Message:
Fix problem reported by Melvin Davidson relating to cleanup thread.

VACUUM/ANALYZE request return codes were being misinterpreted as errors.

Fixed this, so that:
 - Errors are reported as such
 - Warnings are reported as such

Also modified partitioning test to suppress autovac on at least one table
so that regression tests may be expected to exercise this code.


Index: RELEASE
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/RELEASE,v
retrieving revision 1.3.2.10
retrieving revision 1.3.2.11
diff -C2 -d -r1.3.2.10 -r1.3.2.11
*** RELEASE	28 Apr 2009 21:49:29 -0000	1.3.2.10
--- RELEASE	1 May 2009 15:29:25 -0000	1.3.2.11
***************
*** 86,87 ****
--- 86,91 ----
    queries that try to coordinate sl_status information with rather
    less determinacy...
+ 
+ - Cleanup thread was generating spurious error messages due to
+   misinterpreting PG return codes.  Rectified this, and added a
+   test in to make sure we're exercising the logic

From cbbrowne at lists.slony.info  Fri May  8 15:03:30 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri May  8 15:03:31 2009
Subject: [Slony1-commit] slony1-engine/doc/adminguide raceconditions.sgml
	triggers.sgml
Message-ID: <20090508220330.44DB42900F9@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv26359

Added Files:
      Tag: REL_1_2_STABLE
	raceconditions.sgml triggers.sgml 
Log Message:
Add in new doc files from 2.0 branch


--- NEW FILE: triggers.sgml ---
<!-- $Id: triggers.sgml,v 1.3.4.1 2009-05-08 22:03:28 cbbrowne Exp $ --> 
<sect1 id="triggers"><title>&slony1; Trigger Handling</title>

<indexterm><primary>trigger handling</primary></indexterm>

<para> &slony1; has had two <quote>flavours</quote> of trigger
handling:</para>
<itemizedlist>

<listitem><para> In versions up to 1.2, &postgres; had no awareness of
replication, with the result that &slony1; needed to
<quote>hack</quote> on the system catalog in order to deactivate, on
subscribers, triggers that ought not to run.</para></listitem>
</itemizedlist>

<para> This has had a number of somewhat painful side-effects including:</para> 
<itemizedlist>

<listitem><para> Corruption of the system catalog on subscribers, as
existing triggers, that generally need to be hidden, are
<quote>hacked</quote>, via <envar>pg_catalog.pg_trigger</envar>, to
point to the index being used by &slony1; as its <quote>primary
key</quote>.</para>

<para> The very same thing was true for rules. </para>

<para> This had the side-effect that
<application>pg_dump</application> could not be used to pull proper
schemas from subscriber nodes.</para></listitem>

<listitem><para> It introduced the need to take out exclusive locks on
<emphasis>all replicated tables</emphasis> when processing
&rddlchanges; as triggers on each replicated table would need to be
dropped and re-added during the course of
processing.</para></listitem>

</itemizedlist>

<itemizedlist>

<listitem><para> In &postgres; version 8.3, there is new functionality
where triggers and rules can have their behaviour altered via
<command>ALTER TABLE</command>, and specify any of the following
further trigger-related options:</para></listitem>

</itemizedlist>

<itemizedlist>

<listitem><para> <command> DISABLE TRIGGER trigger_name</command>  </para></listitem>
<listitem><para> <command> ENABLE TRIGGER trigger_name</command>  </para></listitem>
<listitem><para> <command> ENABLE REPLICA TRIGGER trigger_name</command>  </para></listitem>
<listitem><para> <command> ENABLE ALWAYS TRIGGER trigger_name</command>  </para></listitem>
<listitem><para> <command> DISABLE RULE rewrite_rule_name</command>  </para></listitem>
<listitem><para> <command> ENABLE RULE rewrite_rule_name</command>  </para></listitem>
<listitem><para> <command> ENABLE REPLICA RULE rewrite_rule_name</command>  </para></listitem>
<listitem><para> <command> ENABLE ALWAYS RULE rewrite_rule_name</command>  </para></listitem>

</itemizedlist>

<para> A new GUC variable, <envar>session_replication_role</envar>
controls whether the session is in origin, replica, or local mode,
which then, in combination with the above enabling/disabling options,
controls whether or not the trigger function actually runs. </para>

<para> We may characterize when triggers fire, under &slony1;
replication, based on the following table; the same rules apply to
&postgres; rules.</para>

<table id="triggerbehaviour"> <title> Trigger Behaviour </title>
<tgroup cols="7">
<thead>
 <row> <entry>Trigger Form</entry> <entry>When Established</entry>  <entry>Log Trigger</entry> <entry>denyaccess Trigger</entry>  <entry>Action - origin</entry> <entry>Action - replica</entry>  <entry> Action - local</entry> </row>
</thead>
<tbody>
<row> <entry>DISABLE TRIGGER</entry> <entry>User request</entry> <entry>disabled on subscriber</entry> <entry>enabled on subscriber</entry> <entry>does not fire</entry>  <entry>does not fire</entry>  <entry>does not fire</entry> </row>
<row> <entry>ENABLE TRIGGER</entry> <entry>Default</entry> <entry>enabled on subscriber</entry> <entry>disabled on subscriber</entry> <entry>fires</entry>  <entry>does not fire</entry>  <entry>fires</entry> </row>
<row> <entry>ENABLE REPLICA TRIGGER</entry> <entry>User request</entry> <entry>inappropriate</entry> <entry>inappropriate</entry> <entry>does not fire</entry>  <entry>fires</entry>  <entry>does not fire</entry> </row>
<row> <entry>ENABLE ALWAYS TRIGGER</entry> <entry>User request</entry> <entry>inappropriate</entry> <entry>inappropriate</entry> <entry>fires</entry>  <entry>fires</entry>  <entry>fires</entry> </row>
</tbody>
</tgroup>
</table>

<para> There are, correspondingly, now, several ways in which &slony1;
interacts with this.  Let us outline those times that are interesting:
</para>

<itemizedlist>

<listitem><para> Before replication is set up,
<emphasis>every</emphasis> database starts out in
<quote>origin</quote> status, and, by default, all triggers are of the
<command>ENABLE TRIGGER</command> form, so they all run, as is normal
in a system uninvolved in replication. </para> </listitem>

<listitem><para> When a &slony1; subscription is set up, on the origin
node, both the <function>logtrigger</function> and
<function>denyaccess</function> triggers are added, the former being
enabled, and running, the latter being disabled, so it does not
run. </para>

<para> From a locking perspective, each <xref
linkend="stmtsetaddtable"> request will need to briefly take out an
exclusive lock on each table as it attaches these triggers, which is
much the same as has always been the case with &slony1;. </para>
</listitem>

<listitem><para> On the subscriber, the subscription process will add
the same triggers, but with the polarities <quote>reversed</quote>, to
protect data from accidental corruption on subscribers.  </para>

<para> From a locking perspective, again, there is not much difference
from earlier &slony1; behaviour, as the subscription process, due to
running <command>TRUNCATE</command>, copying data, and altering table
schemas, requires <emphasis>extensive</emphasis> exclusive table
locks, and the changes in trigger behaviour do not change those
requirements.  </para>

<para> However, note that the ability to enable and disable triggers
in a &postgres;-supported fashion means that we have had no need to
<quote>corrupt</quote> the system catalog, so we have the considerable
advantage that <application>pg_dump</application> may be used to draw
a completely consistent backup against any node in a &slony1;
cluster.</para>

</listitem>

<listitem><para> If you take a <application>pg_dump</application> of a
&slony1; node, and drop out the &slony1; namespace, this now cleanly
removes <emphasis>all</emphasis> &slony1; components, leaving the
database, <emphasis>including its schema,</emphasis> in a
<quote>pristine</quote>, consistent fashion, ready for whatever use
may be desired. </para> </listitem>

<listitem><para> &rddlchanges; is now performed in quite a different
way: rather than altering each replicated table to <quote>take it out
of replicated mode</quote>, &slony1; instead simply shifts into the
<command>local</command> status for the duration of this event.  </para>

<para> On the origin, this deactivates the
<function>logtrigger</function> trigger. </para>

<para> On each subscriber, this deactivates the
<function>denyaccess</function> trigger. </para>

<para> This may be expected to allow DDL changes to become
<emphasis>enormously</emphasis> less expensive, since, rather than
needing to take out exclusive locks on <emphasis>all</emphasis>
replicated tables (as used to be mandated by the action of dropping
and adding back the &slony1;-created triggers), the only tables that
are locked are those ones that the DDL script was specifically acting
on.  </para>

</listitem>

<listitem><para> At the time of invoking <xref linkend="stmtmoveset">
against the former origin, &slony1; must transform that node into a
subscriber, which requires dropping the <function>lockset</function>
triggers, disabling the <function>logtrigger</function> triggers, and
enabling the <function>denyaccess</function> triggers. </para>

<para> At about the same time, when processing <xref
linkend="stmtmoveset"> against the new origin, &slony1; must transform
that node into an origin, which requires disabling the formerly active
<function>denyaccess</function> triggers, and enabling the
<function>logtrigger</function> triggers. </para>

<para> From a locking perspective, this will not behave differently
from older versions of &slony1;; to disable and enable the respective
triggers requires taking out exclusive locks on all replicated
tables. </para>

</listitem>

<listitem><para> Similarly to <xref linkend="stmtmoveset">, <xref
linkend="stmtfailover"> transforms a subscriber node into an origin,
which requires disabling the formerly active
<function>denyaccess</function> triggers, and enabling the
<function>logtrigger</function> triggers.  The locking implications
are again, much the same, requiring an exclusive lock on each such
table.  </para> </listitem>

</itemizedlist>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:"slony.sgml"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->

--- NEW FILE: raceconditions.sgml ---
<!-- $Id: raceconditions.sgml,v 1.1.4.1 2009-05-08 22:03:28 cbbrowne Exp $ -->
<sect1 id="raceconditions"><title>Race Conditions and &slony1;</title>

<indexterm><primary>race conditions</primary></indexterm>

<para> No, this has nothing to do with racial harmony or lack thereof;
the <ulink url="http://www.wikipedia.org/"> Wikipedia </ulink>
describes it thus: <quote>A race condition or race hazard is a flaw in
a system or process whereby the output of the process is unexpectedly
and critically dependent on the sequence or timing of other
events. </quote> In computing applications, race conditions arise most
frequently in distributed or threaded applications when multiple parts
of the application depend on some piece of shared state, and, if this
state is not properly managed, confusion (error!) arises. More
particularly, this usually involves situations where the state can
change between the time it was checked and the time of use of the
state. </para>

<para> &slony1; has run into a number of race conditions during its history:

<itemizedlist>

<listitem><para> <xref linkend="stmtmoveset"> had, during the 1.0 and
1.1 branches, the problem that nodes did not have any way to prevent
them from processing <command>SYNC</command> events from the new
origin node (which their state would cause them to consider a mere
provider, and therefore <emphasis>not</emphasis> a source of
replicable data) before recognizing the role change from subscriber to
provider. </para>

<para> This was fixed by introducing a new <command>ACCEPT
SET</command> event that would be submitted by the new origin; this
allowed subscribers to be aware of their need to wait for the
<command> MOVE SET </command> event.</para> </listitem>

<listitem><para>In a number of places, &slony1; has the SQL
<command>lock table sl_config_lock;</command> in order to prevent race
conditions while changing the sl_log_status sequence value. </para>
</listitem>

<listitem><para> The &lslon; option <xref
linkend="slon-config-sync-interval-timeout"> is used to prevent a
possible race condition in which the action sequence is bumped by the
trigger while inserting the log row, which makes this bump is
immediately visible to the sync thread, but where the resulting log
rows are not visible yet.  </para> </listitem>

<listitem><para> The <quote>snapshot visibility</quote> approach used
by &slony1; to determine what replicated data is to be associated with
a specific <command>SYNC</command> avoids race conditions that would
be associated with trying to purely use timestamps or ID ranges to
determine what data is to be replicated.  </para> </listitem>

<listitem><para> In the 1.2 branch, up to version 1.2.11, which fixed
this, <link linkend="logshipping"> log shipping </link> had a race
condition where any time configuration is reloaded by the &lslon; (as
takes place with a number of events, notably <xref
linkend="stmtsubscribeset">), there was a risk of the
<command>SYNC</command> IDs used to ensure proper ordering and
application of log shipping archive log files being off by one.
</para>

<para> This was resolved in 1.2.11 by moving the ID number from an
in-memory variable (susceptible to all sorts of troubles) to being
managed, transaction-safe, in the subscriber database. </para>

<para> The problem was never exposed by the <link linkend="testbed">
test bed framework, </link> nicely demonstrating the common finding
that race conditions are frequently highly dependent on patterns of
data input or of application timing. </para>
</listitem>

</itemizedlist>

</para>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:"slony.sgml"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->

From devrim at lists.slony.info  Sat May  9 01:56:54 2009
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Sat May  9 01:56:56 2009
Subject: [Slony1-commit] slony1-engine/doc/adminguide failover.sgml
Message-ID: <20090509085654.999E3290012@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv27513

Modified Files:
	failover.sgml 
Log Message:
Fix sgml error


Index: failover.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/failover.sgml,v
retrieving revision 1.31
retrieving revision 1.32
diff -C2 -d -r1.31 -r1.32
*** failover.sgml	30 Apr 2009 16:07:47 -0000	1.31
--- failover.sgml	9 May 2009 08:56:52 -0000	1.32
***************
*** 315,318 ****
--- 315,319 ----
  
  </itemizedlist>
+ </sect2>
  
  <sect2><title> Automating <command> FAIL OVER </command> </title>

From devrim at lists.slony.info  Sat May  9 01:57:22 2009
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Sat May  9 01:57:23 2009
Subject: [Slony1-commit] slony1-engine/doc/adminguide failover.sgml
Message-ID: <20090509085722.51FE2290012@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv27563

Modified Files:
      Tag: REL_2_0_STABLE
	failover.sgml 
Log Message:
Fix sgml error


Index: failover.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/failover.sgml,v
retrieving revision 1.28.2.1
retrieving revision 1.28.2.2
diff -C2 -d -r1.28.2.1 -r1.28.2.2
*** failover.sgml	16 Jan 2009 17:17:31 -0000	1.28.2.1
--- failover.sgml	9 May 2009 08:57:20 -0000	1.28.2.2
***************
*** 315,318 ****
--- 315,319 ----
  
  </itemizedlist>
+ </sect2>
  
  <sect2><title> Automating <command> FAIL OVER </command> </title>

From cbbrowne at lists.slony.info  Mon May 11 12:57:26 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Mon May 11 12:57:28 2009
Subject: [Slony1-commit] slony1-www/content frontpage.txt news.txt
Message-ID: <20090511195726.BDD9929042D@main.slony.info>

Update of /home/cvsd/slony1/slony1-www/content
In directory main.slony.info:/tmp/cvs-serv12869/content

Modified Files:
	frontpage.txt news.txt 
Log Message:
Release of 2.0.2/1.2.16


Index: frontpage.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/frontpage.txt,v
retrieving revision 1.33
retrieving revision 1.34
diff -C2 -d -r1.33 -r1.34
*** frontpage.txt	26 Feb 2009 16:31:02 -0000	1.33
--- frontpage.txt	11 May 2009 19:57:24 -0000	1.34
***************
*** 1,3 ****
--- 1,14 ----
  ---
+ Slony-I 2.0.2 Released
+ 
+ <P> See the "news" area for more details, including a copy of the
+ release notes.  This version fixes quite a number of issues found in
+ early use of version 2.0.
+ ---
+ Slony-I 1.2.16 Released
+ 
+ <P> See the "news" area for more details, including a copy of the
+ release notes.  This version fixes issues relating to FAILOVER.
+ ---
  Slony-I 2.0.1 Released
  

Index: news.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/news.txt,v
retrieving revision 1.56
retrieving revision 1.57
diff -C2 -d -r1.56 -r1.57
*** news.txt	30 Apr 2009 17:04:37 -0000	1.56
--- news.txt	11 May 2009 19:57:24 -0000	1.57
***************
*** 5,13 ****
  Chris Browne
  
! Slony-1 2.0.1 <a href="http://main.slony.info/downloads/2.0/source/slony1-2.0.1.tar.bz2">engine</a>
! <a href="http://main.slony.info/downloads/2.0/source/slony1-2.0.1-docs.tar.bz2">documentation</a>
  <br/>
! Slony-1 1.2.15 <a href="http://main.slony.info/downloads/1.2/source/slony1-1.2.15.tar.bz2">engine</a>
! <a href="http://main.slony.info/downloads/1.2/source/slony1-1.2.15-docs.tar.bz2">documentation</a>
  <br/>
  Slony-1 1.1.9 <a href="http://main.slony.info/downloads/1.1/source/slony1-1.1.9.tar.bz2">engine</a>
--- 5,13 ----
  Chris Browne
  
! Slony-1 2.0.2 <a href="http://main.slony.info/downloads/2.0/source/slony1-2.0.2.tar.bz2">engine</a>
! <a href="http://main.slony.info/downloads/2.0/source/slony1-2.0.2-docs.tar.bz2">documentation</a>
  <br/>
! Slony-1 1.2.16 <a href="http://main.slony.info/downloads/1.2/source/slony1-1.2.16.tar.bz2">engine</a>
! <a href="http://main.slony.info/downloads/1.2/source/slony1-1.2.16-docs.tar.bz2">documentation</a>
  <br/>
  Slony-1 1.1.9 <a href="http://main.slony.info/downloads/1.1/source/slony1-1.1.9.tar.bz2">engine</a>
***************
*** 15,18 ****
--- 15,97 ----
  
  ---
+ Slony-I 2.0.2 candidate released
+ http://main.slony.info/downloads/2.0/source/slony1-2.0.2.tar.bz2
+ 2009-05-08
+ Chris Browne
+ 
+ Version <a href=
+ "http://main.slony.info/downloads/2.0/source/slony1-2.0.2.tar.bz2">
+ slony1-2.0.2.tar.bz2 </a> has been released.
+ 
+ <p>Changes since 2.0.1 are as follows:
+ 
+ <ul>
+ <li> PostgreSQL 8.4 compatibility - src/backend/slony1_funcs.c needed to
+   #include "catalog/pg_type.h"; that is no longer implicitly included by
+   the SPI #include
+ 
+ <li> Fix bug #71 - config dump was failing on string entries that were NULL
+ 
+ <li> Fix bug #76 - REPAIR CONFIG could have collisions where, when we 
+   load a schema, one entry in sl_table already has an OID value
+   that incorrectly matches a value that another update is trying to
+   fix.
+ 
+ <P>  This would cause REPAIR CONFIG to fail.
+ 
+ <P>  Put in a query that updates the oids in sl_table and sl_sequence to
+   randomly selected values from pg_class that couldn't match (since
+   the values selected are from non-table/non-sequence objects)
+ 
+ <li> Updated release notes to indicate that 2.0 only supports PostgreSQL
+   8.3+
+ 
+ <li> Change to configure.ac to allow it to run on autoconf 2.63; there was
+   something unsuitable about SLONREL_VERSION processing
+ 
+ <li> Fixes to Makefile for admin guide
+ 
+ <li> Various fixes to admin guide material
+ 
+ <li> Added an extra test to Schema name test that validates that things
+   can operate properly even if the DB lacks a "public" schema
+ 
+ <li> Fixed bug in tools/start_slon.sh
+ 
+ <li> Fixed pathname substitutions in a couple of altperl scripts
+ 
+ <li> Add a test which validates that the cluster schema name is valid; 
+   pgAdminIII allowed setting up cluster names that slonik would refuse
+   to connect to.
+ 
+ <li> Revised regression tests to use SYNC/WAIT FOR EVENT instead of
+   queries that try to coordinate sl_status information with rather
+   less determinacy...
+ 
+ </ul>
+ ---
+ Slony-I 1.2.16 released
+ http://main.slony.info/downloads/1.2/source/slony1-1.2.16.tar.bz2
+ 2009-05-08
+ Chris Browne
+ 
+ Version <a href=
+ "http://main.slony.info/downloads/1.2/source/slony1-1.2.16.tar.bz2">
+ slony1-1.2.16.tar.bz2 </a> has been released.
+ 
+ Changes since 1.2.15:
+ <ul>
+ <li> Fix problems with failover:
+ <ul>
+ <li> Failover would fail (ERROR) where there is no path to backup node - change this to a WARNING so that failover can complete; admin will need to fix up paths later  </li>
+ <li> Failover apparently never supported failing over to nodes that were not directly subscribing to the failed node
+ Fixed some broken logic in failedNode()
+ <li> Fixed a problem where slonik cannot perform a failover if multiple origins
+ fail at once.
+ </ul></li>
+ <li> Fixed autoconf 2.63 incompatibility </li>
+ <li> Draw in latest documentation updates from 2.0 branch </li>
+ </ul>
+ ---
  Slony-I 2.0.2 release candidate released
  http://main.slony.info/downloads/2.0/source/slony1-2.0.2-rc.tar.bz2

From cbbrowne at lists.slony.info  Wed May 27 14:19:44 2009
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May 27 14:19:46 2009
Subject: [Slony1-commit] slony1-www style.css
Message-ID: <20090527211944.77805290153@main.slony.info>

Update of /home/cvsd/slony1/slony1-www
In directory main.slony.info:/tmp/cvs-serv9571

Modified Files:
	style.css 
Log Message:
Change to CSS based on bug report


Index: style.css
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/style.css,v
retrieving revision 1.17
retrieving revision 1.18
diff -C2 -d -r1.17 -r1.18
*** style.css	18 Jun 2007 19:20:42 -0000	1.17
--- style.css	27 May 2009 21:19:42 -0000	1.18
***************
*** 26,30 ****
    float: left;
    background: url('images/header-left.png') top left;
!   width: 575px;
    height: 108px;
  }
--- 26,30 ----
    float: left;
    background: url('images/header-left.png') top left;
!   background-repeat: no-repeat;
    height: 108px;
  }

