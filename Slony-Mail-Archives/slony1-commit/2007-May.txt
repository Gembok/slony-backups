From cbbrowne at lists.slony.info  Wed May  2 14:36:19 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:36:21 2007
Subject: [Slony1-commit] slony1-engine Makefile.global.in configure.ac
Message-ID: <20070502213619.67EA32903B0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv8603

Modified Files:
	Makefile.global.in configure.ac 
Log Message:
Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated.


Index: Makefile.global.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/Makefile.global.in,v
retrieving revision 1.35
retrieving revision 1.36
diff -C2 -d -r1.35 -r1.36
*** Makefile.global.in	26 Oct 2006 19:07:18 -0000	1.35
--- Makefile.global.in	2 May 2007 21:36:17 -0000	1.36
***************
*** 10,13 ****
--- 10,18 ----
  # ----------
  
+ # PostgreSQL Version
+ PG_VERSION_MAJOR=       @PG_VERSION_MAJOR@
+ PG_VERSION_MINOR=       @PG_VERSION_MINOR@
+ PG_VERSION=             @PG_VERSION@
+ 
  #location substitutions
  

Index: configure.ac
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/configure.ac,v
retrieving revision 1.60
retrieving revision 1.61
diff -C2 -d -r1.60 -r1.61
*** configure.ac	20 Feb 2007 11:20:44 -0000	1.60
--- configure.ac	2 May 2007 21:36:17 -0000	1.61
***************
*** 163,166 ****
--- 163,170 ----
  ACX_SLONYTOOLS()
  
+ AC_SUBST(PG_VERSION_MAJOR, $PG_VERSION_MAJOR)
+ AC_SUBST(PG_VERSION_MINOR, $PG_VERSION_MINOR)
+ AC_SUBST(PG_VERSION, $PG_VERSION)
+ 
  AC_SUBST(PGINCLUDEDIR, $PG_INCLUDEDIR)
  AC_SUBST(PGINCLUDESERVERDIR, $PG_INCLUDESERVERDIR)

From cbbrowne at lists.slony.info  Wed May  2 14:36:19 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:36:21 2007
Subject: [Slony1-commit] slony1-engine/src/backend slony1_funcs.c
Message-ID: <20070502213619.764B0290BCF@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv8603/src/backend

Modified Files:
	slony1_funcs.c 
Log Message:
Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated.


Index: slony1_funcs.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.c,v
retrieving revision 1.59
retrieving revision 1.60
diff -C2 -d -r1.59 -r1.60
*** slony1_funcs.c	18 Apr 2007 21:20:22 -0000	1.59
--- slony1_funcs.c	2 May 2007 21:36:17 -0000	1.60
***************
*** 45,50 ****
  
  /* -- Change from PostgreSQL Ver 8.3 -- */
! #ifndef VARATT_SIZEP
! #define VARATT_SIZEP VARATT_SIZEP_DEPRECATED
  #endif
  
--- 45,50 ----
  
  /* -- Change from PostgreSQL Ver 8.3 -- */
! #if !((PG_VERSION_MAJOR > 8) || ((PG_VERSION_MAJOR == 8) && (PG_VERSION_MINOR >= 3)))
! #define SET_VARSIZE(datum, size) (VARATT_SIZEP(datum)=(size))
  #endif
  
***************
*** 311,315 ****
  	len = strlen(SLONY_I_VERSION_STRING);
  	retval = palloc(VARHDRSZ + len);
! 	VARATT_SIZEP(retval) = VARHDRSZ + len;
  	memcpy(VARDATA(retval), SLONY_I_VERSION_STRING, len);
  
--- 311,316 ----
  	len = strlen(SLONY_I_VERSION_STRING);
  	retval = palloc(VARHDRSZ + len);
! 
!         SET_VARSIZE(retval,VARHDRSZ + len);
  	memcpy(VARDATA(retval), SLONY_I_VERSION_STRING, len);
  
***************
*** 384,388 ****
  			cs->session_role = SLON_ROLE_NORMAL;
  			retval = palloc(VARHDRSZ + 6);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 6;
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
--- 385,389 ----
  			cs->session_role = SLON_ROLE_NORMAL;
  			retval = palloc(VARHDRSZ + 6);
! 			SET_VARSIZE(retval, VARHDRSZ + 6);
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
***************
*** 390,394 ****
  		case SLON_ROLE_NORMAL:
  			retval = palloc(VARHDRSZ + 6);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 6;
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
--- 391,395 ----
  		case SLON_ROLE_NORMAL:
  			retval = palloc(VARHDRSZ + 6);
! 			SET_VARSIZE(retval, VARHDRSZ + 6);
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
***************
*** 396,400 ****
  		case SLON_ROLE_SLON:
  			retval = palloc(VARHDRSZ + 4);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 4;
  			memcpy(VARDATA(retval), "slon", 4);
  			break;
--- 397,401 ----
  		case SLON_ROLE_SLON:
  			retval = palloc(VARHDRSZ + 4);
! 			SET_VARSIZE(retval, VARHDRSZ + 4);
  			memcpy(VARDATA(retval), "slon", 4);
  			break;
***************
*** 491,495 ****
  		if (SPI_processed != 1)
  			elog(ERROR, "Slony-I: cannot determine log status");
! 		
  		log_status = DatumGetInt32(SPI_getbinval(SPI_tuptable->vals[0],
  									SPI_tuptable->tupdesc, 1, NULL));
--- 492,496 ----
  		if (SPI_processed != 1)
  			elog(ERROR, "Slony-I: cannot determine log status");
! 
  		log_status = DatumGetInt32(SPI_getbinval(SPI_tuptable->vals[0],
  									SPI_tuptable->tupdesc, 1, NULL));
***************
*** 637,642 ****
  		*cp++ = ')';
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else if (TRIGGER_FIRED_BY_UPDATE(tg->tg_event))
--- 638,643 ----
  		*cp++ = ')';
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf, 
!                         VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else if (TRIGGER_FIRED_BY_UPDATE(tg->tg_event))
***************
*** 875,880 ****
  		}
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else if (TRIGGER_FIRED_BY_DELETE(tg->tg_event))
--- 876,881 ----
  		}
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf,
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else if (TRIGGER_FIRED_BY_DELETE(tg->tg_event))
***************
*** 942,947 ****
  		}
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else
--- 943,948 ----
  		}
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf,
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else
***************
*** 1251,1255 ****
  	len = strlen(qstr);
  	result = (text *) palloc(len + VARHDRSZ);
! 	VARATT_SIZEP(result) = len + VARHDRSZ;
  	memcpy(VARDATA(result), qstr, len);
  
--- 1252,1256 ----
  	len = strlen(qstr);
  	result = (text *) palloc(len + VARHDRSZ);
! 	SET_VARSIZE(result, len + VARHDRSZ);
  	memcpy(VARDATA(result), qstr, len);
  
***************
*** 1493,1503 ****
  		 */
  		cs->cmdtype_I = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_I) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_I) = 'I';
  		cs->cmdtype_U = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_U) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_U) = 'U';
  		cs->cmdtype_D = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_D) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_D) = 'D';
  
--- 1494,1504 ----
  		 */
  		cs->cmdtype_I = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_I, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_I) = 'I';
  		cs->cmdtype_U = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_U, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_U) = 'U';
  		cs->cmdtype_D = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_D, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_D) = 'D';
  

From cbbrowne at lists.slony.info  Wed May  2 14:37:09 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:37:10 2007
Subject: [Slony1-commit] slony1-engine Makefile.global.in configure.ac
	RELEASE-1.2.10
Message-ID: <20070502213709.140FC290BCF@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv8813

Modified Files:
      Tag: REL_1_2_STABLE
	Makefile.global.in configure.ac RELEASE-1.2.10 
Log Message:
Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated.


Index: RELEASE-1.2.10
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/Attic/RELEASE-1.2.10,v
retrieving revision 1.1.2.4
retrieving revision 1.1.2.5
diff -C2 -d -r1.1.2.4 -r1.1.2.5
*** RELEASE-1.2.10	20 Apr 2007 21:40:02 -0000	1.1.2.4
--- RELEASE-1.2.10	2 May 2007 21:37:06 -0000	1.1.2.5
***************
*** 9,10 ****
--- 9,12 ----
    ... And alter it to add invocation of a DDL script.  This
    allows testing for an event-counting problem in log shipping.
+ 
+ - Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated

Index: Makefile.global.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/Makefile.global.in,v
retrieving revision 1.34.2.1
retrieving revision 1.34.2.2
diff -C2 -d -r1.34.2.1 -r1.34.2.2
*** Makefile.global.in	26 Oct 2006 18:55:05 -0000	1.34.2.1
--- Makefile.global.in	2 May 2007 21:37:06 -0000	1.34.2.2
***************
*** 10,13 ****
--- 10,18 ----
  # ----------
  
+ # PostgreSQL Version
+ PG_VERSION_MAJOR=       @PG_VERSION_MAJOR@
+ PG_VERSION_MINOR=       @PG_VERSION_MINOR@
+ PG_VERSION=             @PG_VERSION@
+ 
  #location substitutions
  

Index: configure.ac
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/configure.ac,v
retrieving revision 1.57.2.2
retrieving revision 1.57.2.3
diff -C2 -d -r1.57.2.2 -r1.57.2.3
*** configure.ac	20 Feb 2007 11:29:39 -0000	1.57.2.2
--- configure.ac	2 May 2007 21:37:06 -0000	1.57.2.3
***************
*** 163,166 ****
--- 163,170 ----
  ACX_SLONYTOOLS()
  
+ AC_SUBST(PG_VERSION_MAJOR, $PG_VERSION_MAJOR)
+ AC_SUBST(PG_VERSION_MINOR, $PG_VERSION_MINOR)
+ AC_SUBST(PG_VERSION, $PG_VERSION)
+ 
  AC_SUBST(PGINCLUDEDIR, $PG_INCLUDEDIR)
  AC_SUBST(PGINCLUDESERVERDIR, $PG_INCLUDESERVERDIR)

From cbbrowne at lists.slony.info  Wed May  2 14:37:09 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:37:10 2007
Subject: [Slony1-commit] slony1-engine/src/backend slony1_funcs.c
Message-ID: <20070502213709.2EB23290BD1@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv8813/src/backend

Modified Files:
      Tag: REL_1_2_STABLE
	slony1_funcs.c 
Log Message:
Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated.


Index: slony1_funcs.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.c,v
retrieving revision 1.53.2.1
retrieving revision 1.53.2.2
diff -C2 -d -r1.53.2.1 -r1.53.2.2
*** slony1_funcs.c	18 Apr 2007 19:28:27 -0000	1.53.2.1
--- slony1_funcs.c	2 May 2007 21:37:07 -0000	1.53.2.2
***************
*** 42,47 ****
  
  /* -- Change from PostgreSQL Ver 8.3 -- */
! #ifndef VARATT_SIZEP
! #define VARATT_SIZEP VARATT_SIZEP_DEPRECATED
  #endif
  
--- 42,47 ----
  
  /* -- Change from PostgreSQL Ver 8.3 -- */
! #if !((PG_VERSION_MAJOR > 8) || ((PG_VERSION_MAJOR == 8) && (PG_VERSION_MINOR >= 3)))
! #define SET_VARSIZE(datum, size) (VARATT_SIZEP(datum)=(size))
  #endif
  
***************
*** 296,300 ****
  	len = strlen(SLONY_I_VERSION_STRING);
  	retval = palloc(VARHDRSZ + len);
! 	VARATT_SIZEP(retval) = VARHDRSZ + len;
  	memcpy(VARDATA(retval), SLONY_I_VERSION_STRING, len);
  
--- 296,301 ----
  	len = strlen(SLONY_I_VERSION_STRING);
  	retval = palloc(VARHDRSZ + len);
! 
!         SET_VARSIZE(retval,VARHDRSZ + len);
  	memcpy(VARDATA(retval), SLONY_I_VERSION_STRING, len);
  
***************
*** 369,373 ****
  			cs->session_role = SLON_ROLE_NORMAL;
  			retval = palloc(VARHDRSZ + 6);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 6;
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
--- 370,374 ----
  			cs->session_role = SLON_ROLE_NORMAL;
  			retval = palloc(VARHDRSZ + 6);
! 			SET_VARSIZE(retval, VARHDRSZ + 6);
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
***************
*** 375,379 ****
  		case SLON_ROLE_NORMAL:
  			retval = palloc(VARHDRSZ + 6);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 6;
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
--- 376,380 ----
  		case SLON_ROLE_NORMAL:
  			retval = palloc(VARHDRSZ + 6);
! 			SET_VARSIZE(retval, VARHDRSZ + 6);
  			memcpy(VARDATA(retval), "normal", 6);
  			break;
***************
*** 381,385 ****
  		case SLON_ROLE_SLON:
  			retval = palloc(VARHDRSZ + 4);
! 			VARATT_SIZEP(retval) = VARHDRSZ + 4;
  			memcpy(VARDATA(retval), "slon", 4);
  			break;
--- 382,386 ----
  		case SLON_ROLE_SLON:
  			retval = palloc(VARHDRSZ + 4);
! 			SET_VARSIZE(retval, VARHDRSZ + 4);
  			memcpy(VARDATA(retval), "slon", 4);
  			break;
***************
*** 476,480 ****
  		if (SPI_processed != 1)
  			elog(ERROR, "Slony-I: cannot determine log status");
! 		
  		log_status = DatumGetInt32(SPI_getbinval(SPI_tuptable->vals[0],
  									SPI_tuptable->tupdesc, 1, NULL));
--- 477,481 ----
  		if (SPI_processed != 1)
  			elog(ERROR, "Slony-I: cannot determine log status");
! 
  		log_status = DatumGetInt32(SPI_getbinval(SPI_tuptable->vals[0],
  									SPI_tuptable->tupdesc, 1, NULL));
***************
*** 622,627 ****
  		*cp++ = ')';
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else if (TRIGGER_FIRED_BY_UPDATE(tg->tg_event))
--- 623,628 ----
  		*cp++ = ')';
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf, 
!                         VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else if (TRIGGER_FIRED_BY_UPDATE(tg->tg_event))
***************
*** 860,865 ****
  		}
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else if (TRIGGER_FIRED_BY_DELETE(tg->tg_event))
--- 861,866 ----
  		}
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf,
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else if (TRIGGER_FIRED_BY_DELETE(tg->tg_event))
***************
*** 927,932 ****
  		}
  		*cp = '\0';
! 		VARATT_SIZEP(cs->cmddata_buf) =
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf));
  	}
  	else
--- 928,933 ----
  		}
  		*cp = '\0';
! 		SET_VARSIZE(cs->cmddata_buf,
! 			VARHDRSZ + (cp - VARDATA(cs->cmddata_buf)));
  	}
  	else
***************
*** 1236,1240 ****
  	len = strlen(qstr);
  	result = (text *) palloc(len + VARHDRSZ);
! 	VARATT_SIZEP(result) = len + VARHDRSZ;
  	memcpy(VARDATA(result), qstr, len);
  
--- 1237,1241 ----
  	len = strlen(qstr);
  	result = (text *) palloc(len + VARHDRSZ);
! 	SET_VARSIZE(result, len + VARHDRSZ);
  	memcpy(VARDATA(result), qstr, len);
  
***************
*** 1478,1488 ****
  		 */
  		cs->cmdtype_I = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_I) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_I) = 'I';
  		cs->cmdtype_U = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_U) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_U) = 'U';
  		cs->cmdtype_D = malloc(VARHDRSZ + 1);
! 		VARATT_SIZEP(cs->cmdtype_D) = VARHDRSZ + 1;
  		*VARDATA(cs->cmdtype_D) = 'D';
  
--- 1479,1489 ----
  		 */
  		cs->cmdtype_I = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_I, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_I) = 'I';
  		cs->cmdtype_U = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_U, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_U) = 'U';
  		cs->cmdtype_D = malloc(VARHDRSZ + 1);
! 		SET_VARSIZE(cs->cmdtype_D, VARHDRSZ + 1);
  		*VARDATA(cs->cmdtype_D) = 'D';
  

From cbbrowne at lists.slony.info  Wed May  2 14:41:14 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:41:15 2007
Subject: [Slony1-commit] slony1-www/content news.txt
Message-ID: <20070502214114.6B15E290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-www/content
In directory main.slony.info:/tmp/cvs-serv9043

Modified Files:
	news.txt 
Log Message:
Added link to Hiroshi Saito sample Windows/Slony-I configuration


Index: news.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/news.txt,v
retrieving revision 1.15
retrieving revision 1.16
diff -C2 -d -r1.15 -r1.16
*** news.txt	27 Mar 2007 12:25:59 -0000	1.15
--- news.txt	2 May 2007 21:41:12 -0000	1.16
***************
*** 10,13 ****
--- 10,19 ----
  <!-- Please keep this item at the top of the news list -->
  ---
+ Sample of configuring Slony-I on Windows
+ http://winpg.jp/~saito/Slony-I-sample/
+ 2007-05-02
+ Hiroshi Saito
+ Here are sample configuration files for the usage of Slony-I 1.2.9 on Windows.
+ ---
  Slony-I Release - 1.2.9
  http://main.slony.info/downloads/1.2

From cbbrowne at lists.slony.info  Wed May  2 14:44:07 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  2 14:44:09 2007
Subject: [Slony1-commit] slony1-www/content news.txt
Message-ID: <20070502214407.B271C290BCF@main.slony.info>

Update of /home/cvsd/slony1/slony1-www/content
In directory main.slony.info:/tmp/cvs-serv9452/content

Modified Files:
	news.txt 
Log Message:
Add URL to body re sample windows config


Index: news.txt
===================================================================
RCS file: /home/cvsd/slony1/slony1-www/content/news.txt,v
retrieving revision 1.16
retrieving revision 1.17
diff -C2 -d -r1.16 -r1.17
*** news.txt	2 May 2007 21:41:12 -0000	1.16
--- news.txt	2 May 2007 21:44:05 -0000	1.17
***************
*** 14,18 ****
  2007-05-02
  Hiroshi Saito
! Here are sample configuration files for the usage of Slony-I 1.2.9 on Windows.
  ---
  Slony-I Release - 1.2.9
--- 14,18 ----
  2007-05-02
  Hiroshi Saito
! Here are <a href="http://winpg.jp/~saito/Slony-I-sample/">sample configuration files</a> for the usage of Slony-I 1.2.9 on Windows.
  ---
  Slony-I Release - 1.2.9

From wieck at lists.slony.info  Wed May  9 06:39:18 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Wed May  9 07:38:32 2007
Subject: [Slony1-commit] slony1-engine/src/xxid xxid.c
Message-ID: <20070509133918.72FE2290BE0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/xxid
In directory main.slony.info:/tmp/cvs-serv11860

Modified Files:
	xxid.c 
Log Message:
Fix the xxid_snapshot for 8.3's packed varlena headers.

Jan


Index: xxid.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/xxid/xxid.c,v
retrieving revision 1.12
retrieving revision 1.13
diff -C2 -d -r1.12 -r1.13
*** xxid.c	22 Jun 2006 14:14:42 -0000	1.12
--- xxid.c	9 May 2007 13:39:16 -0000	1.13
***************
*** 24,27 ****
--- 24,37 ----
  #endif
  
+ #ifndef SET_VARSIZE
+ #define SET_VARSIZE(PTR,len) (*((uint32 *)(PTR)) = (len) & 0x3FFFFFFF)
+ #endif
+ #ifndef VARDATA_ANY
+ #define VARDATA_ANY(PTR) VARDATA(PTR)
+ #endif
+ #ifndef PG_DETOAST_DATUM_PACKED
+ #define PG_DETOAST_DATUM_PACKED(X) PG_DETOAST_DATUM(X)
+ #endif
+ 
  #ifndef PG_GETARG_TRANSACTIONID
  #define PG_GETARG_TRANSACTIONID(n)	DatumGetTransactionId(PG_GETARG_DATUM(n))
***************
*** 34,38 ****
  typedef struct
  {
- 	int32		varsz;
  	TransactionId xmin;
  	TransactionId xmax;
--- 44,47 ----
***************
*** 261,264 ****
--- 270,274 ----
  	TransactionId xmin;
  	TransactionId xmax;
+ 	void		 *result;
  	xxid_snapshot *snap;
  	int			size;
***************
*** 318,323 ****
  
  	size = offsetof(xxid_snapshot, xip) + sizeof(TransactionId) * a_used;
! 	snap = (xxid_snapshot *) palloc(size);
! 	snap->varsz = size;
  	snap->xmin = xmin;
  	snap->xmax = xmax;
--- 328,334 ----
  
  	size = offsetof(xxid_snapshot, xip) + sizeof(TransactionId) * a_used;
! 	result = (void *) palloc(size + VARHDRSZ);
! 	SET_VARSIZE(result, size + VARHDRSZ);
! 	snap = (xxid_snapshot *) VARDATA(result);
  	snap->xmin = xmin;
  	snap->xmax = xmax;
***************
*** 326,330 ****
  		memcpy(&(snap->xip[0]), xip, sizeof(TransactionId) * a_used);
  
! 	PG_RETURN_POINTER(snap);
  }
  
--- 337,341 ----
  		memcpy(&(snap->xip[0]), xip, sizeof(TransactionId) * a_used);
  
! 	PG_RETURN_POINTER(result);
  }
  
***************
*** 336,340 ****
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(0);
  
  	char	   *str = palloc(28 + snap->nxip * 13);
--- 347,351 ----
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
***************
*** 364,368 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(1);
  	int			i;
  
--- 375,379 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
***************
*** 390,394 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(1);
  	int			i;
  
--- 401,405 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  

From wieck at lists.slony.info  Wed May  9 06:39:52 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Wed May  9 07:38:32 2007
Subject: [Slony1-commit] slony1-engine/src/xxid xxid.c
Message-ID: <20070509133952.411602902D0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/xxid
In directory main.slony.info:/tmp/cvs-serv12017

Modified Files:
      Tag: REL_1_2_STABLE
	xxid.c 
Log Message:
Fix the xxid_snapshot for 8.3's packed varlena headers.

Jan


Index: xxid.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/xxid/xxid.c,v
retrieving revision 1.12
retrieving revision 1.12.2.1
diff -C2 -d -r1.12 -r1.12.2.1
*** xxid.c	22 Jun 2006 14:14:42 -0000	1.12
--- xxid.c	9 May 2007 13:39:50 -0000	1.12.2.1
***************
*** 24,27 ****
--- 24,37 ----
  #endif
  
+ #ifndef SET_VARSIZE
+ #define SET_VARSIZE(PTR,len) (*((uint32 *)(PTR)) = (len) & 0x3FFFFFFF)
+ #endif
+ #ifndef VARDATA_ANY
+ #define VARDATA_ANY(PTR) VARDATA(PTR)
+ #endif
+ #ifndef PG_DETOAST_DATUM_PACKED
+ #define PG_DETOAST_DATUM_PACKED(X) PG_DETOAST_DATUM(X)
+ #endif
+ 
  #ifndef PG_GETARG_TRANSACTIONID
  #define PG_GETARG_TRANSACTIONID(n)	DatumGetTransactionId(PG_GETARG_DATUM(n))
***************
*** 34,38 ****
  typedef struct
  {
- 	int32		varsz;
  	TransactionId xmin;
  	TransactionId xmax;
--- 44,47 ----
***************
*** 261,264 ****
--- 270,274 ----
  	TransactionId xmin;
  	TransactionId xmax;
+ 	void		 *result;
  	xxid_snapshot *snap;
  	int			size;
***************
*** 318,323 ****
  
  	size = offsetof(xxid_snapshot, xip) + sizeof(TransactionId) * a_used;
! 	snap = (xxid_snapshot *) palloc(size);
! 	snap->varsz = size;
  	snap->xmin = xmin;
  	snap->xmax = xmax;
--- 328,334 ----
  
  	size = offsetof(xxid_snapshot, xip) + sizeof(TransactionId) * a_used;
! 	result = (void *) palloc(size + VARHDRSZ);
! 	SET_VARSIZE(result, size + VARHDRSZ);
! 	snap = (xxid_snapshot *) VARDATA(result);
  	snap->xmin = xmin;
  	snap->xmax = xmax;
***************
*** 326,330 ****
  		memcpy(&(snap->xip[0]), xip, sizeof(TransactionId) * a_used);
  
! 	PG_RETURN_POINTER(snap);
  }
  
--- 337,341 ----
  		memcpy(&(snap->xip[0]), xip, sizeof(TransactionId) * a_used);
  
! 	PG_RETURN_POINTER(result);
  }
  
***************
*** 336,340 ****
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(0);
  
  	char	   *str = palloc(28 + snap->nxip * 13);
--- 347,351 ----
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
***************
*** 364,368 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(1);
  	int			i;
  
--- 375,379 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
***************
*** 390,394 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) PG_GETARG_VARLENA_P(1);
  	int			i;
  
--- 401,405 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  

From wieck at lists.slony.info  Wed May  9 10:42:59 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Wed May  9 10:43:00 2007
Subject: [Slony1-commit] slony1-engine/src/xxid xxid.c
Message-ID: <20070509174259.373302902D0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/xxid
In directory main.slony.info:/tmp/cvs-serv32376

Modified Files:
	xxid.c 
Log Message:
Since SET_VARLENA() in fact is SET_VARLENA_4B(), one does not have to
expect any packed data ever. 

Jan


Index: xxid.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/xxid/xxid.c,v
retrieving revision 1.13
retrieving revision 1.14
diff -C2 -d -r1.13 -r1.14
*** xxid.c	9 May 2007 13:39:16 -0000	1.13
--- xxid.c	9 May 2007 17:42:57 -0000	1.14
***************
*** 27,36 ****
  #define SET_VARSIZE(PTR,len) (*((uint32 *)(PTR)) = (len) & 0x3FFFFFFF)
  #endif
- #ifndef VARDATA_ANY
- #define VARDATA_ANY(PTR) VARDATA(PTR)
- #endif
- #ifndef PG_DETOAST_DATUM_PACKED
- #define PG_DETOAST_DATUM_PACKED(X) PG_DETOAST_DATUM(X)
- #endif
  
  #ifndef PG_GETARG_TRANSACTIONID
--- 27,30 ----
***************
*** 347,351 ****
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
--- 341,345 ----
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
***************
*** 375,379 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
--- 369,373 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(1))));
  	int			i;
  
***************
*** 401,405 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
--- 395,399 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(1))));
  	int			i;
  

From wieck at lists.slony.info  Wed May  9 10:43:12 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Wed May  9 10:43:14 2007
Subject: [Slony1-commit] slony1-engine/src/xxid xxid.c
Message-ID: <20070509174312.D56C92902D0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/xxid
In directory main.slony.info:/tmp/cvs-serv32512

Modified Files:
      Tag: REL_1_2_STABLE
	xxid.c 
Log Message:
Since SET_VARLENA() in fact is SET_VARLENA_4B(), one does not have to 
expect any packed data ever. 

Jan


Index: xxid.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/xxid/xxid.c,v
retrieving revision 1.12.2.1
retrieving revision 1.12.2.2
diff -C2 -d -r1.12.2.1 -r1.12.2.2
*** xxid.c	9 May 2007 13:39:50 -0000	1.12.2.1
--- xxid.c	9 May 2007 17:43:10 -0000	1.12.2.2
***************
*** 27,36 ****
  #define SET_VARSIZE(PTR,len) (*((uint32 *)(PTR)) = (len) & 0x3FFFFFFF)
  #endif
- #ifndef VARDATA_ANY
- #define VARDATA_ANY(PTR) VARDATA(PTR)
- #endif
- #ifndef PG_DETOAST_DATUM_PACKED
- #define PG_DETOAST_DATUM_PACKED(X) PG_DETOAST_DATUM(X)
- #endif
  
  #ifndef PG_GETARG_TRANSACTIONID
--- 27,30 ----
***************
*** 347,351 ****
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
--- 341,345 ----
  _Slony_I_xxid_snapshot_out(PG_FUNCTION_ARGS)
  {
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(0))));
  
  	char	   *str = palloc(28 + snap->nxip * 13);
***************
*** 375,379 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
--- 369,373 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(1))));
  	int			i;
  
***************
*** 401,405 ****
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(1))));
  	int			i;
  
--- 395,399 ----
  {
  	TransactionId value = PG_GETARG_TRANSACTIONID(0);
! 	xxid_snapshot *snap = (xxid_snapshot *) VARDATA(PG_DETOAST_DATUM((PG_GETARG_DATUM(1))));
  	int			i;
  

From cbbrowne at lists.slony.info  Wed May  9 11:00:26 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Wed May  9 11:00:28 2007
Subject: [Slony1-commit] slony1-engine RELEASE-1.2.10
Message-ID: <20070509180026.93DD82903C9@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv1531

Modified Files:
      Tag: REL_1_2_STABLE
	RELEASE-1.2.10 
Log Message:
Describe (in release notes) the fix made by jwieck to support 8.3 tuple
compression


Index: RELEASE-1.2.10
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/Attic/RELEASE-1.2.10,v
retrieving revision 1.1.2.5
retrieving revision 1.1.2.6
diff -C2 -d -r1.1.2.5 -r1.1.2.6
*** RELEASE-1.2.10	2 May 2007 21:37:06 -0000	1.1.2.5
--- RELEASE-1.2.10	9 May 2007 18:00:24 -0000	1.1.2.6
***************
*** 11,12 ****
--- 11,19 ----
  
  - Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated
+ 
+ - in xxid.c, changes to support PostgreSQL 8.3 as tuple compression has
+   more extensive support
+ 
+   VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))))
+   tends to replace
+   PG_GETARG_VARLENA(0)

From devrim at lists.slony.info  Wed May  9 12:20:05 2007
From: devrim at lists.slony.info (Devrim)
Date: Wed May  9 12:20:07 2007
Subject: [Slony1-commit] slony1-engine/doc/adminguide monitoring.sgml
Message-ID: <20070509192005.9930E290016@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv8791/doc/adminguide

Modified Files:
	monitoring.sgml 
Log Message:

Make psql_replication_check.pl work with DBD::Pg + fix documentation for the file name.

Devrim Gunduz & Gerfried Fuchs



Index: monitoring.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/monitoring.sgml,v
retrieving revision 1.35
retrieving revision 1.36
diff -C2 -d -r1.35 -r1.36
*** monitoring.sgml	30 Jan 2007 19:23:19 -0000	1.35
--- monitoring.sgml	9 May 2007 19:20:03 -0000	1.36
***************
*** 10,14 ****
  
  <para> The script in the <filename>tools</filename> directory called
! <command> pgsql_replication_check.pl </command> represents some of the
  best answers arrived at in attempts to build replication tests to plug
  into the <ulink url="http://www.nagios.org/"> &nagios; </ulink> system
--- 10,14 ----
  
  <para> The script in the <filename>tools</filename> directory called
! <command> psql_replication_check.pl </command> represents some of the
  best answers arrived at in attempts to build replication tests to plug
  into the <ulink url="http://www.nagios.org/"> &nagios; </ulink> system
***************
*** 35,39 ****
  </itemizedlist>
  
! <para> The new script, <command>pgsql_replication_check.pl</command>,
  takes the minimalist approach of assuming that the system is an online
  system that sees regular <quote>traffic,</quote> so that you can
--- 35,39 ----
  </itemizedlist>
  
! <para> The new script, <command>psql_replication_check.pl</command>,
  takes the minimalist approach of assuming that the system is an online
  system that sees regular <quote>traffic,</quote> so that you can

From devrim at lists.slony.info  Wed May  9 12:20:05 2007
From: devrim at lists.slony.info (Devrim)
Date: Wed May  9 12:20:07 2007
Subject: [Slony1-commit] slony1-engine/tools psql_replication_check.pl
Message-ID: <20070509192005.A406D2903C9@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/tools
In directory main.slony.info:/tmp/cvs-serv8791/tools

Modified Files:
	psql_replication_check.pl 
Log Message:

Make psql_replication_check.pl work with DBD::Pg + fix documentation for the file name.

Devrim Gunduz & Gerfried Fuchs



Index: psql_replication_check.pl
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tools/psql_replication_check.pl,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** psql_replication_check.pl	11 Jul 2005 22:00:30 -0000	1.3
--- psql_replication_check.pl	9 May 2007 19:20:03 -0000	1.4
***************
*** 10,14 ****
  use strict;
  
! use Pg;
  use Getopt::Std;
  
--- 10,14 ----
  use strict;
  
! use DBD::Pg;
  use Getopt::Std;
  
***************
*** 44,48 ****
  $status = $conn->status;
  
! if ($status ne PGRES_CONNECTION_OK)
  {
  	chomp(my $error = $conn->errorMessage);
--- 44,48 ----
  $status = $conn->status;
  
! if ($status ne 'PGRES_CONNECTION_OK')
  {
  	chomp(my $error = $conn->errorMessage);
***************
*** 54,58 ****
  $res = $conn->exec($query);
  $status = $res->resultStatus;
! if ($status ne PGRES_TUPLES_OK)
  {
  	chomp(my $error = $conn->errorMessage);
--- 54,58 ----
  $res = $conn->exec($query);
  $status = $res->resultStatus;
! if ($status ne 'PGRES_TUPLES_OK')
  {
  	chomp(my $error = $conn->errorMessage);

From devrim at lists.slony.info  Wed May  9 12:24:46 2007
From: devrim at lists.slony.info (Devrim)
Date: Wed May  9 12:24:47 2007
Subject: [Slony1-commit] slony1-engine/doc/adminguide monitoring.sgml
Message-ID: <20070509192446.6E50E290456@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/doc/adminguide
In directory main.slony.info:/tmp/cvs-serv9218/doc/adminguide

Modified Files:
      Tag: REL_1_2_STABLE
	monitoring.sgml 
Log Message:
Fix documentation for psql_replication_check.pl


Index: monitoring.sgml
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/doc/adminguide/monitoring.sgml,v
retrieving revision 1.29.2.6
retrieving revision 1.29.2.7
diff -C2 -d -r1.29.2.6 -r1.29.2.7
*** monitoring.sgml	16 Mar 2007 19:01:26 -0000	1.29.2.6
--- monitoring.sgml	9 May 2007 19:24:44 -0000	1.29.2.7
***************
*** 10,14 ****
  
  <para> The script in the <filename>tools</filename> directory called
! <command> pgsql_replication_check.pl </command> represents some of the
  best answers arrived at in attempts to build replication tests to plug
  into the <ulink url="http://www.nagios.org/"> &nagios; </ulink> system
--- 10,14 ----
  
  <para> The script in the <filename>tools</filename> directory called
! <command> psql_replication_check.pl </command> represents some of the
  best answers arrived at in attempts to build replication tests to plug
  into the <ulink url="http://www.nagios.org/"> &nagios; </ulink> system
***************
*** 35,39 ****
  </itemizedlist>
  
! <para> The new script, <command>pgsql_replication_check.pl</command>,
  takes the minimalist approach of assuming that the system is an online
  system that sees regular <quote>traffic,</quote> so that you can
--- 35,39 ----
  </itemizedlist>
  
! <para> The new script, <command>psql_replication_check.pl</command>,
  takes the minimalist approach of assuming that the system is an online
  system that sees regular <quote>traffic,</quote> so that you can

From dfetter at lists.slony.info  Wed May  9 13:20:19 2007
From: dfetter at lists.slony.info (David Fetter)
Date: Wed May  9 13:36:26 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070509202019.76DDA290BDC@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv15361

Modified Files:
	postgresql-slony1-engine.spec.in 
Log Message:
Checking whether writes on CVS work from here...


Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.33
retrieving revision 1.34
diff -C2 -d -r1.33 -r1.34
*** postgresql-slony1-engine.spec.in	4 Dec 2006 06:17:56 -0000	1.33
--- postgresql-slony1-engine.spec.in	9 May 2007 20:20:17 -0000	1.34
***************
*** 6,10 ****
  %define pg_version   %(rpm -qv postgresql-devel|head -n 1|awk -F '-' '{print $3}')
  
! Summary:	A "master to multiple slaves" replication system with cascading and failover
  Name:		@PACKAGE_NAME@
  Version:	@PACKAGE_VERSION@
--- 6,10 ----
  %define pg_version   %(rpm -qv postgresql-devel|head -n 1|awk -F '-' '{print $3}')
  
! Summary:	A "master to multiple slaves" replication system with cascading, node rearrangement and failover
  Name:		@PACKAGE_NAME@
  Version:	@PACKAGE_VERSION@

From cbbrowne at lists.slony.info  Thu May 10 15:17:54 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Thu May 10 15:17:56 2007
Subject: [Slony1-commit] slony1-engine/tests/one-offs/updatefunctions
	test-update-functions.sh
Message-ID: <20070510221754.ADA782902E9@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/tests/one-offs/updatefunctions
In directory main.slony.info:/tmp/cvs-serv31772

Modified Files:
	test-update-functions.sh 
Log Message:
Numerous fixes to script that tries to build numerous Slony-I versions
and run INIT CLUSTER (against elder versions) then UPDATE FUNCTIONS
(to bring schema up to date) and compares output of pg_dumps of the
various tables to see how similar the schemas are...


Index: test-update-functions.sh
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/tests/one-offs/updatefunctions/test-update-functions.sh,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** test-update-functions.sh	15 Jan 2007 21:38:24 -0000	1.1
--- test-update-functions.sh	10 May 2007 22:17:52 -0000	1.2
***************
*** 16,20 ****
  SLONYCLUSTER=${SLONYCLUSTER:-"functest"}
  
! OURCVSROOT=":pserver:anonymous@gborg.postgresql.org:/usr/local/cvsroot/slony1"
  
  ELDERVERSIONS="
--- 16,20 ----
  SLONYCLUSTER=${SLONYCLUSTER:-"functest"}
  
! OURCVSROOT=":pserver:anonymous@main.slony.info:/slony1"
  
  ELDERVERSIONS="
***************
*** 33,36 ****
--- 33,39 ----
  	REL_1_1_5
  	REL_1_1_6
+ 	REL_1_1_7
+ 	REL_1_1_8
+ 	REL_1_1_9
  	REL_1_2_0
  	REL_1_2_1
***************
*** 38,88 ****
  	REL_1_2_5
  	REL_1_2_6
  "
  
! LATESTVERSION=`echo ${VERSIONS} | sort | tail -1`
  
  # Make sure all versions of Slony-I are present and built
  for REL in `echo $VERSIONS | sort`; do
!     if [ -e ${SRCHOME}/slony1-engine-${REL} ] ; then
!       CHECKOUT=0
!    else
!       cd ${SRCHOME}
! echo"     CVSROOT=\"${OURCVSROOT}\"  cvs export -r${REL} slony1-engine"
!      CVSROOT="${OURCVSROOT}"  cvs export -r${REL} slony1-engine
!      mv slony1-engine slony1-engine-${REL}
!      cd ${SRCHOME}/slony1-engine-${REL}
!      if [ echo ${REL} | egrep 'REL_1_2' ] ; then
!        ./configure  --with-pgconfigdir=${PGBINDIR}
!      fi
!      if [ echo ${REL} | egrep 'REL_1_1' ] ; then
!        ./configure  --with-pgconfigdir=${PGBINDIR} --with-pgbindir=${PGBINDIR} --with-pgincludedir=${PGHOME}/include   --with-pgincludeserverdir=${PGHOME}/include/server --with-pglibdir=${PGHOME}/lib   --with-pgpkglibdir=${PGHOME}/lib   --with-pgsharedir=${PGHOME}/share
!      fi
!      make
    fi
  done
  
! echo <<EOF > $SRCHOME/init-cluster.slonik
  cluster name = ${SLONYCLUSTER};
  node 1 admin conninfo='host=${PGHOST} dbname=${PGDATABASE} user=${PGUSER} port=${PGPORT}';
! init cluster (id=1, 'test cluster for checking schema');
! EOF
  
! echo <<EOF > $SRCHOME/update-functions.slonik
  cluster name = ${SLONYCLUSTER};
  node 1 admin conninfo='host=${PGHOST} dbname=${PGDATABASE} user=${PGUSER} port=${PGPORT}';
  update functions (id=1);
! EOF
  
  for rel in `echo $VERSIONS | sort`; do
    ${PGBINDIR}/dropdb -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE}
    ${PGBINDIR}/createdb -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE}
    ${PGBINDIR}/createlang -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} plpgsql ${PGDATABASE}
!   cd ${SRCHOME}/slony1-engine-${rel}
    make install
    ${PGBINDIR}/slonik ${SRCHOME}/init-cluster.slonik
!   cd ${SRCHOME}/slony1-engine-${LATESTVERSION}
    make install
    ${PGBINDIR}/slonik ${SRCHOME}/update-functions.slonik
    mkdir -p $SRCHOME/relschemas
    ${PGBINDIR}/pg_dump  -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE} > $SRCHOME/relschemas/${rel}-to-${LATESTVERSION}.sql
  done
--- 41,104 ----
  	REL_1_2_5
  	REL_1_2_6
+ 	REL_1_2_7
+ 	REL_1_2_8
+ 	REL_1_2_9
  "
  
! LATESTVERSION=`echo ${VERSIONS} | fmt -w 5 | sort | tail -1`
  
  # Make sure all versions of Slony-I are present and built
  for REL in `echo $VERSIONS | sort`; do
!   if [ -e ${SRCHOME}/slony1-engine-${REL} ] ; then
!      CHECKOUT=0
!   else
!     echo "Check out repository for version ${REL}"
!     cd ${SRCHOME}
!     CVSROOT="${OURCVSROOT}"  cvs export -r${REL} slony1-engine
!     mv slony1-engine slony1-engine-${REL}
    fi
+   echo "run autoconf version ${REL}"
+   cd ${SRCHOME}/slony1-engine-${REL}
+   autoconf
+   for i in `echo ${REL} | egrep REL_1_2`; do
+     echo "Build 1.2 release ${REL}"
+     ./configure  --with-pgconfigdir=${PGBINDIR}
+   done
+   for i in `echo ${REL} | egrep REL_1_1`; do
+     echo "Build 1.1 release ${REL}"
+     ./configure  --with-pgconfigdir=${PGBINDIR} --with-pgbindir=${PGBINDIR} --with-pgincludedir=${PGHOME}/include   --with-pgincludeserverdir=${PGHOME}/include/server --with-pglibdir=${PGHOME}/lib   --with-pgpkglibdir=${PGHOME}/lib   --with-pgsharedir=${PGHOME}/share
+   done
+   make
  done
  
! echo "
  cluster name = ${SLONYCLUSTER};
  node 1 admin conninfo='host=${PGHOST} dbname=${PGDATABASE} user=${PGUSER} port=${PGPORT}';
! init cluster (id=1, comment='test cluster for checking schema');
! " > $SRCHOME/init-cluster.slonik
  
! echo "
  cluster name = ${SLONYCLUSTER};
  node 1 admin conninfo='host=${PGHOST} dbname=${PGDATABASE} user=${PGUSER} port=${PGPORT}';
  update functions (id=1);
! " > $SRCHOME/update-functions.slonik
  
  for rel in `echo $VERSIONS | sort`; do
+   echo "Prepare databases for ${rel}"
    ${PGBINDIR}/dropdb -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE}
    ${PGBINDIR}/createdb -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE}
    ${PGBINDIR}/createlang -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} plpgsql ${PGDATABASE}
!   echo "Install Slony-I version ${rel}"
!   cd ${SRCHOME}/slony1-engine-${rel}/src
    make install
+   echo "Initialize Slony-I cluster based on release ${rel}"
    ${PGBINDIR}/slonik ${SRCHOME}/init-cluster.slonik
!   echo "Install Slony-I version ${LATESTVERSION}"
!   cd ${SRCHOME}/slony1-engine-${LATESTVERSION}/src
    make install
+   echo "Update cluster to ${LATESTVERSION}"
    ${PGBINDIR}/slonik ${SRCHOME}/update-functions.slonik
    mkdir -p $SRCHOME/relschemas
+   echo "Dump ${rel}-to-${LATESTVERSION} schema"
    ${PGBINDIR}/pg_dump  -h ${PGHOST} -p ${PGPORT} -U ${PGUSER} ${PGDATABASE} > $SRCHOME/relschemas/${rel}-to-${LATESTVERSION}.sql
  done

From wieck at lists.slony.info  Mon May 14 15:04:51 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Mon May 14 15:04:53 2007
Subject: [Slony1-commit] slony1-engine/src/xxid xxid.c
Message-ID: <20070514220451.BB852290437@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/xxid
In directory main.slony.info:/tmp/cvs-serv7071/xxid

Modified Files:
      Tag: REL_1_2_STABLE
	xxid.c 
Log Message:
Make the SET_VARSIZE macro definition in xxid.c identical to
what is used in slony1_funcs.c

Jan


Index: xxid.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/xxid/xxid.c,v
retrieving revision 1.12.2.2
retrieving revision 1.12.2.3
diff -C2 -d -r1.12.2.2 -r1.12.2.3
*** xxid.c	9 May 2007 17:43:10 -0000	1.12.2.2
--- xxid.c	14 May 2007 22:04:49 -0000	1.12.2.3
***************
*** 24,31 ****
  #endif
  
! #ifndef SET_VARSIZE
! #define SET_VARSIZE(PTR,len) (*((uint32 *)(PTR)) = (len) & 0x3FFFFFFF)
  #endif
  
  #ifndef PG_GETARG_TRANSACTIONID
  #define PG_GETARG_TRANSACTIONID(n)	DatumGetTransactionId(PG_GETARG_DATUM(n))
--- 24,33 ----
  #endif
  
! /* -- Change from PostgreSQL Ver 8.3 -- */
! #if !((PG_VERSION_MAJOR > 8) || ((PG_VERSION_MAJOR == 8) && (PG_VERSION_MINOR >= 3)))
! #define SET_VARSIZE(datum, size) (VARATT_SIZEP(datum)=(size))
  #endif
  
+ 
  #ifndef PG_GETARG_TRANSACTIONID
  #define PG_GETARG_TRANSACTIONID(n)	DatumGetTransactionId(PG_GETARG_DATUM(n))

From wieck at lists.slony.info  Tue May 15 07:05:17 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue May 15 07:05:18 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape compare_pgbench_dumps
	test_1_pgbench.in test_2_pgbench.in
Message-ID: <20070515140517.52EB42903FE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv10192

Modified Files:
	compare_pgbench_dumps test_1_pgbench.in test_2_pgbench.in 
Log Message:
Adjust ducttape tests 1 and 2 for Slony-I 2.0 without
TABLE ADD KEY support. The other tests need adjustment
as well.

Jan


Index: test_2_pgbench.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_2_pgbench.in,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** test_2_pgbench.in	1 Jun 2006 12:35:52 -0000	1.2
--- test_2_pgbench.in	15 May 2007 14:05:15 -0000	1.3
***************
*** 32,36 ****
  DEBUG_LEVEL=2
  
! PGBENCH_SCALE=10
  PGBENCH_CLIENTS=5
  PGBENCH_TRANS=`expr 50000 / $PGBENCH_CLIENTS`
--- 32,36 ----
  DEBUG_LEVEL=2
  
! PGBENCH_SCALE=1
  PGBENCH_CLIENTS=5
  PGBENCH_TRANS=`expr 50000 / $PGBENCH_CLIENTS`
***************
*** 102,105 ****
--- 102,112 ----
  createdb $DB1 || exit -1
  pgbench -i -s $PGBENCH_SCALE $DB1
+ psql $DB1 <<_EOF_
+ 	create sequence history_seq;
+ 	alter table history add column seqno int8;
+ 	alter table history alter column seqno set default nextval('history_seq');
+ 	update history set seqno = nextval('history_seq') where seqno is null;
+ 	alter table history add primary key (seqno);
+ _EOF_
  pg_dump -s $DB1 >pgbench_schema.sql
  
***************
*** 152,162 ****
  
  	try {
- 		table add key (node id = 1, fully qualified name = 'public.history');
- 	}
- 	on error {
- 		exit -1;
- 	}
- 
- 	try {
  		create set (id = 1, origin = 1, comment = 'Set 1 - pgbench tables');
  		set add table (set id = 1, origin = 1,
--- 159,162 ----
***************
*** 171,175 ****
  		set add table (set id = 1, origin = 1,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table accounts');
  	}
  	on error {
--- 171,175 ----
  		set add table (set id = 1, origin = 1,
  			id = 4, fully qualified name = 'public.history',
! 			comment = 'Table history');
  	}
  	on error {
***************
*** 301,305 ****
  	store path (server = 3, client = 2, conninfo = 'dbname=$DB3');
  
! 	echo 'Database $DB2 added as Node 2';
  _EOF_
  
--- 301,305 ----
  	store path (server = 3, client = 2, conninfo = 'dbname=$DB3');
  
! 	echo 'Database $DB3 added as Node 3';
  _EOF_
  

Index: test_1_pgbench.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_1_pgbench.in,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** test_1_pgbench.in	4 Jul 2005 23:45:21 -0000	1.1
--- test_1_pgbench.in	15 May 2007 14:05:15 -0000	1.2
***************
*** 89,92 ****
--- 89,99 ----
  createdb $DB1 || exit 1
  pgbench -i -s $PGBENCH_SCALE $DB1
+ psql $DB1 <<_EOF_
+ 	create sequence history_seq;
+ 	alter table history add column seqno int8;
+ 	alter table history alter column seqno set default nextval('history_seq');
+ 	update history set seqno = nextval('history_seq') where seqno is null;
+ 	alter table history add primary key (seqno);
+ _EOF_
  pg_dump -s $DB1 >pgbench_schema.sql
  
***************
*** 138,148 ****
  
  	try {
- 		table add key (node id = 11, fully qualified name = 'public.history');
- 	}
- 	on error {
- 		exit 1;
- 	}
- 
- 	try {
  		create set (id = 1, origin = 11, comment = 'Set 1 - pgbench tables');
  		set add table (set id = 1, origin = 11,
--- 145,148 ----
***************
*** 157,161 ****
  		set add table (set id = 1, origin = 11,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table accounts');
  	}
  	on error {
--- 157,161 ----
  		set add table (set id = 1, origin = 11,
  			id = 4, fully qualified name = 'public.history',
! 			comment = 'Table history');
  	}
  	on error {

Index: compare_pgbench_dumps
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/compare_pgbench_dumps,v
retrieving revision 1.4
retrieving revision 1.5
diff -C2 -d -r1.4 -r1.5
*** compare_pgbench_dumps	27 Oct 2005 19:20:40 -0000	1.4
--- compare_pgbench_dumps	15 May 2007 14:05:15 -0000	1.5
***************
*** 17,21 ****
  			from tellers order by tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			"_Slony-I_T1_rowID" from history order by "_Slony-I_T1_rowID";
  _EOF_
  psql -o dump.tmp.2.$$ $DB2 <<_EOF_
--- 17,21 ----
  			from tellers order by tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			seqno from history order by seqno;
  _EOF_
  psql -o dump.tmp.2.$$ $DB2 <<_EOF_
***************
*** 27,31 ****
  			from tellers order by tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			"_Slony-I_T1_rowID" from history order by "_Slony-I_T1_rowID";
  _EOF_
  
--- 27,31 ----
  			from tellers order by tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			seqno from history order by seqno;
  _EOF_
  

From wieck at lists.slony.info  Tue May 15 07:06:37 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue May 15 07:06:38 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape .cvsignore
Message-ID: <20070515140637.CEF432903FE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv10241

Modified Files:
	.cvsignore 
Log Message:
Add test_J_pgbench to ignored files.

Jan


Index: .cvsignore
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/.cvsignore,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** .cvsignore	22 Nov 2005 05:29:16 -0000	1.2
--- .cvsignore	15 May 2007 14:06:35 -0000	1.3
***************
*** 17,18 ****
--- 17,19 ----
  test_H_lag
  test_I_droptab
+ test_J_pgbench

From wieck at lists.slony.info  Tue May 15 09:56:39 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue May 15 09:56:41 2007
Subject: [Slony1-commit] slony1-engine/src/slonik slonik.c
Message-ID: <20070515165639.9849B290BE0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slonik
In directory main.slony.info:/tmp/cvs-serv11261

Modified Files:
      Tag: REL_1_2_STABLE
	slonik.c 
Log Message:
Holy sh*t ... Slonik's SYNC command never recorded the new
seqno in the admin conninfo. No wonder WAIT was behaving a
little whacky!

Jan


Index: slonik.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slonik/slonik.c,v
retrieving revision 1.67.2.8
retrieving revision 1.67.2.9
diff -C2 -d -r1.67.2.8 -r1.67.2.9
*** slonik.c	18 Apr 2007 19:28:27 -0000	1.67.2.8
--- slonik.c	15 May 2007 16:56:37 -0000	1.67.2.9
***************
*** 4235,4239 ****
  				 stmt->hdr.script->clustername,
  				 stmt->hdr.script->clustername);
! 	if (db_exec_command((SlonikStmt *) stmt, adminfo1, &query) < 0)
  	{
  		dstring_free(&query);
--- 4235,4239 ----
  				 stmt->hdr.script->clustername,
  				 stmt->hdr.script->clustername);
! 	if (db_exec_evcommand((SlonikStmt *) stmt, adminfo1, &query) < 0)
  	{
  		dstring_free(&query);

From wieck at lists.slony.info  Tue May 15 12:40:18 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue May 15 12:40:21 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape test_5_pgbench.in
	test_5_subscribe
Message-ID: <20070515194018.CF5552903FE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv12176/src/ducttape

Modified Files:
	test_5_pgbench.in test_5_subscribe 
Log Message:
Fix SYNC so that WAIT FOR EVENT finally works.

Jan


Index: test_5_pgbench.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_5_pgbench.in,v
retrieving revision 1.2
retrieving revision 1.3
diff -C2 -d -r1.2 -r1.3
*** test_5_pgbench.in	1 Jun 2006 12:35:52 -0000	1.2
--- test_5_pgbench.in	15 May 2007 19:40:16 -0000	1.3
***************
*** 93,96 ****
--- 93,103 ----
  createdb $DB1 || exit 1
  pgbench -i -s $PGBENCH_SCALE $DB1
+ psql $DB1 <<_EOF_
+ 	create sequence history_seq;
+ 	alter table history add column seqno int8;
+ 	alter table history alter column seqno set default nextval('history_seq');
+ 	update history set seqno = nextval('history_seq') where seqno is null;
+ 	alter table history add primary key (seqno);
+ _EOF_
  pg_dump -s $DB1 >pgbench_schema.sql
  
***************
*** 141,151 ****
  
  	try {
- 		table add key (node id = 1, fully qualified name = 'public.history');
- 	}
- 	on error {
- 		exit 1;
- 	}
- 
- 	try {
  		create set (id = 1, origin = 1, comment = 'Set 1 - pgbench tables');
  		set add table (set id = 1, origin = 1,
--- 148,151 ----
***************
*** 160,164 ****
  		set add table (set id = 1, origin = 1,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table accounts');
  	}
  	on error {
--- 160,164 ----
  		set add table (set id = 1, origin = 1,
  			id = 4, fully qualified name = 'public.history',
! 			comment = 'Table history');
  	}
  	on error {
***************
*** 286,290 ****
  			from tellers_sum order by su_tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			"_Slony-I_T1_rowID" from history order by "_Slony-I_T1_rowID";
  _EOF_
  psql $DB2 -o dump.tmp.2.$$ <<_EOF_
--- 286,290 ----
  			from tellers_sum order by su_tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			seqno from history order by seqno;
  _EOF_
  psql $DB2 -o dump.tmp.2.$$ <<_EOF_
***************
*** 300,304 ****
  			from tellers_sum order by su_tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			"_Slony-I_T1_rowID" from history order by "_Slony-I_T1_rowID";
  _EOF_
  
--- 300,304 ----
  			from tellers_sum order by su_tid;
  	select 'history:'::text, tid, bid, aid, delta, mtime, filler,
! 			seqno from history order by seqno;
  _EOF_
  

Index: test_5_subscribe
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_5_subscribe,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** test_5_subscribe	30 Oct 2006 14:48:18 -0000	1.3
--- test_5_subscribe	15 May 2007 19:40:16 -0000	1.4
***************
*** 29,35 ****
  		exit 1;
  	}
! 	echo '***** Waiting for subscribe set to arrive on origin';
! 	wait for event (origin = 2, confirmed = 1);
! 	echo '***** Subscribe set received on origin - issue SYNC';
  	sync (id = 1);
  	echo '***** Waiting for SYNC to be done on subscriber';
--- 29,33 ----
  		exit 1;
  	}
! 	echo '***** Subscribe set queued - issue SYNC';
  	sync (id = 1);
  	echo '***** Waiting for SYNC to be done on subscriber';

From wieck at lists.slony.info  Tue May 15 12:40:18 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Tue May 15 12:40:21 2007
Subject: [Slony1-commit] slony1-engine/src/slonik slonik.c
Message-ID: <20070515194018.DDDCD290437@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slonik
In directory main.slony.info:/tmp/cvs-serv12176/src/slonik

Modified Files:
	slonik.c 
Log Message:
Fix SYNC so that WAIT FOR EVENT finally works.

Jan


Index: slonik.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slonik/slonik.c,v
retrieving revision 1.75
retrieving revision 1.76
diff -C2 -d -r1.75 -r1.76
*** slonik.c	18 Apr 2007 15:03:51 -0000	1.75
--- slonik.c	15 May 2007 19:40:16 -0000	1.76
***************
*** 3973,3977 ****
--- 3973,3987 ----
  			 */
  			if (adminfo->last_event < 0)
+ 			{
+ 				if (adminfo->no_id == stmt->wait_origin)
+ 				{
+ 					printf("%s:%d: Error: "
+ 					   "script did not generate any event on node %d\n",
+ 							   stmt->hdr.stmt_filename, stmt->hdr.stmt_lno,
+ 							   stmt->wait_origin);
+ 					return -1;
+ 				}
  				continue;
+ 			}
  
  			if (stmt->wait_confirmed < 0)
***************
*** 4096,4100 ****
  				 stmt->hdr.script->clustername,
  				 stmt->hdr.script->clustername);
! 	if (db_exec_command((SlonikStmt *) stmt, adminfo1, &query) < 0)
  	{
  		dstring_free(&query);
--- 4106,4110 ----
  				 stmt->hdr.script->clustername,
  				 stmt->hdr.script->clustername);
! 	if (db_exec_evcommand((SlonikStmt *) stmt, adminfo1, &query) < 0)
  	{
  		dstring_free(&query);

From devrim at lists.slony.info  Wed May 16 22:51:19 2007
From: devrim at lists.slony.info (Devrim)
Date: Wed May 16 22:51:21 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070517055119.62AE5290C05@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv23852

Modified Files:
      Tag: REL_1_2_STABLE
	postgresql-slony1-engine.spec.in 
Log Message:
- Fix rpm build problem when the system has pg_config in both under
  /usr/local/pgsql/bin and /usr/bin



Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.31.2.8
retrieving revision 1.31.2.9
diff -C2 -d -r1.31.2.8 -r1.31.2.9
*** postgresql-slony1-engine.spec.in	22 Mar 2007 20:41:27 -0000	1.31.2.8
--- postgresql-slony1-engine.spec.in	17 May 2007 05:51:17 -0000	1.31.2.9
***************
*** 60,64 ****
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
--- 60,64 ----
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with_pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
***************
*** 127,130 ****
--- 127,134 ----
  
  %changelog
+ * Thu May 17 2007 Devrim Gunduz <devrim@CommandPrompt.com>
+ - Fix rpm build problem when the system has pg_config in both under
+   /usr/local/pgsql/bin and /usr/bin
+ 
  * Wed Mar 22 2007 Christopher Browne <cbbrowne@ca.afilias.info>
  - Added more recent release notes

From devrim at lists.slony.info  Wed May 16 22:52:08 2007
From: devrim at lists.slony.info (Devrim)
Date: Wed May 16 22:52:08 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070517055208.4DCCD290456@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv23880

Modified Files:
	postgresql-slony1-engine.spec.in 
Log Message:
Sync spec file with 1.2 branch


Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.34
retrieving revision 1.35
diff -C2 -d -r1.34 -r1.35
*** postgresql-slony1-engine.spec.in	9 May 2007 20:20:17 -0000	1.34
--- postgresql-slony1-engine.spec.in	17 May 2007 05:52:06 -0000	1.35
***************
*** 6,10 ****
  %define pg_version   %(rpm -qv postgresql-devel|head -n 1|awk -F '-' '{print $3}')
  
! Summary:	A "master to multiple slaves" replication system with cascading, node rearrangement and failover
  Name:		@PACKAGE_NAME@
  Version:	@PACKAGE_VERSION@
--- 6,10 ----
  %define pg_version   %(rpm -qv postgresql-devel|head -n 1|awk -F '-' '{print $3}')
  
! Summary:	A "master to multiple slaves" replication system with cascading and failover
  Name:		@PACKAGE_NAME@
  Version:	@PACKAGE_VERSION@
***************
*** 60,64 ****
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
--- 60,64 ----
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with_pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
***************
*** 109,116 ****
  %files
  %defattr(-,root,root,-)
! %doc COPYRIGHT UPGRADING HISTORY-1.1 INSTALL SAMPLE RELEASE-1.2.1
! %if %docs
! %doc doc/adminguide  doc/concept  doc/howto  doc/implementation  doc/support
! %endif
  %{_bindir}/*
  %{_libdir}/pgsql/slony1_funcs.so
--- 109,113 ----
  %files
  %defattr(-,root,root,-)
! %doc COPYRIGHT UPGRADING HISTORY-1.1 INSTALL SAMPLE RELEASE-1.2.1 RELEASE-1.2.2 RELEASE-1.2.5 RELEASE-1.2.6 RELEASE-1.2.7 RELEASE-1.2.8 RELEASE-1.2.9
  %{_bindir}/*
  %{_libdir}/pgsql/slony1_funcs.so
***************
*** 123,130 ****
  %endif
  
  %changelog
! * Mon Dec 4 2006 Devrim Gunduz <devrim@CommandPrompt.com>
! - On 64-bit boxes, both 32 and 64 bit -devel packages may be installed. Fix version check
! script
  - Revert tar name patch
  - Macros cannot be used in various parts of the spec file. Revert that commit
--- 120,146 ----
  %endif
  
+ %if %docs
+ %files docs
+ %defattr(-,root,root,-)
+ %doc doc/adminguide  doc/concept  doc/howto  doc/implementation  doc/support
+ %endif
+ 
  %changelog
! * Thu May 17 2007 Devrim Gunduz <devrim@CommandPrompt.com>
! - Fix rpm build problem when the system has pg_config in both under
!   /usr/local/pgsql/bin and /usr/bin
! 
! * Wed Mar 22 2007 Christopher Browne <cbbrowne@ca.afilias.info>
! - Added more recent release notes
! 
! * Wed Mar 7 2007 Christopher Browne <cbbrowne@ca.afilias.info>
! - Added more recent release notes
! 
! * Thu Jan 4 2007 Devrim Gunduz <devrim@CommandPrompt.com>
! - Add docs package (It should be added before but...)
! 
! * Wed Nov 8 2006 Devrim Gunduz <devrim@CommandPrompt.com>
! - On 64-bit boxes, both 32 and 64 bit -devel packages may be installed. 
!   Fix version check script
  - Revert tar name patch
  - Macros cannot be used in various parts of the spec file. Revert that commit

From devrim at lists.slony.info  Thu May 17 00:09:28 2007
From: devrim at lists.slony.info (Devrim)
Date: Thu May 17 00:09:30 2007
Subject: [Slony1-commit] slony1-engine/redhat slon.init
Message-ID: <20070517070928.5EFFC290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/redhat
In directory main.slony.info:/tmp/cvs-serv24313

Added Files:
	slon.init 
Log Message:
Init script for Red Hat / Fedora. This script will need testing, but AFAICS it works fine.

TODO: We must incorporate this init script to RPM.


--- NEW FILE: slon.init ---
#!/bin/sh
# postgresql    This is the init script for starting up the Slony-I
#
# chkconfig: - 64 36
# description: Starts and stops the Slon daemon that handles
#              Slony-I replication.
# processname: slon
# pidfile:	/var/run/slon.pid
#
# v1.0.0 Devrim GUNDUZ <devrim@CommandPrompt.com>
# - Initial version of Red Hat / Fedora init script, based on Ubuntu one.

if [ -r /etc/sysconfig/slony1 ]; then
    . /etc/sysconfig/slony1
fi

# Source function library.
INITD=/etc/rc.d/init.d
. $INITD/functions

# Get function listing for cross-distribution logic.
TYPESET=`typeset -f|grep "declare"`

# Get config.
. /etc/sysconfig/network

# For SELinux we need to use 'runuser' not 'su'
if [ -x /sbin/runuser ]
then
	SU=runuser
else
	SU=su
fi

# Check that networking is up.
# We need it for slon
[ "${NETWORKING}" = "no" ] && exit 0

# Find the name of the script
NAME=`basename $0`
if [ ${NAME:0:1} = "S" -o ${NAME:0:1} = "K" ]
then
	NAME=${NAME:3}
fi

# Set defaults for configuration variables
SLONENGINE=/usr/bin
SLONDAEMON=$SLONENGINE/slon
SLONCONF=/etc/slon.conf
SLONPID=/var/run/slon.pid

test -x $SLONDAEMON || exit 5


script_result=0

start(){
	SLON_START=$"Starting ${NAME} service: "

	echo -n "$SLON_START"
	daemon $SLONDAEMON -f $SLONCONF -p $SLONPID 2>&1 </dev/null &
	sleep 2

	pid=`pidof -s "$SLONDAEMON"`
	if [ $pid ] 
	then
		success "$SLON_START"
		touch /var/lock/subsys/${NAME}
		echo
	else
		failure "$PSQL_START"
		echo
		script_result=1
	fi
}

stop(){
	echo -n $"Stopping ${NAME} service: "
        if [ $UID -ne 0 ]; then
                RETVAL=1
                failure
        else
                killproc /usr/bin/slon
                RETVAL=$?
                [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/${NAME}
        fi;
        echo
        return $RETVAL
}

restart(){
    stop
    start
}

condrestart(){
    [ -e /var/lock/subsys/${NAME} ] && restart
}

condstop(){
    [ -e /var/lock/subsys/${NAME} ] && stop
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status postmaster
        script_result=$?
        ;;
  restart)
        restart
        ;;
  condrestart)
        condrestart
        ;;
  condstop)
        condstop
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|condstop}"
        exit 1
esac

exit $script_result

From devrim at lists.slony.info  Thu May 17 00:13:57 2007
From: devrim at lists.slony.info (Devrim)
Date: Thu May 17 00:13:58 2007
Subject: [Slony1-commit] slony1-engine/redhat slon.init
Message-ID: <20070517071357.89892290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/redhat
In directory main.slony.info:/tmp/cvs-serv24376

Added Files:
      Tag: REL_1_2_STABLE
	slon.init 
Log Message:
Init script for Red Hat / Fedora. This script will need testing, but AFAICS it works fine.

TODO: We must incorporate this init script to RPM.



--- NEW FILE: slon.init ---
#!/bin/sh
# postgresql    This is the init script for starting up the Slony-I
#
# chkconfig: - 64 36
# description: Starts and stops the Slon daemon that handles
#              Slony-I replication.
# processname: slon
# pidfile:	/var/run/slon.pid
#
# v1.0.0 Devrim GUNDUZ <devrim@CommandPrompt.com>
# - Initial version of Red Hat / Fedora init script, based on Ubuntu one.

if [ -r /etc/sysconfig/slony1 ]; then
    . /etc/sysconfig/slony1
fi

# Source function library.
INITD=/etc/rc.d/init.d
. $INITD/functions

# Get function listing for cross-distribution logic.
TYPESET=`typeset -f|grep "declare"`

# Get config.
. /etc/sysconfig/network

# For SELinux we need to use 'runuser' not 'su'
if [ -x /sbin/runuser ]
then
	SU=runuser
else
	SU=su
fi

# Check that networking is up.
# We need it for slon
[ "${NETWORKING}" = "no" ] && exit 0

# Find the name of the script
NAME=`basename $0`
if [ ${NAME:0:1} = "S" -o ${NAME:0:1} = "K" ]
then
	NAME=${NAME:3}
fi

# Set defaults for configuration variables
SLONENGINE=/usr/bin
SLONDAEMON=$SLONENGINE/slon
SLONCONF=/etc/slon.conf
SLONPID=/var/run/slon.pid

test -x $SLONDAEMON || exit 5


script_result=0

start(){
	SLON_START=$"Starting ${NAME} service: "

	echo -n "$SLON_START"
	daemon $SLONDAEMON -f $SLONCONF -p $SLONPID 2>&1 </dev/null &
	sleep 2

	pid=`pidof -s "$SLONDAEMON"`
	if [ $pid ] 
	then
		success "$SLON_START"
		touch /var/lock/subsys/${NAME}
		echo
	else
		failure "$PSQL_START"
		echo
		script_result=1
	fi
}

stop(){
	echo -n $"Stopping ${NAME} service: "
        if [ $UID -ne 0 ]; then
                RETVAL=1
                failure
        else
                killproc /usr/bin/slon
                RETVAL=$?
                [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/${NAME}
        fi;
        echo
        return $RETVAL
}

restart(){
    stop
    start
}

condrestart(){
    [ -e /var/lock/subsys/${NAME} ] && restart
}

condstop(){
    [ -e /var/lock/subsys/${NAME} ] && stop
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status postmaster
        script_result=$?
        ;;
  restart)
        restart
        ;;
  condrestart)
        condrestart
        ;;
  condstop)
        condstop
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|condstop}"
        exit 1
esac

exit $script_result

From devrim at lists.slony.info  Thu May 17 00:58:58 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Thu May 17 00:59:00 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070517075858.60B50290C06@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv24752

Modified Files:
	postgresql-slony1-engine.spec.in 
Log Message:
Install init script with rpm.
Fix --with-pgconfigdir parameter
Disable doc build by default, since there are sgml errors.



Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.35
retrieving revision 1.36
diff -C2 -d -r1.35 -r1.36
*** postgresql-slony1-engine.spec.in	17 May 2007 05:52:06 -0000	1.35
--- postgresql-slony1-engine.spec.in	17 May 2007 07:58:56 -0000	1.36
***************
*** 1,4 ****
  %{!?perltools:%define perltools 1}
! %{!?docs:%define docs 1}
  %{?buildrhel3:%define kerbdir /usr/kerberos}
  %{!?kerbdir:%define kerbdir "/usr"}
--- 1,4 ----
  %{!?perltools:%define perltools 1}
! %{!?docs:%define docs 0}
  %{?buildrhel3:%define kerbdir /usr/kerberos}
  %{!?kerbdir:%define kerbdir "/usr"}
***************
*** 12,16 ****
  License:	BSD
  Group:		Applications/Databases
! URL:		http://slony.info/
  Source0:	@PACKAGE_NAME@-%{version}.tar.gz
  BuildRoot:	%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
--- 12,16 ----
  License:	BSD
  Group:		Applications/Databases
! URL:		http://main.slony.info/
  Source0:	@PACKAGE_NAME@-%{version}.tar.gz
  BuildRoot:	%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
***************
*** 60,64 ****
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with_pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
--- 60,64 ----
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with-pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
***************
*** 79,82 ****
--- 79,83 ----
  rm -rf %{buildroot}
  install -d %{buildroot}%{_sysconfdir}
+ install -d %{buildroot}%{_sysconfdir}/init.d/
  install -d %{buildroot}%{_datadir}/pgsql/
  install -d %{buildroot}%{_libdir}/pgsql/
***************
*** 88,91 ****
--- 89,93 ----
  install -m 0755 tools/*.sh  %{buildroot}%{_bindir}/
  install -m 0644 share/slon.conf-sample %{buildroot}%{_sysconfdir}/slon.conf
+ install -m 0755 redhat/slon.init %{buildroot}%{_sysconfdir}/init.d/slon
  
  %if %perltools
***************
*** 109,113 ****
  %files
  %defattr(-,root,root,-)
! %doc COPYRIGHT UPGRADING HISTORY-1.1 INSTALL SAMPLE RELEASE-1.2.1 RELEASE-1.2.2 RELEASE-1.2.5 RELEASE-1.2.6 RELEASE-1.2.7 RELEASE-1.2.8 RELEASE-1.2.9
  %{_bindir}/*
  %{_libdir}/pgsql/slony1_funcs.so
--- 111,115 ----
  %files
  %defattr(-,root,root,-)
! %doc COPYRIGHT UPGRADING HISTORY-1.1 INSTALL SAMPLE RELEASE-1.2.1 RELEASE-1.2.2 
  %{_bindir}/*
  %{_libdir}/pgsql/slony1_funcs.so
***************
*** 115,118 ****
--- 117,121 ----
  %{_datadir}/pgsql/*.sql
  %config(noreplace) %{_sysconfdir}/slon.conf
+ %{_sysconfdir}/init.d/slon
  %if %perltools
  %{_libdir}/pgsql/slon-tools.pm

From devrim at lists.slony.info  Thu May 17 01:58:15 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Thu May 17 01:58:16 2007
Subject: [Slony1-commit] slony1-engine/redhat slon.init
Message-ID: <20070517085815.A2E22290BEA@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/redhat
In directory main.slony.info:/tmp/cvs-serv7675

Modified Files:
	slon.init 
Log Message:
* Enable logging to a logfile during startup
* run as postgres user
* Fix status call (ahem, copy-paste is evil)



Index: slon.init
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/redhat/slon.init,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** slon.init	17 May 2007 07:09:26 -0000	1.1
--- slon.init	17 May 2007 08:58:13 -0000	1.2
***************
*** 49,53 ****
  SLONCONF=/etc/slon.conf
  SLONPID=/var/run/slon.pid
! 
  test -x $SLONDAEMON || exit 5
  
--- 49,53 ----
  SLONCONF=/etc/slon.conf
  SLONPID=/var/run/slon.pid
! SLONLOG=/var/log/slony1
  test -x $SLONDAEMON || exit 5
  
***************
*** 59,63 ****
  
  	echo -n "$SLON_START"
! 	daemon $SLONDAEMON -f $SLONCONF -p $SLONPID 2>&1 </dev/null &
  	sleep 2
  
--- 59,63 ----
  
  	echo -n "$SLON_START"
! 	$SU -l postgres -c "$SLONDAEMON -f $SLONCONF &" >> "$SLONLOG" 2>&1 < /dev/null
  	sleep 2
  
***************
*** 111,115 ****
          ;;
    status)
!         status postmaster
          script_result=$?
          ;;
--- 111,115 ----
          ;;
    status)
!         status slon
          script_result=$?
          ;;

From cbbrowne at lists.slony.info  Fri May 18 14:13:20 2007
From: cbbrowne at lists.slony.info (Chris Browne)
Date: Fri May 18 14:13:22 2007
Subject: [Slony1-commit] slony1-engine RELEASE-1.2.10
Message-ID: <20070518211320.A198129046B@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv32100

Modified Files:
      Tag: REL_1_2_STABLE
	RELEASE-1.2.10 
Log Message:
Add in list of fixes to release notes for 1.2.10


Index: RELEASE-1.2.10
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/Attic/RELEASE-1.2.10,v
retrieving revision 1.1.2.6
retrieving revision 1.1.2.7
diff -C2 -d -r1.1.2.6 -r1.1.2.7
*** RELEASE-1.2.10	9 May 2007 18:00:24 -0000	1.1.2.6
--- RELEASE-1.2.10	18 May 2007 21:13:18 -0000	1.1.2.7
***************
*** 18,19 ****
--- 18,29 ----
    tends to replace
    PG_GETARG_VARLENA(0)
+ 
+ 
+ - Slonik's SYNC command never recorded the new seqno in the admin
+   conninfo, with potential wacky results for WAIT FOR EVENT
+ 
+ 
+ - Fix rpm build problem when the system has pg_config in both under
+   /usr/local/pgsql/bin and /usr/bin
+ 
+ - Add init script for Red Hat / Fedora
\ No newline at end of file

From devrim at lists.slony.info  Mon May 28 06:48:00 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Mon May 28 06:48:02 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070528134800.BAF5D290BD8@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv16154

Modified Files:
      Tag: REL_1_2_STABLE
	postgresql-slony1-engine.spec.in 
Log Message:
Fix typo


Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.31.2.9
retrieving revision 1.31.2.10
diff -C2 -d -r1.31.2.9 -r1.31.2.10
*** postgresql-slony1-engine.spec.in	17 May 2007 05:51:17 -0000	1.31.2.9
--- postgresql-slony1-engine.spec.in	28 May 2007 13:47:58 -0000	1.31.2.10
***************
*** 60,64 ****
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with_pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \
--- 60,64 ----
  CFLAGS=`echo $CFLAGS|xargs -n 1|grep -v ffast-math|xargs -n 100`
  export LIBNAME=%{_lib}
! ./configure --includedir %{_includedir}/pgsql --with-pgconfigdir=%{_bindir} \
  %if %perltools
          --with-perltools=%{_bindir} --with-toolsbin=%{_bindir} \

From devrim at lists.slony.info  Mon May 28 07:05:05 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Mon May 28 07:05:07 2007
Subject: [Slony1-commit] slony1-engine postgresql-slony1-engine.spec.in
Message-ID: <20070528140505.20885290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv16266

Modified Files:
      Tag: REL_1_2_STABLE
	postgresql-slony1-engine.spec.in 
Log Message:
Since we now have a init script, let's install it with RPM.



Index: postgresql-slony1-engine.spec.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/postgresql-slony1-engine.spec.in,v
retrieving revision 1.31.2.10
retrieving revision 1.31.2.11
diff -C2 -d -r1.31.2.10 -r1.31.2.11
*** postgresql-slony1-engine.spec.in	28 May 2007 13:47:58 -0000	1.31.2.10
--- postgresql-slony1-engine.spec.in	28 May 2007 14:05:03 -0000	1.31.2.11
***************
*** 89,92 ****
--- 89,99 ----
  install -m 0644 share/slon.conf-sample %{buildroot}%{_sysconfdir}/slon.conf
  
+ if [ -d /etc/rc.d/init.d ]
+ then
+ 	install -d %{buildroot}/etc/rc.d/init.d
+ 	install -m 755 redhat/slon.init %{buildroot}/etc/rc.d/init.d/slon
+ fi
+ 
+ 
  %if %perltools
  cd tools
***************
*** 107,110 ****
--- 114,132 ----
  rm -rf %{buildroot}
  
+ %post
+ chkconfig --add pypgreplicate
+ 
+ %preun
+ if [ $1 = 0 ] ; then
+ 	/sbin/service slon condstop >/dev/null 2>&1
+ 	chkconfig --del slon
+ fi
+ 
+ %postun
+ if [ $1 -ge 1 ]; then
+ 	/sbin/service slon condrestart >/dev/null 2>&1
+ fi
+ 
+ 
  %files
  %defattr(-,root,root,-)
***************
*** 118,121 ****
--- 140,144 ----
  %{_libdir}/pgsql/slon-tools.pm
  %config(noreplace) %{_sysconfdir}/slon_tools.conf
+ %{_sysconfdir}/rc.d/init.d/slon
  %endif
  

From devrim at lists.slony.info  Mon May 28 13:12:48 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Mon May 28 13:12:51 2007
Subject: [Slony1-commit] slony1-engine RELEASE RELEASE-1.2.0 RELEASE-1.2.1
	RELEASE-1.2.10 RELEASE-1.2.2 RELEASE-1.2.5 RELEASE-1.2.6
	RELEASE-1.2.7 RELEASE-1.2.8 RELEASE-1.2.9
Message-ID: <20070528201248.A17FC2903DF@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv18589

Added Files:
      Tag: REL_1_2_STABLE
	RELEASE 
Removed Files:
      Tag: REL_1_2_STABLE
	RELEASE-1.2.0 RELEASE-1.2.1 RELEASE-1.2.10 RELEASE-1.2.2 
	RELEASE-1.2.5 RELEASE-1.2.6 RELEASE-1.2.7 RELEASE-1.2.8 
	RELEASE-1.2.9 
Log Message:
Merge all RELEASE-1.2.* files into one file.



--- RELEASE-1.2.8 DELETED ---

--- RELEASE-1.2.9 DELETED ---

--- RELEASE-1.2.6 DELETED ---

--- RELEASE-1.2.7 DELETED ---

--- RELEASE-1.2.5 DELETED ---

--- RELEASE-1.2.2 DELETED ---

--- RELEASE-1.2.0 DELETED ---

--- RELEASE-1.2.1 DELETED ---

--- NEW FILE: RELEASE ---
$Id: RELEASE,v 1.1.2.1 2007-05-28 20:12:46 devrim Exp $

RELEASE 1.2.10

- Fixed problem with EXECUTE SCRIPT (EXECUTE ONLY ON = <node>)

  - The script was being executed on too many nodes...

- Added a test script for log shipping

  ... And alter it to add invocation of a DDL script.  This
  allows testing for an event-counting problem in log shipping.

- Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated

- in xxid.c, changes to support PostgreSQL 8.3 as tuple compression has
  more extensive support

  VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))))
  tends to replace
  PG_GETARG_VARLENA(0)


- Slonik's SYNC command never recorded the new seqno in the admin
  conninfo, with potential wacky results for WAIT FOR EVENT


- Fix rpm build problem when the system has pg_config in both under
  /usr/local/pgsql/bin and /usr/bin

- Add init script for Red Hat / Fedora

RELEASE 1.2.9

- Reverted change that tried to support elderly apache rotatelogs

- Added a patch file to apply if you need to support elderly apache rotatelogs (tools/altperl/old-apache-rotatelogs.patch)

- Bug in UPDATE FUNCTIONS - wrong quoting in plpgsql function

- Add a regression test that runs UPDATE FUNCTIONS to ensure that it at least has no syntax errors

RELEASE 1.2.8

- Change to rotatelogs configuration to support older versions of Apache
log rotator

- Fix to altperl "execute script" script to pass the filename properly

- Fix to src/backend/slony1_funcs.v80.sql - comment on the right function in v8.0

- Fix to src/slonik/slonik.c - it wasn't pulling in the right version of slony1_funcs.?.sql in some cases

- Updated docs on creating releases to describe the version mismatch problem found above in slonik.c

RELEASE 1.2.7

- Add remote_listen_timeout parameter to slon.conf

This addresses the problem where a slon times out when accessing
sl_event if a node has been out of commission for a long time (several
days)

- Resolve bug #1623

In this bug, big "action lists" that need to get compressed could cause
a logging printf to blow up.  Changed the logging level so that detail
is only shown at level 4, which won't bite people by default.

- UNINSTALL NODE failures now show node # in slonik error messages

If a user ran several UNINSTALL NODE requests in a single slonik
script, and one of them broke, you'd have no ready way to tell which
node this failed on.  Added code to report the node # where it failed.

- Added test to test1 for function generate_sync_event() and make_function_strict

- Added "v81" files (for slony1_base.v81.sql, slony1_funcs.v81.sql,
xxid.v81.sql), necessary to support 8.1 "ALTER FUNCTION ... STRICT";

- Fixed quoting problem in generate_sync_event()

- Added functionality to UPDATE FUNCTIONS to make xxidin() function
STRICT; the absence of this caused postmaster to fall over when
processing MOVE SET event in PG v8.2

- Added documentation of an issue surrounding NULLABLE columns to the
log analysis chapter of the admin guide and to the UPGRADING docs.

- When you run MOVE SET, this populates sl_setsync for the moved set
  even on nodes that are not subscribed.  If, subsequent to doing this, 
  you attempt a SUBSCRIBE SET for a formerly-unsubscribed node, the
  subscription will fail right at the end when the slon tries to insert a
  new value to sl_setsync.

  The fix: DELETE from sl_setsync immediately before the INSERT.  This
  will silently blow away any 'offending' sl_setsync row.

  (As observed by Afilias staff...)

- Log shipping fix - storage of sl_setsync_offline call had a wrong
  printf type; change from %d to %s

RELEASE 1.2.6

Release 1.2.6 fixes version numbers.

RELEASE 1.2.5 

Release 1.2.5 of Slony-I has the following bug fixes over 1.2.2:

- Fixed issue with xxid C functions - these functions need to be
  defined STRICT so that NULL values don't cause the functions to
  barf.  This has been causing users of PostgreSQL 8.2 to see
  postmasters falling over.

- Several improvements to internal documentation of altperl scripts

RELEASE 1.2.2

Release 1.2.2 of Slony-I has the following bug fixes over 1.2.1:

- SGML tagging fixes to allow docs to be generated on Fedora

- Fixes to altperl scripts (init cluster, store node) so they would
  properly generate STORE PATH requests (which had broken when STORE
  LISTEN code was removed)

- If PostgreSQL version is 8.1 or greater, we can use pg_config
  sharedir. Otherwise we will resort to the default guessing mode.

- Some makefile hygenic fixes

- Added \n to a number of log requests

- Fix to UPDATE FUNCTIONS which did not consider versions 1.1.5/1.1.6
  to be members of the 1.1 stream.  The minor problem with this was
  that Slony-I tables wouldn't get altered to drop out OIDs.  The
  major problem was that the new table sl_registry wouldn't get
  created

- Removed some confusing NOTICEs concerning management of partial
  indexes on sl_log_1 and sl_log_2.

- Close file descriptors upon running slon_terminate_worker() so that
  we don't run out of file descriptors

- Added in sleep(10) requests in several places where attempts to
  access the database in the main thread fails; this means that, for
  instance, the main DB is down, the slon doesn't simply sit there
  continually attempting to reconnect, as many times per second as it
  can.

- Several fixes to RPM .spec files

- Environment fix to Win32 service

- Set escape_string_warning to off, to prevent pgsql log noise when
  replicating cross versions

- Fix memory leak: free logshipping query 

- Bug #1585 - on 8.0+, if TRUNCATE failed, indices were not being
  deactivated during SUBSCRIBE SET COPY request, greatly slowing loading
  of data.  Added a deactivation inside the exception block, so that
  indices are deactivated during the COPY no matter what.

- X-Fade noticed that UPGRADE FUNCTIONS was taking out exclusive locks
  on sl_log_1, sl_log_2, sl_seqlog, which means that doing a Slony-I
  upgrade involved imposing an application outage.

  Moved the ALTER TABLE ... WITHOUT OIDS requests for these tables to
  cleanup loops, elsewhere, so that these tables no longer need to be 
  locked as part of the upgrade process.

- Documentation changes: Need for client/server encodings to match

- Fixes to parameter handling and interpreter name for
  test_slony_state*.pl scripts

- There was an error condition where if the final line of a slon.conf
  file did not end with a \n, then:
   a) A comment on that line would be treated as a syntax error
   b) A value set on that line would be ignored
  Fixed.

RELEASE 1.2.1

Release 1.2.1 of Slony-I has the following improvements over 1.2.0:

- Added a SYNC slonik command to allow requesting a SYNC event.
  This is a more useful thing to wait for than a SUBSCRIBE SET.

- MERGE SET now refuses to be applied if a subscriber has not
  yet confirmed post-subscription events

- Added a SLEEP slonik command to allow writing code that tells
  the script to pause for some number of seconds

- Fixed a concurrency problem where if you had multiple log
  shipped nodes, the threads processing them shared a single
  file descriptor as well as other variables.

- If a child process exits with return code of 0, that means it
  *asked* to exit, presumably because configuration changed that it
  needs to reload.  In that case, there's no need to wait 10s before
  restarting the thread; we should restart the thread immediately.

  This causes operations like MOVE SET to run ~10s faster per
  subscription change.

- Added a script, tools/release_checklist.sh, which performs some of
  the release checklist checks, such as verifying that the Slony-I
  version number (e.g. - 1.2.1) is consistent across various places
  that need to reference it.

- altperl scripts have had "listen path" generation removed as that is
  handled automatically as clusters are built.

- Fixed some portability problems in tools/launch_cluster.sh

- Added a new script, tools/search_logs.sh, meant to search hourly for
  errors in slon logs and warn an administrator about them.

RELEASE 1.2.0

Release 1.2 of Slony-I has numerous improvements over previous
versions.  

Many of them should represent near-invisible enhancements that improve
how Slony-I manages replication configuration.  These include:

- A major revision of memory management to limit memory usage by slon
  daemons.  In earlier versions, slon would try to load 100 tuples
  into memory at a time.  If you have tables with Very Large bytea or
  character varying columns, this could lead to loading 100 x 50MB
  into memory, twice, doing terrible things to memory consumption.

  slon now loads tuples in, directly, only if they are less than a
  certain size, and handles those 50MB tuples individually.

- Log switching: periodically, Slony-I will switch between storing
  replication data in sl_log_1 and sl_log_2, which allows regularly
  cleaning these tables out via TRUNCATE and which prevents some data
  loss problems relating to cases where different sets originate on
  different nodes, when transaction IDs roll over the 32 bit limits.

- pg_listener is now used dramatically less than it used to be, which
  diminishes the number of dead tuples you will find in this table.

  This, along with log switching, should improve Slony-I behaviour on
  systems where long-running transactions are common.  Older versions
  of Slony-I could suffer quite badly on systems that get hit by
  long-running transactions.

- DDL scripts are broken into individual statements

  This is more a bug fix than an enhancement; it now permits DDL
  scripts to create new tables and columns, and reference them later
  in the script.

  In the past, DDL was submitted to the postmaster as a single query,
  which meant that all of them had to reference the state of
  pg_catalog as it was before the DDL ran.  So you could add as many
  columns to tables as you liked; you could NOT, then, reference those
  columns, because the query processor would discover that the new
  column didn't exist as at "before the DDL ran."

  There is now a statement parser which splits scripts into individual
  SQL statements and passes them to the database back end
  individually.

- Slony-I tables are now marked "WITHOUT OIDS" so that they do not
  consume OIDS.

  It's only particularly important for sl_log_1/sl_log_2/sl_seqlog,
  but the change has been applied to all the tables Slony-I uses.
  UPGRADE FUNCTIONS will remove OIDs from Slony-I tables in existing
  schemas, too.

- When possible (based on log switching functionality), partial
  indexes on sl_log_1 and sl_log_2 are created on a per-origin-node
  basis.  This provides the performance boost of having an easily
  recognisable index, but without the risk of having XIDs from
  different nodes mixed together in one index, where roll-over could
  Cause Problems...

These features are generally configurable, but the defaults ought to
allow improved behaviour for all but the most "Extreme Uses."

There are also numerous enhancements that are more directly visible:

- Windows support

  A group of developers has contributed changes to allow running
  Slony-I as a Windows service.

- PostgreSQL Version Compatibility Changes

  Slony-I developers have been following the 8.2 release expected in
  fall 2006; Slony-I 1.2 can be expected to work with it without
  problems.

  Compatibility with version 7.3 has been dropped; version 1.2 notably
  makes use of some array functionality that didn't exist in 7.3.  If
  you are on 7.3, you're on a REALLY OLD version of PostgreSQL, and
  really ought to upgrade.  You may use Slony-I 1.1.5 to get to a more
  modern version, and then upgrade to 1.2 as needed.

- Process structure is revised considerably; in 1.1.0, an attempt was
  made to create an internal 'watchdog' that would restart threads
  that fell over for whatever reason.

  In 1.2, this is massively revised.  The "main" slon thread should,
  as of 1.2, never fall down, which means that there should no longer
  be a need for watchdog processes to watch carefully.

  This makes slon very much less fragile than it was in earlier
  versions.  This may revise how you want to start it up...  In the
  past, slon processes tended to fall over easily, mandating having
  some form of "watchdog."  The new behaviour points more towards
  "init" / "rc.d"-like handling, where, upon boot-up, one "rc.d" script
  might start up PostgreSQL, another one starts pgpool, and a third
  (which must be invoked after PostgreSQL is started) starts up a
  slon.

- Subscribe set aggressively locks tables on the subscriber to avoid
  failures

  This may become a configurable option so that sites where they
  Really Know What They're Doing and are sure that they won't deadlock
  themselves can leave the tables more open.

  But for most users, it's really preferable to lock the tables down
  on the subscriber so that you don't get 18 hours into subscribing an
  18GB replication set, hit a deadlock, and have to start all over.
  (The slon will automatically try again; the irritation is that you
  may have been depending on that getting done by Monday morning...)

- As has been the case for fairly much each release that has been
  made, the documentation has been significantly extended.  The "admin
  guide" has been augmented and cleaned up.  

  Notable additions include a listing of "Best Practices" (due in
  great part to discoveries by the oft-unsung heroes of Afilias' Data
  Services department) and a fairly comprehensive listing of log
  messages you may expect to see in your Slony-I logs.

- A lot of fixes to the build environment (this needs to be tested on
  lots of platforms)

  One noticeable upshot of this should be that (on Unix-like systems;
  Windows(tm) appears to differ) you oughtn't need to specify a whole
  lot of --with-pg[options] on the ./configure command line. You should
  be able to get most of what's needed simply by specifying the path to
  pg_config via --with-pgconfigdir.

- slon "lag interval" option

  You can tell a node to lag behind by a particular interval of time.

    slon -l "4 hours" [and probably other options :-)] 

  will cause the slon to ignore events until they reach the age
  corresponding to the requested interval.  That way, you can hold a
  node behind by 4 hours.

  This is a potential "foot gun" as there are some cases (MOVE SET,
  FAILOVER) where events have to be coordinated across all nodes with
  near-simultaneity.

- slon "stop after event" option

  You can tell a slon to terminate itself as soon as it receives a
  certain event from a certain node.

  Just as with "lag interval," this could be a bit of a foot gun...

- slon "run program after each log shipped SYNC" option

  You can specify a program to run each time a SYNC event
  is successfully closed off.

- Bug 1538 - if there is only one node, sl_event, sl_log_1 never get
  cleared out

  Logic added to cleanupevent() to clear out old sl_event entries if
  there is just one node.  That then allows the cleanup thread to
  clear sl_log_1 etc.

- Bug 1566 - Force all replication to occur in the ISO datestyle.
  This ensures that we can apply date/timestamps regardless of the
  datestyle they were entered in.

- Force all replication to occur with standards_conforming_strings set
  to off. This ensures we can replicate a node running on 8.2 without
  extra escape chars showing up in the data.
 

--- RELEASE-1.2.10 DELETED ---

From devrim at lists.slony.info  Mon May 28 13:20:59 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Mon May 28 13:21:01 2007
Subject: [Slony1-commit] slony1-engine RELEASE
Message-ID: <20070528202100.04AE32903B2@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv18683

Added Files:
	RELEASE 
Log Message:
Merge all RELEASE-1.2* files into one file.



--- NEW FILE: RELEASE ---
$Id: RELEASE,v 1.2 2007-05-28 20:20:57 devrim Exp $

RELEASE 1.2.10

- Fixed problem with EXECUTE SCRIPT (EXECUTE ONLY ON = <node>)

  - The script was being executed on too many nodes...

- Added a test script for log shipping

  ... And alter it to add invocation of a DDL script.  This
  allows testing for an event-counting problem in log shipping.

- Changes to support PostgreSQL 8.3 as VARATT_SIZEP has been deprecated

- in xxid.c, changes to support PostgreSQL 8.3 as tuple compression has
  more extensive support

  VARDATA_ANY(PG_DETOAST_DATUM_PACKED((PG_GETARG_DATUM(0))))
  tends to replace
  PG_GETARG_VARLENA(0)


- Slonik's SYNC command never recorded the new seqno in the admin
  conninfo, with potential wacky results for WAIT FOR EVENT


- Fix rpm build problem when the system has pg_config in both under
  /usr/local/pgsql/bin and /usr/bin

- Add init script for Red Hat / Fedora

RELEASE 1.2.9

- Reverted change that tried to support elderly apache rotatelogs

- Added a patch file to apply if you need to support elderly apache rotatelogs (tools/altperl/old-apache-rotatelogs.patch)

- Bug in UPDATE FUNCTIONS - wrong quoting in plpgsql function

- Add a regression test that runs UPDATE FUNCTIONS to ensure that it at least has no syntax errors

RELEASE 1.2.8

- Change to rotatelogs configuration to support older versions of Apache
log rotator

- Fix to altperl "execute script" script to pass the filename properly

- Fix to src/backend/slony1_funcs.v80.sql - comment on the right function in v8.0

- Fix to src/slonik/slonik.c - it wasn't pulling in the right version of slony1_funcs.?.sql in some cases

- Updated docs on creating releases to describe the version mismatch problem found above in slonik.c

RELEASE 1.2.7

- Add remote_listen_timeout parameter to slon.conf

This addresses the problem where a slon times out when accessing
sl_event if a node has been out of commission for a long time (several
days)

- Resolve bug #1623

In this bug, big "action lists" that need to get compressed could cause
a logging printf to blow up.  Changed the logging level so that detail
is only shown at level 4, which won't bite people by default.

- UNINSTALL NODE failures now show node # in slonik error messages

If a user ran several UNINSTALL NODE requests in a single slonik
script, and one of them broke, you'd have no ready way to tell which
node this failed on.  Added code to report the node # where it failed.

- Added test to test1 for function generate_sync_event() and make_function_strict

- Added "v81" files (for slony1_base.v81.sql, slony1_funcs.v81.sql,
xxid.v81.sql), necessary to support 8.1 "ALTER FUNCTION ... STRICT";

- Fixed quoting problem in generate_sync_event()

- Added functionality to UPDATE FUNCTIONS to make xxidin() function
STRICT; the absence of this caused postmaster to fall over when
processing MOVE SET event in PG v8.2

- Added documentation of an issue surrounding NULLABLE columns to the
log analysis chapter of the admin guide and to the UPGRADING docs.

- When you run MOVE SET, this populates sl_setsync for the moved set
  even on nodes that are not subscribed.  If, subsequent to doing this, 
  you attempt a SUBSCRIBE SET for a formerly-unsubscribed node, the
  subscription will fail right at the end when the slon tries to insert a
  new value to sl_setsync.

  The fix: DELETE from sl_setsync immediately before the INSERT.  This
  will silently blow away any 'offending' sl_setsync row.

  (As observed by Afilias staff...)

- Log shipping fix - storage of sl_setsync_offline call had a wrong
  printf type; change from %d to %s

RELEASE 1.2.6

Release 1.2.6 fixes version numbers.

RELEASE 1.2.5 

Release 1.2.5 of Slony-I has the following bug fixes over 1.2.2:

- Fixed issue with xxid C functions - these functions need to be
  defined STRICT so that NULL values don't cause the functions to
  barf.  This has been causing users of PostgreSQL 8.2 to see
  postmasters falling over.

- Several improvements to internal documentation of altperl scripts

RELEASE 1.2.2

Release 1.2.2 of Slony-I has the following bug fixes over 1.2.1:

- SGML tagging fixes to allow docs to be generated on Fedora

- Fixes to altperl scripts (init cluster, store node) so they would
  properly generate STORE PATH requests (which had broken when STORE
  LISTEN code was removed)

- If PostgreSQL version is 8.1 or greater, we can use pg_config
  sharedir. Otherwise we will resort to the default guessing mode.

- Some makefile hygenic fixes

- Added \n to a number of log requests

- Fix to UPDATE FUNCTIONS which did not consider versions 1.1.5/1.1.6
  to be members of the 1.1 stream.  The minor problem with this was
  that Slony-I tables wouldn't get altered to drop out OIDs.  The
  major problem was that the new table sl_registry wouldn't get
  created

- Removed some confusing NOTICEs concerning management of partial
  indexes on sl_log_1 and sl_log_2.

- Close file descriptors upon running slon_terminate_worker() so that
  we don't run out of file descriptors

- Added in sleep(10) requests in several places where attempts to
  access the database in the main thread fails; this means that, for
  instance, the main DB is down, the slon doesn't simply sit there
  continually attempting to reconnect, as many times per second as it
  can.

- Several fixes to RPM .spec files

- Environment fix to Win32 service

- Set escape_string_warning to off, to prevent pgsql log noise when
  replicating cross versions

- Fix memory leak: free logshipping query 

- Bug #1585 - on 8.0+, if TRUNCATE failed, indices were not being
  deactivated during SUBSCRIBE SET COPY request, greatly slowing loading
  of data.  Added a deactivation inside the exception block, so that
  indices are deactivated during the COPY no matter what.

- X-Fade noticed that UPGRADE FUNCTIONS was taking out exclusive locks
  on sl_log_1, sl_log_2, sl_seqlog, which means that doing a Slony-I
  upgrade involved imposing an application outage.

  Moved the ALTER TABLE ... WITHOUT OIDS requests for these tables to
  cleanup loops, elsewhere, so that these tables no longer need to be 
  locked as part of the upgrade process.

- Documentation changes: Need for client/server encodings to match

- Fixes to parameter handling and interpreter name for
  test_slony_state*.pl scripts

- There was an error condition where if the final line of a slon.conf
  file did not end with a \n, then:
   a) A comment on that line would be treated as a syntax error
   b) A value set on that line would be ignored
  Fixed.

RELEASE 1.2.1

Release 1.2.1 of Slony-I has the following improvements over 1.2.0:

- Added a SYNC slonik command to allow requesting a SYNC event.
  This is a more useful thing to wait for than a SUBSCRIBE SET.

- MERGE SET now refuses to be applied if a subscriber has not
  yet confirmed post-subscription events

- Added a SLEEP slonik command to allow writing code that tells
  the script to pause for some number of seconds

- Fixed a concurrency problem where if you had multiple log
  shipped nodes, the threads processing them shared a single
  file descriptor as well as other variables.

- If a child process exits with return code of 0, that means it
  *asked* to exit, presumably because configuration changed that it
  needs to reload.  In that case, there's no need to wait 10s before
  restarting the thread; we should restart the thread immediately.

  This causes operations like MOVE SET to run ~10s faster per
  subscription change.

- Added a script, tools/release_checklist.sh, which performs some of
  the release checklist checks, such as verifying that the Slony-I
  version number (e.g. - 1.2.1) is consistent across various places
  that need to reference it.

- altperl scripts have had "listen path" generation removed as that is
  handled automatically as clusters are built.

- Fixed some portability problems in tools/launch_cluster.sh

- Added a new script, tools/search_logs.sh, meant to search hourly for
  errors in slon logs and warn an administrator about them.

RELEASE 1.2.0

Release 1.2 of Slony-I has numerous improvements over previous
versions.  

Many of them should represent near-invisible enhancements that improve
how Slony-I manages replication configuration.  These include:

- A major revision of memory management to limit memory usage by slon
  daemons.  In earlier versions, slon would try to load 100 tuples
  into memory at a time.  If you have tables with Very Large bytea or
  character varying columns, this could lead to loading 100 x 50MB
  into memory, twice, doing terrible things to memory consumption.

  slon now loads tuples in, directly, only if they are less than a
  certain size, and handles those 50MB tuples individually.

- Log switching: periodically, Slony-I will switch between storing
  replication data in sl_log_1 and sl_log_2, which allows regularly
  cleaning these tables out via TRUNCATE and which prevents some data
  loss problems relating to cases where different sets originate on
  different nodes, when transaction IDs roll over the 32 bit limits.

- pg_listener is now used dramatically less than it used to be, which
  diminishes the number of dead tuples you will find in this table.

  This, along with log switching, should improve Slony-I behaviour on
  systems where long-running transactions are common.  Older versions
  of Slony-I could suffer quite badly on systems that get hit by
  long-running transactions.

- DDL scripts are broken into individual statements

  This is more a bug fix than an enhancement; it now permits DDL
  scripts to create new tables and columns, and reference them later
  in the script.

  In the past, DDL was submitted to the postmaster as a single query,
  which meant that all of them had to reference the state of
  pg_catalog as it was before the DDL ran.  So you could add as many
  columns to tables as you liked; you could NOT, then, reference those
  columns, because the query processor would discover that the new
  column didn't exist as at "before the DDL ran."

  There is now a statement parser which splits scripts into individual
  SQL statements and passes them to the database back end
  individually.

- Slony-I tables are now marked "WITHOUT OIDS" so that they do not
  consume OIDS.

  It's only particularly important for sl_log_1/sl_log_2/sl_seqlog,
  but the change has been applied to all the tables Slony-I uses.
  UPGRADE FUNCTIONS will remove OIDs from Slony-I tables in existing
  schemas, too.

- When possible (based on log switching functionality), partial
  indexes on sl_log_1 and sl_log_2 are created on a per-origin-node
  basis.  This provides the performance boost of having an easily
  recognisable index, but without the risk of having XIDs from
  different nodes mixed together in one index, where roll-over could
  Cause Problems...

These features are generally configurable, but the defaults ought to
allow improved behaviour for all but the most "Extreme Uses."

There are also numerous enhancements that are more directly visible:

- Windows support

  A group of developers has contributed changes to allow running
  Slony-I as a Windows service.

- PostgreSQL Version Compatibility Changes

  Slony-I developers have been following the 8.2 release expected in
  fall 2006; Slony-I 1.2 can be expected to work with it without
  problems.

  Compatibility with version 7.3 has been dropped; version 1.2 notably
  makes use of some array functionality that didn't exist in 7.3.  If
  you are on 7.3, you're on a REALLY OLD version of PostgreSQL, and
  really ought to upgrade.  You may use Slony-I 1.1.5 to get to a more
  modern version, and then upgrade to 1.2 as needed.

- Process structure is revised considerably; in 1.1.0, an attempt was
  made to create an internal 'watchdog' that would restart threads
  that fell over for whatever reason.

  In 1.2, this is massively revised.  The "main" slon thread should,
  as of 1.2, never fall down, which means that there should no longer
  be a need for watchdog processes to watch carefully.

  This makes slon very much less fragile than it was in earlier
  versions.  This may revise how you want to start it up...  In the
  past, slon processes tended to fall over easily, mandating having
  some form of "watchdog."  The new behaviour points more towards
  "init" / "rc.d"-like handling, where, upon boot-up, one "rc.d" script
  might start up PostgreSQL, another one starts pgpool, and a third
  (which must be invoked after PostgreSQL is started) starts up a
  slon.

- Subscribe set aggressively locks tables on the subscriber to avoid
  failures

  This may become a configurable option so that sites where they
  Really Know What They're Doing and are sure that they won't deadlock
  themselves can leave the tables more open.

  But for most users, it's really preferable to lock the tables down
  on the subscriber so that you don't get 18 hours into subscribing an
  18GB replication set, hit a deadlock, and have to start all over.
  (The slon will automatically try again; the irritation is that you
  may have been depending on that getting done by Monday morning...)

- As has been the case for fairly much each release that has been
  made, the documentation has been significantly extended.  The "admin
  guide" has been augmented and cleaned up.  

  Notable additions include a listing of "Best Practices" (due in
  great part to discoveries by the oft-unsung heroes of Afilias' Data
  Services department) and a fairly comprehensive listing of log
  messages you may expect to see in your Slony-I logs.

- A lot of fixes to the build environment (this needs to be tested on
  lots of platforms)

  One noticeable upshot of this should be that (on Unix-like systems;
  Windows(tm) appears to differ) you oughtn't need to specify a whole
  lot of --with-pg[options] on the ./configure command line. You should
  be able to get most of what's needed simply by specifying the path to
  pg_config via --with-pgconfigdir.

- slon "lag interval" option

  You can tell a node to lag behind by a particular interval of time.

    slon -l "4 hours" [and probably other options :-)] 

  will cause the slon to ignore events until they reach the age
  corresponding to the requested interval.  That way, you can hold a
  node behind by 4 hours.

  This is a potential "foot gun" as there are some cases (MOVE SET,
  FAILOVER) where events have to be coordinated across all nodes with
  near-simultaneity.

- slon "stop after event" option

  You can tell a slon to terminate itself as soon as it receives a
  certain event from a certain node.

  Just as with "lag interval," this could be a bit of a foot gun...

- slon "run program after each log shipped SYNC" option

  You can specify a program to run each time a SYNC event
  is successfully closed off.

- Bug 1538 - if there is only one node, sl_event, sl_log_1 never get
  cleared out

  Logic added to cleanupevent() to clear out old sl_event entries if
  there is just one node.  That then allows the cleanup thread to
  clear sl_log_1 etc.

- Bug 1566 - Force all replication to occur in the ISO datestyle.
  This ensures that we can apply date/timestamps regardless of the
  datestyle they were entered in.

- Force all replication to occur with standards_conforming_strings set
  to off. This ensures we can replicate a node running on 8.2 without
  extra escape chars showing up in the data.
 

From devrim at lists.slony.info  Mon May 28 13:22:32 2007
From: devrim at lists.slony.info (Devrim GUNDUZ)
Date: Mon May 28 13:22:33 2007
Subject: [Slony1-commit] slony1-engine RELEASE-1.2.0 RELEASE-1.2.1
Message-ID: <20070528202232.BEC572903DF@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv18737

Removed Files:
	RELEASE-1.2.0 RELEASE-1.2.1 
Log Message:
Remove old files.



--- RELEASE-1.2.0 DELETED ---

--- RELEASE-1.2.1 DELETED ---

From wieck at lists.slony.info  Thu May 31 06:29:29 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 06:29:31 2007
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20070531132929.51842290BE8@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv1075/src/slon

Modified Files:
	remote_worker.c 
Log Message:
Fix archive log ship tracking. Slon now tracks the setsync status in memory
and generates a void archive with the correct old,new event seqno for all
events.

Jan


Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.138
retrieving revision 1.139
diff -C2 -d -r1.138 -r1.139
*** remote_worker.c	20 Apr 2007 20:53:18 -0000	1.138
--- remote_worker.c	31 May 2007 13:29:27 -0000	1.139
***************
*** 111,114 ****
--- 111,115 ----
  	int			set_id;
  	int			sub_forward;
+ 	char		ssy_seqno[64];
  
  	ProviderSet *prev;
***************
*** 261,265 ****
  					int sub_set, const char *firstseq,
  					const char *seqbuf, const char *timestamp);
- static int	archive_void_log(SlonNode *node, char *seqbuf, const char *message);
  
  
--- 262,265 ----
***************
*** 291,295 ****
  	bool			event_ok;
  	bool			need_reloadListen = false;
- 	int			rc;
  
  	slon_log(SLON_DEBUG1,
--- 291,294 ----
***************
*** 372,375 ****
--- 371,421 ----
  				adjust_provider_info(node, wd, false);
  				curr_config = rtcfg_seq_get();
+ 
+ 				/*
+ 				 * If we do archive logging, we need the ssy_seqno of
+ 				 * all sets this worker is replicating.
+ 				 */
+ 				if (archive_dir)
+ 				{
+ 					ProviderInfo   *pinfo;
+ 					ProviderSet	   *pset;
+ 					PGresult	   *res;
+ 
+ 					for (pinfo=wd->provider_head; pinfo != NULL; pinfo = pinfo->next)
+ 					{
+ 						for(pset = pinfo->set_head; pset != NULL; pset = pset->next)
+ 						{
+ 							slon_mkquery(&query1,
+ 								"select max(ssy_seqno) from %s.sl_setsync "
+ 								"  where ssy_setid = %d "
+ 								"    and ssy_origin = %d; ",
+ 								rtcfg_namespace, pset->set_id, node->no_id);
+ 							if (query_execute(node, local_dbconn, &query1) < 0)
+ 								slon_retry();
+ 
+ 							res = PQexec(local_dbconn, dstring_data(&query1));
+ 							if (PQresultStatus(res) != PGRES_TUPLES_OK)
+ 							{
+ 								slon_log(SLON_FATAL, "remoteWorkerThread_%d: \"%s\" %s",
+ 										 node->no_id, dstring_data(&query1),
+ 										 PQresultErrorMessage(res));
+ 								PQclear(res);
+ 								slon_retry();
+ 							}
+ 							if (PQntuples(res) != 1)
+ 							{
+ 								slon_log(SLON_FATAL, "remoteWorkerThread_%d: Query \"%s\" did not return one row\n",
+ 										 node->no_id, dstring_data(&query1));
+ 								PQclear(res);
+ 								slon_retry();
+ 							}
+ 							strcpy(pset->ssy_seqno, PQgetvalue(res, 0, 0));
+ 							PQclear(res);
+ 
+ 							slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: set %d starts at ssy_seqno %s\n",
+ 								node->no_id, pset->set_id, pset->ssy_seqno);
+ 						}
+ 					}
+ 				}
  			}
  			rtcfg_unlock();
***************
*** 622,625 ****
--- 668,705 ----
  
  			/*
+ 			 * For all non-SYNC events, we write at least a standard
+ 			 * event tracking log file and adjust the ssy_seqno in our
+ 			 * internal tracking.
+ 			 */
+ 			if (archive_dir)
+ 			{
+ 				ProviderInfo   *pinfo;
+ 				ProviderSet	   *pset;
+ 				char			buf[256];
+ 
+ 				if (archive_open(node, seqbuf) < 0)
+ 					slon_retry();
+ 				sprintf(buf, "-- %s", event->ev_type);
+ 				if (archive_append_str(node, buf) < 0)
+ 					slon_retry();
+ 
+ 				for (pinfo=wd->provider_head; pinfo != NULL; pinfo = pinfo->next)
+ 				{
+ 					for(pset = pinfo->set_head; pset != NULL; pset = pset->next)
+ 					{
+ 						if (archive_tracking(node, rtcfg_namespace, 
+ 								pset->set_id, pset->ssy_seqno, seqbuf, 
+ 								event->ev_timestamp_c) < 0)
+ 							slon_retry();
+ 						strcpy(pset->ssy_seqno, seqbuf);
+ 					}
+ 				}
+ 
+ 				/*
+ 				 * Leave the archive open for event specific actions.
+ 				 */
+ 			}
+ 
+ 			/*
  			 * Simple configuration events. Call the corresponding runtime
  			 * config function, add the query to call the configuration event
***************
*** 641,651 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
- 
  			}
  			else if (strcmp(event->ev_type, "ENABLE_NODE") == 0)
--- 721,724 ----
***************
*** 662,672 ****
  
  				need_reloadListen = true;
- 
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- ENABLE_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_NODE") == 0)
--- 735,738 ----
***************
*** 718,727 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_PATH") == 0)
--- 784,787 ----
***************
*** 741,750 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_PATH");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_PATH") == 0)
--- 801,804 ----
***************
*** 762,771 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_PATH");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_LISTEN") == 0)
--- 816,819 ----
***************
*** 782,791 ****
  								 rtcfg_namespace,
  								 li_origin, li_provider, li_receiver);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_LISTEN");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_LISTEN") == 0)
--- 830,833 ----
***************
*** 802,812 ****
  								 rtcfg_namespace,
  								 li_origin, li_provider, li_receiver);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_LISTEN");
- 					if (rc < 0)
- 						slon_retry();
- 				}
- 
  			}
  			else if (strcmp(event->ev_type, "STORE_SET") == 0)
--- 844,847 ----
***************
*** 823,833 ****
  								 rtcfg_namespace,
  								 set_id, set_origin, set_comment);
- 
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_SET") == 0)
--- 858,861 ----
***************
*** 846,856 ****
  				if (archive_dir)
  				{
! 					(void) slon_mkquery(&lsquery,
  								 "delete from %s.sl_setsync_offline "
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, set_id);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 874,882 ----
  				if (archive_dir)
  				{
! 					slon_mkquery(&lsquery,
  								 "delete from %s.sl_setsync_offline "
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, set_id);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 874,884 ****
  				if (archive_dir)
  				{
! 					rc = slon_mkquery(&lsquery,
  							  "delete from %s.sl_setsync_offline "
  							  "  where ssy_setid= %d;",
  							  rtcfg_namespace, add_id);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 900,908 ----
  				if (archive_dir)
  				{
! 					slon_mkquery(&lsquery,
  							  "delete from %s.sl_setsync_offline "
  							  "  where ssy_setid= %d;",
  							  rtcfg_namespace, add_id);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 891,900 ****
  				 * in the runtime configuration.
  				 */
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_ADD_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_ADD_SEQUENCE") == 0)
--- 915,918 ----
***************
*** 905,914 ****
  				 * maintained in the runtime configuration.
  				 */
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_ADD_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_DROP_TABLE") == 0)
--- 923,926 ----
***************
*** 919,928 ****
  								 rtcfg_namespace,
  								 tab_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_DROP_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_DROP_SEQUENCE") == 0)
--- 931,934 ----
***************
*** 933,942 ****
  								 rtcfg_namespace,
  								 seq_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_DROP_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_MOVE_TABLE") == 0)
--- 939,942 ----
***************
*** 948,957 ****
  								 rtcfg_namespace,
  								 tab_id, new_set_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_MOVE_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_MOVE_SEQUENCE") == 0)
--- 948,951 ----
***************
*** 963,972 ****
  								 rtcfg_namespace,
  								 seq_id, new_set_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_MOVE_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_TRIGGER") == 0)
--- 957,960 ----
***************
*** 979,988 ****
  								 rtcfg_namespace,
  								 trig_tabid, trig_tgname);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_TRIGGER");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_TRIGGER") == 0)
--- 967,970 ----
***************
*** 995,1004 ****
  								 rtcfg_namespace,
  								 trig_tabid, trig_tgname);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_TRIGGER");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "ACCEPT_SET") == 0)
--- 977,980 ----
***************
*** 1098,1101 ****
--- 1074,1078 ----
  					query_execute(node, local_dbconn, &query1);
  					slon_log(SLON_DEBUG2, "ACCEPT_SET - done\n");
+ 					archive_close(node);
  					slon_retry();
  
***************
*** 1172,1181 ****
  								 failed_node, backup_node, set_id, seqbuf);
  
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- FAILOVER_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  				need_reloadListen = true;
  			}
--- 1149,1152 ----
***************
*** 1194,1203 ****
  								 rtcfg_namespace,
  						   sub_set, sub_provider, sub_receiver, sub_forward);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SUBSCRIBE_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  				need_reloadListen = true;
  			}
--- 1165,1168 ----
***************
*** 1334,1340 ****
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, sub_set);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 1299,1303 ----
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, sub_set);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 1425,1438 ****
  					{
  
- 						if (archive_open(node, seqbuf) < 0)
- 							slon_retry();
- 						if (archive_tracking(node, rtcfg_namespace, 
- 								ddl_setid, seqbuf, seqbuf, 
- 								event->ev_timestamp_c) < 0)
- 							slon_retry();
  						if (archive_append_str(node, ddl_script) < 0)
  							slon_retry();
- 						if (archive_close(node) < 0)
- 							slon_retry();
  					}
  				}
--- 1388,1393 ----
***************
*** 1447,1453 ****
  								 rtcfg_namespace,
  							   reset_config_setid, reset_configonly_on_node);
- 				if (archive_dir)
- 					if (archive_void_log(node, seqbuf, "-- RESET_CONFIG") < 0)
- 						slon_retry();
  			}
  			else
--- 1402,1405 ----
***************
*** 1455,1461 ****
  				printf("TODO: ********** remoteWorkerThread: node %d - EVENT %d," INT64_FORMAT " %s - unknown event type\n",
  					   node->no_id, event->ev_origin, event->ev_seqno, event->ev_type);
- 				if (archive_dir)
- 					if (archive_void_log(node, seqbuf, "-- UNHANDLED EVENT!!!") < 0)
- 						slon_retry();
  			}
  
--- 1407,1410 ----
***************
*** 1468,1475 ****
--- 1417,1427 ----
  				query_append_event(&query1, event);
  				slon_appendquery(&query1, "commit transaction;");
+ 				if (archive_close(node) < 0)
+ 					slon_retry();
  			}
  			else
  			{
  				(void) slon_mkquery(&query1, "rollback transaction;");
+ 				archive_terminate(node);
  			}
  			if (query_execute(node, local_dbconn, &query1) < 0)
***************
*** 2496,2522 ****
  	sprintf(seqbuf, INT64_FORMAT, event->ev_seqno);
  
- 
- 	/* Log Shipping Support begins... */
- 
- 	/*
- 	 * - Open the log, put the header in Isn't it convenient that seqbuf was
- 	 * just populated???  :-)
- 	 */
- 	if (archive_dir)
- 	{
- 		rc = archive_open(node, seqbuf);
- 		if (rc < 0)
- 		{
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 	}
- 
  	/*
  	 * Register this connection in sl_nodelock
--- 2448,2451 ----
***************
*** 2982,2986 ****
  		{
  			(void) slon_mkquery(&query1,
! 			 "delete from %s;copy %s %s from stdin;", tab_fqname, tab_fqname,
  						 nodeon73 ? "" : PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
--- 2911,2915 ----
  		{
  			(void) slon_mkquery(&query1,
! 			 "delete from %s;\ncopy %s %s from stdin;", tab_fqname, tab_fqname,
  						 nodeon73 ? "" : PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
***************
*** 3712,3719 ****
  		     set_id, node->no_id, ssy_seqno, ssy_minxid, ssy_maxxid, ssy_xip,
  		     dstring_data(&ssy_action_list));
- 	PQclear(res1);
  	dstring_free(&ssy_action_list);
  	if (query_execute(node, loc_dbconn, &query1) < 0)
  	{
  		slon_disconnectdb(pro_conn);
  		dstring_free(&query1);
--- 3641,3648 ----
  		     set_id, node->no_id, ssy_seqno, ssy_minxid, ssy_maxxid, ssy_xip,
  		     dstring_data(&ssy_action_list));
  	dstring_free(&ssy_action_list);
  	if (query_execute(node, loc_dbconn, &query1) < 0)
  	{
+ 		PQclear(res1);
  		slon_disconnectdb(pro_conn);
  		dstring_free(&query1);
***************
*** 3737,3740 ****
--- 3666,3670 ----
  					 " could not insert to sl_setsync_offline",
  					 node->no_id);
+ 			PQclear(res1);
  			slon_disconnectdb(pro_conn);
  			dstring_free(&query1);
***************
*** 3747,3750 ****
--- 3677,3681 ----
  		}
  	}
+ 	PQclear(res1);
  	gettimeofday(&tv_now, NULL);
  	slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: "
***************
*** 3753,3773 ****
  			 TIMEVAL_DIFF(&tv_start2, &tv_now));
  
- 	if (archive_dir)
- 	{
- 		rc = archive_close(node);
- 		if (rc < 0)
- 		{
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 	}
- 
- 
  	/*
  	 * Roll back the transaction we used on the provider and close the
--- 3684,3687 ----
***************
*** 5379,5382 ****
--- 5293,5299 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
  	if (node->archive_name == NULL)
  	{
***************
*** 5392,5395 ****
--- 5309,5320 ----
  	}
  
+ 	if (node->archive_fp != NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"archive_open() called - archive is already opened\n",
+ 				node->no_id);
+ 		return -1;
+ 	}
+ 
  	sprintf(node->archive_name, "%s/slony1_log_%d_", archive_dir, 
  			node->no_id);
***************
*** 5434,5474 ****
  	int		rc = 0;
  
! 	if (archive_dir)
  	{
! 		rc = fprintf(node->archive_fp,
! 			"\n------------------------------------------------------------------\n"
! 			"-- End Of Archive Log\n"
! 			"------------------------------------------------------------------\n"
! 			"commit;\n"
! 			"vacuum analyze %s.sl_setsync_offline;\n",
! 			rtcfg_namespace);
! 		if (rc < 0)
! 		{
! 			archive_terminate(node);
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot write to archive file %s - %s\n",
! 					node->no_id, node->archive_temp, strerror(errno));
! 			return -1;
! 		}
  
! 		rc = fclose(node->archive_fp);
! 		node->archive_fp = NULL;
! 		if (rc != 0)
! 		{
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot close archive file %s - %s\n",
! 					node->no_id, node->archive_temp, strerror(errno));
! 			return -1;
! 		}
  
! 		rc = rename(node->archive_temp, node->archive_name);
! 		if (rc != 0)
! 		{
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot rename archive file %s to %s - %s\n",
! 					node->no_id, node->archive_temp, node->archive_name, 
! 					strerror(errno));
! 			return -1;
! 		}
  	}
  
--- 5359,5407 ----
  	int		rc = 0;
  
! 	if (!archive_dir)
! 		return 0;
! 
! 	if (node->archive_fp == NULL)
  	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot close archive file %s - not open\n",
! 				node->no_id, node->archive_temp);
! 		return -1;
! 	}
  
! 	rc = fprintf(node->archive_fp,
! 		"\n------------------------------------------------------------------\n"
! 		"-- End Of Archive Log\n"
! 		"------------------------------------------------------------------\n"
! 		"commit;\n"
! 		"vacuum analyze %s.sl_setsync_offline;\n",
! 		rtcfg_namespace);
! 	if (rc < 0)
! 	{
! 		archive_terminate(node);
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot write to archive file %s - %s\n",
! 				node->no_id, node->archive_temp, strerror(errno));
! 		return -1;
! 	}
  
! 	rc = fclose(node->archive_fp);
! 	node->archive_fp = NULL;
! 	if (rc != 0)
! 	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot close archive file %s - %s\n",
! 				node->no_id, node->archive_temp, strerror(errno));
! 		return -1;
! 	}
! 
! 	rc = rename(node->archive_temp, node->archive_name);
! 	if (rc != 0)
! 	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot rename archive file %s to %s - %s\n",
! 				node->no_id, node->archive_temp, node->archive_name, 
! 				strerror(errno));
! 		return -1;
  	}
  
***************
*** 5501,5504 ****
--- 5434,5448 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, 
  		"\nselect %s.setsyncTracking_offline(%d, '%s', '%s', '%s');\n"
***************
*** 5528,5531 ****
--- 5472,5486 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, "%s\n", dstring_data(ds));
  	if (rc < 0)
***************
*** 5549,5552 ****
--- 5504,5518 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, "%s\n", s);
  	if (rc < 0)
***************
*** 5572,5575 ****
--- 5538,5552 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fwrite(s, len, 1, node->archive_fp);
  	if (rc != 1)
***************
*** 5585,5611 ****
  
  /* ----------
-  * archive_void_log
-  *
-  * writes out a "void" log consisting of the message which must either 
-  * be a valid SQL query or a SQL comment.
-  * ----------
-  */
- static int
- archive_void_log(SlonNode *node, char *seqbuf, const char *message)
- {
- 	int			rc;
- 
- 	rc = archive_open(node, seqbuf);
- 	if (rc < 0)
- 		return rc;
- 	rc = archive_append_str(node, message);
- 	if (rc < 0)
- 		return rc;
- 	rc = archive_close(node);
- 
- 	return rc;
- }
- 
- /* ----------
   * given a string consisting of a list of actionseq values, return a
   * string that compresses this into a set of log_actionseq ranges
--- 5562,5565 ----

From wieck at lists.slony.info  Thu May 31 06:29:29 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 06:29:31 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape Makefile
	test_8_logship.in
Message-ID: <20070531132929.3A015290447@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv1075/src/ducttape

Modified Files:
	Makefile test_8_logship.in 
Log Message:
Fix archive log ship tracking. Slon now tracks the setsync status in memory
and generates a void archive with the correct old,new event seqno for all
events.

Jan


Index: test_8_logship.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_8_logship.in,v
retrieving revision 1.1
retrieving revision 1.2
diff -C2 -d -r1.1 -r1.2
*** test_8_logship.in	4 Jul 2005 23:45:21 -0000	1.1
--- test_8_logship.in	31 May 2007 13:29:26 -0000	1.2
***************
*** 24,31 ****
  export PATH
  TMPOUT=/tmp/output.$$
! LOGSHIPDIR=/tmp/logs.$$
  mkdir -p $LOGSHIPDIR
  DB1=slony_test1
  DB2=slony_test2
  CLUSTERNAME=T1
  PGBENCH_SCALE=1
--- 24,33 ----
  export PATH
  TMPOUT=/tmp/output.$$
! LOGSHIPDIR=./offline_logs
  mkdir -p $LOGSHIPDIR
+ rm -f $LOGSHIPDIR/*
  DB1=slony_test1
  DB2=slony_test2
+ DB3=slony_test3
  CLUSTERNAME=T1
  PGBENCH_SCALE=1
***************
*** 96,99 ****
--- 98,103 ----
  dropdb $DB2 || echo "**** ignored"
  sleep 1
+ dropdb $DB3 || echo "**** ignored"
+ sleep 1
  
  #####
***************
*** 104,107 ****
--- 108,118 ----
  createdb $DB1 || exit 1
  pgbench -i -s $PGBENCH_SCALE $DB1
+ psql $DB1 <<_EOF_
+ 	create sequence history_seq;
+ 	alter table history add column seqno int8;
+ 	alter table history alter column seqno set default nextval('history_seq');
+ 	update history set seqno = nextval('history_seq') where seqno is null;
+ 	alter table history add primary key (seqno);
+ _EOF_
  pg_dump -s $DB1 >pgbench_schema.sql
  
***************
*** 146,155 ****
  slonik <<_EOF_
  	include <$PREAMBLE_FILE>;
- 	try {
- 		table add key (node id = @origin, fully qualified name = 'public.history');
- 	}
- 	on error {
- 		exit 1;
- 	}
  
  	try {
--- 157,160 ----
***************
*** 166,170 ****
  		set add table (set id = 1, origin = @origin,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table accounts');
  	}
  	on error {
--- 171,175 ----
  		set add table (set id = 1, origin = @origin,
  			id = 4, fully qualified name = 'public.history',
! 			comment = 'Table history');
  	}
  	on error {
***************
*** 235,243 ****
  fi
  
! echo "**** starting the Slony-I node daemon for $DB1"
  $TERMPROG -title "Slon node 22" -e sh -c "slon -d$DEBUG_LEVEL -s10000 -o10000 -g10 -a $LOGSHIPDIR $CLUSTERNAME dbname=$DB2; echo -n 'Enter>'; read line" &
  slon2_pid=$!
  echo "slon[$slon2_pid] on dbname=$DB2"
  
  #####
  # Check that pgbench is still running
--- 240,251 ----
  fi
  
! echo "**** starting the Slony-I node daemon for $DB2"
  $TERMPROG -title "Slon node 22" -e sh -c "slon -d$DEBUG_LEVEL -s10000 -o10000 -g10 -a $LOGSHIPDIR $CLUSTERNAME dbname=$DB2; echo -n 'Enter>'; read line" &
  slon2_pid=$!
  echo "slon[$slon2_pid] on dbname=$DB2"
  
+ echo "**** taking offline_dump.sql from $DB2 for logshipping"
+ sh ../../tools/slony1_dump.sh $DB2 T1 >offline_dump.sql
+ 
  #####
  # Check that pgbench is still running
***************
*** 282,285 ****
  kill $slon2_pid 2>/dev/null
  
! ./compare_pgbench_dumps $DB1 $DB2
  rm $PREAMBLE_FILE
--- 290,310 ----
  kill $slon2_pid 2>/dev/null
  
! sh ./compare_pgbench_dumps $DB1 $DB2
! 
! echo "**** creating database for offline node"
! if ! createdb $DB3 ; then
! 	exit 1
! fi
! 
! echo "---- loading pgbench schema into $DB3"
! psql -q $DB3 <./pgbench_schema.sql
! echo "---- loading Slony-I offline replica schema into $DB3"
! psql -q $DB3 <./offline_dump.sql
! echo "---- loading all offline log archives"
! for afile in $LOGSHIPDIR/*.sql ; do
! 	psql -q $DB3 <$afile
! done
! 
! sh ./compare_pgbench_dumps $DB1 $DB3
! 
  rm $PREAMBLE_FILE

Index: Makefile
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/Makefile,v
retrieving revision 1.12
retrieving revision 1.13
diff -C2 -d -r1.12 -r1.13
*** Makefile	2 Aug 2006 15:32:02 -0000	1.12
--- Makefile	31 May 2007 13:29:26 -0000	1.13
***************
*** 33,36 ****
--- 33,38 ----
  		fi; \
  	done;\
+ 	rm -rf dump.tmp.*
+ 	rm -rf offline_dump.sql offline_logs
  
  install: all installdirs

From wieck at lists.slony.info  Thu May 31 06:29:50 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 06:29:52 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape Makefile
	test_8_logship.in
Message-ID: <20070531132950.37F332903FE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv1063/src/ducttape

Modified Files:
      Tag: REL_1_2_STABLE
	Makefile test_8_logship.in 
Log Message:
Fix archive log ship tracking. Slon now tracks the setsync status in memory
and generates a void archive with the correct old,new event seqno for all
events.

Jan


Index: test_8_logship.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_8_logship.in,v
retrieving revision 1.1
retrieving revision 1.1.2.1
diff -C2 -d -r1.1 -r1.1.2.1
*** test_8_logship.in	4 Jul 2005 23:45:21 -0000	1.1
--- test_8_logship.in	31 May 2007 13:29:48 -0000	1.1.2.1
***************
*** 24,31 ****
  export PATH
  TMPOUT=/tmp/output.$$
! LOGSHIPDIR=/tmp/logs.$$
  mkdir -p $LOGSHIPDIR
  DB1=slony_test1
  DB2=slony_test2
  CLUSTERNAME=T1
  PGBENCH_SCALE=1
--- 24,33 ----
  export PATH
  TMPOUT=/tmp/output.$$
! LOGSHIPDIR=./offline_logs
  mkdir -p $LOGSHIPDIR
+ rm -f $LOGSHIPDIR/*
  DB1=slony_test1
  DB2=slony_test2
+ DB3=slony_test3
  CLUSTERNAME=T1
  PGBENCH_SCALE=1
***************
*** 96,99 ****
--- 98,103 ----
  dropdb $DB2 || echo "**** ignored"
  sleep 1
+ dropdb $DB3 || echo "**** ignored"
+ sleep 1
  
  #####
***************
*** 146,151 ****
  slonik <<_EOF_
  	include <$PREAMBLE_FILE>;
  	try {
! 		table add key (node id = @origin, fully qualified name = 'public.history');
  	}
  	on error {
--- 150,156 ----
  slonik <<_EOF_
  	include <$PREAMBLE_FILE>;
+ 
  	try {
! 		table add key (node id = 11, fully qualified name = 'public.history');
  	}
  	on error {
***************
*** 166,170 ****
  		set add table (set id = 1, origin = @origin,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table accounts');
  	}
  	on error {
--- 171,175 ----
  		set add table (set id = 1, origin = @origin,
  			id = 4, fully qualified name = 'public.history',
! 			key = serial, comment = 'Table history');
  	}
  	on error {
***************
*** 235,243 ****
  fi
  
! echo "**** starting the Slony-I node daemon for $DB1"
  $TERMPROG -title "Slon node 22" -e sh -c "slon -d$DEBUG_LEVEL -s10000 -o10000 -g10 -a $LOGSHIPDIR $CLUSTERNAME dbname=$DB2; echo -n 'Enter>'; read line" &
  slon2_pid=$!
  echo "slon[$slon2_pid] on dbname=$DB2"
  
  #####
  # Check that pgbench is still running
--- 240,251 ----
  fi
  
! echo "**** starting the Slony-I node daemon for $DB2"
  $TERMPROG -title "Slon node 22" -e sh -c "slon -d$DEBUG_LEVEL -s10000 -o10000 -g10 -a $LOGSHIPDIR $CLUSTERNAME dbname=$DB2; echo -n 'Enter>'; read line" &
  slon2_pid=$!
  echo "slon[$slon2_pid] on dbname=$DB2"
  
+ echo "**** taking offline_dump.sql from $DB2 for logshipping"
+ sh ../../tools/slony1_dump.sh $DB2 T1 >offline_dump.sql
+ 
  #####
  # Check that pgbench is still running
***************
*** 282,285 ****
  kill $slon2_pid 2>/dev/null
  
! ./compare_pgbench_dumps $DB1 $DB2
  rm $PREAMBLE_FILE
--- 290,313 ----
  kill $slon2_pid 2>/dev/null
  
! sh ./compare_pgbench_dumps $DB1 $DB2
! 
! echo "**** creating database for offline node"
! if ! createdb $DB3 ; then
! 	exit 1
! fi
! 
! echo "---- loading pgbench schema into $DB3"
! psql -q $DB3 <./pgbench_schema.sql
! echo "---- loading Slony-I offline replica schema into $DB3"
! psql -q $DB3 <./offline_dump.sql
! psql -q $DB3 <<_EOF_
! 	alter table history add column "_Slony-I_T1_rowID" bigint;
! _EOF_
! echo "---- loading all offline log archives"
! for afile in $LOGSHIPDIR/*.sql ; do
! 	psql -q $DB3 <$afile
! done
! 
! sh ./compare_pgbench_dumps $DB1 $DB3
! 
  rm $PREAMBLE_FILE

Index: Makefile
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/Makefile,v
retrieving revision 1.12
retrieving revision 1.12.2.1
diff -C2 -d -r1.12 -r1.12.2.1
*** Makefile	2 Aug 2006 15:32:02 -0000	1.12
--- Makefile	31 May 2007 13:29:48 -0000	1.12.2.1
***************
*** 33,36 ****
--- 33,38 ----
  		fi; \
  	done;\
+ 	rm -rf dump.tmp.*
+ 	rm -rf offline_dump.sql offline_logs
  
  install: all installdirs

From wieck at lists.slony.info  Thu May 31 06:29:50 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 06:29:53 2007
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20070531132950.63769290BD8@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv1063/src/slon

Modified Files:
      Tag: REL_1_2_STABLE
	remote_worker.c 
Log Message:
Fix archive log ship tracking. Slon now tracks the setsync status in memory
and generates a void archive with the correct old,new event seqno for all
events.

Jan


Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.124.2.13
retrieving revision 1.124.2.14
diff -C2 -d -r1.124.2.13 -r1.124.2.14
*** remote_worker.c	3 Apr 2007 21:55:03 -0000	1.124.2.13
--- remote_worker.c	31 May 2007 13:29:48 -0000	1.124.2.14
***************
*** 114,117 ****
--- 114,118 ----
  	int			set_id;
  	int			sub_forward;
+ 	char		ssy_seqno[64];
  
  	ProviderSet *prev;
***************
*** 264,268 ****
  					int sub_set, const char *firstseq,
  					const char *seqbuf, const char *timestamp);
- static int	archive_void_log(SlonNode *node, char *seqbuf, const char *message);
  
  
--- 265,268 ----
***************
*** 297,301 ****
  	int			event_ok;
  	int			need_reloadListen = false;
- 	int			rc;
  
  	slon_log(SLON_DEBUG1,
--- 297,300 ----
***************
*** 373,376 ****
--- 372,422 ----
  				adjust_provider_info(node, wd, false);
  				curr_config = rtcfg_seq_get();
+ 
+ 				/*
+ 				 * If we do archive logging, we need the ssy_seqno of
+ 				 * all sets this worker is replicating.
+ 				 */
+ 				if (archive_dir)
+ 				{
+ 					ProviderInfo   *pinfo;
+ 					ProviderSet	   *pset;
+ 					PGresult	   *res;
+ 
+ 					for (pinfo=wd->provider_head; pinfo != NULL; pinfo = pinfo->next)
+ 					{
+ 						for(pset = pinfo->set_head; pset != NULL; pset = pset->next)
+ 						{
+ 							slon_mkquery(&query1,
+ 								"select max(ssy_seqno) from %s.sl_setsync "
+ 								"  where ssy_setid = %d "
+ 								"    and ssy_origin = %d; ",
+ 								rtcfg_namespace, pset->set_id, node->no_id);
+ 							if (query_execute(node, local_dbconn, &query1) < 0)
+ 								slon_retry();
+ 
+ 							res = PQexec(local_dbconn, dstring_data(&query1));
+ 							if (PQresultStatus(res) != PGRES_TUPLES_OK)
+ 							{
+ 								slon_log(SLON_FATAL, "remoteWorkerThread_%d: \"%s\" %s",
+ 										 node->no_id, dstring_data(&query1),
+ 										 PQresultErrorMessage(res));
+ 								PQclear(res);
+ 								slon_retry();
+ 							}
+ 							if (PQntuples(res) != 1)
+ 							{
+ 								slon_log(SLON_FATAL, "remoteWorkerThread_%d: Query \"%s\" did not return one row\n",
+ 										 node->no_id, dstring_data(&query1));
+ 								PQclear(res);
+ 								slon_retry();
+ 							}
+ 							strcpy(pset->ssy_seqno, PQgetvalue(res, 0, 0));
+ 							PQclear(res);
+ 
+ 							slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: set %d starts at ssy_seqno %s\n",
+ 								node->no_id, pset->set_id, pset->ssy_seqno);
+ 						}
+ 					}
+ 				}
  			}
  			rtcfg_unlock();
***************
*** 623,626 ****
--- 669,706 ----
  
  			/*
+ 			 * For all non-SYNC events, we write at least a standard
+ 			 * event tracking log file and adjust the ssy_seqno in our
+ 			 * internal tracking.
+ 			 */
+ 			if (archive_dir)
+ 			{
+ 				ProviderInfo   *pinfo;
+ 				ProviderSet	   *pset;
+ 				char			buf[256];
+ 
+ 				if (archive_open(node, seqbuf) < 0)
+ 					slon_retry();
+ 				sprintf(buf, "-- %s", event->ev_type);
+ 				if (archive_append_str(node, buf) < 0)
+ 					slon_retry();
+ 
+ 				for (pinfo=wd->provider_head; pinfo != NULL; pinfo = pinfo->next)
+ 				{
+ 					for(pset = pinfo->set_head; pset != NULL; pset = pset->next)
+ 					{
+ 						if (archive_tracking(node, rtcfg_namespace, 
+ 								pset->set_id, pset->ssy_seqno, seqbuf, 
+ 								event->ev_timestamp_c) < 0)
+ 							slon_retry();
+ 						strcpy(pset->ssy_seqno, seqbuf);
+ 					}
+ 				}
+ 
+ 				/*
+ 				 * Leave the archive open for event specific actions.
+ 				 */
+ 			}
+ 
+ 			/*
  			 * Simple configuration events. Call the corresponding runtime
  			 * config function, add the query to call the configuration event
***************
*** 642,652 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
- 
  			}
  			else if (strcmp(event->ev_type, "ENABLE_NODE") == 0)
--- 722,725 ----
***************
*** 663,673 ****
  
  				need_reloadListen = true;
- 
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- ENABLE_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_NODE") == 0)
--- 736,739 ----
***************
*** 719,728 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_NODE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_PATH") == 0)
--- 785,788 ----
***************
*** 742,751 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_PATH");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_PATH") == 0)
--- 802,805 ----
***************
*** 763,772 ****
  
  				need_reloadListen = true;
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_PATH");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_LISTEN") == 0)
--- 817,820 ----
***************
*** 783,792 ****
  								 rtcfg_namespace,
  								 li_origin, li_provider, li_receiver);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_LISTEN");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_LISTEN") == 0)
--- 831,834 ----
***************
*** 803,813 ****
  								 rtcfg_namespace,
  								 li_origin, li_provider, li_receiver);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_LISTEN");
- 					if (rc < 0)
- 						slon_retry();
- 				}
- 
  			}
  			else if (strcmp(event->ev_type, "STORE_SET") == 0)
--- 845,848 ----
***************
*** 824,834 ****
  								 rtcfg_namespace,
  								 set_id, set_origin, set_comment);
- 
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_SET") == 0)
--- 859,862 ----
***************
*** 851,857 ****
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, set_id);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 879,883 ----
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, set_id);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 875,885 ****
  				if (archive_dir)
  				{
! 					rc = slon_mkquery(&lsquery,
  							  "delete from %s.sl_setsync_offline "
  							  "  where ssy_setid= %d;",
  							  rtcfg_namespace, add_id);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 901,909 ----
  				if (archive_dir)
  				{
! 					slon_mkquery(&lsquery,
  							  "delete from %s.sl_setsync_offline "
  							  "  where ssy_setid= %d;",
  							  rtcfg_namespace, add_id);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 892,901 ****
  				 * in the runtime configuration.
  				 */
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_ADD_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_ADD_SEQUENCE") == 0)
--- 916,919 ----
***************
*** 906,915 ****
  				 * maintained in the runtime configuration.
  				 */
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_ADD_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_DROP_TABLE") == 0)
--- 924,927 ----
***************
*** 920,929 ****
  								 rtcfg_namespace,
  								 tab_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_DROP_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_DROP_SEQUENCE") == 0)
--- 932,935 ----
***************
*** 934,943 ****
  								 rtcfg_namespace,
  								 seq_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_DROP_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_MOVE_TABLE") == 0)
--- 940,943 ----
***************
*** 949,958 ****
  								 rtcfg_namespace,
  								 tab_id, new_set_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_MOVE_TABLE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "SET_MOVE_SEQUENCE") == 0)
--- 949,952 ----
***************
*** 964,973 ****
  								 rtcfg_namespace,
  								 seq_id, new_set_id);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SET_MOVE_SEQUENCE");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "STORE_TRIGGER") == 0)
--- 958,961 ----
***************
*** 980,989 ****
  								 rtcfg_namespace,
  								 trig_tabid, trig_tgname);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- STORE_TRIGGER");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "DROP_TRIGGER") == 0)
--- 968,971 ----
***************
*** 996,1005 ****
  								 rtcfg_namespace,
  								 trig_tabid, trig_tgname);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- DROP_TRIGGER");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  			}
  			else if (strcmp(event->ev_type, "ACCEPT_SET") == 0)
--- 978,981 ----
***************
*** 1099,1102 ****
--- 1075,1079 ----
  					query_execute(node, local_dbconn, &query1);
  					slon_log(SLON_DEBUG2, "ACCEPT_SET - done\n");
+ 					archive_close(node);
  					slon_retry();
  
***************
*** 1173,1182 ****
  								 failed_node, backup_node, set_id, seqbuf);
  
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- FAILOVER_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  				need_reloadListen = true;
  			}
--- 1150,1153 ----
***************
*** 1195,1204 ****
  								 rtcfg_namespace,
  						   sub_set, sub_provider, sub_receiver, sub_forward);
- 				if (archive_dir)
- 				{
- 					rc = archive_void_log(node, seqbuf, "-- SUBSCRIBE_SET");
- 					if (rc < 0)
- 						slon_retry();
- 				}
  				need_reloadListen = true;
  			}
--- 1166,1169 ----
***************
*** 1335,1341 ****
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, sub_set);
! 					if (archive_open(node, seqbuf) < 0 ||
! 						archive_append_ds(node, &lsquery) < 0 ||
! 						archive_close(node) < 0)
  						slon_retry();
  				}
--- 1300,1304 ----
  								 "  where ssy_setid= %d;",
  								 rtcfg_namespace, sub_set);
! 					if (archive_append_ds(node, &lsquery) < 0)
  						slon_retry();
  				}
***************
*** 1354,1360 ****
  								 rtcfg_namespace,
  							   reset_config_setid, reset_configonly_on_node);
- 				if (archive_dir)
- 					if (archive_void_log(node, seqbuf, "-- RESET_CONFIG") < 0)
- 						slon_retry();
  			}
  			else
--- 1317,1320 ----
***************
*** 1362,1368 ****
  				printf("TODO: ********** remoteWorkerThread: node %d - EVENT %d," INT64_FORMAT " %s - unknown event type\n",
  					   node->no_id, event->ev_origin, event->ev_seqno, event->ev_type);
- 				if (archive_dir)
- 					if (archive_void_log(node, seqbuf, "-- UNHANDLED EVENT!!!") < 0)
- 						slon_retry();
  			}
  
--- 1322,1325 ----
***************
*** 1375,1382 ****
--- 1332,1342 ----
  				query_append_event(&query1, event);
  				slon_appendquery(&query1, "commit transaction;");
+ 				if (archive_close(node) < 0)
+ 					slon_retry();
  			}
  			else
  			{
  				slon_mkquery(&query1, "rollback transaction;");
+ 				archive_terminate(node);
  			}
  			if (query_execute(node, local_dbconn, &query1) < 0)
***************
*** 2403,2429 ****
  	sprintf(seqbuf, INT64_FORMAT, event->ev_seqno);
  
- 
- 	/* Log Shipping Support begins... */
- 
- 	/*
- 	 * - Open the log, put the header in Isn't it convenient that seqbuf was
- 	 * just populated???  :-)
- 	 */
- 	if (archive_dir)
- 	{
- 		rc = archive_open(node, seqbuf);
- 		if (rc < 0)
- 		{
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 	}
- 
  	/*
  	 * Register this connection in sl_nodelock
--- 2363,2366 ----
***************
*** 3053,3057 ****
  		{
  			slon_mkquery(&query1,
! 			 "delete from %s;copy %s %s from stdin;", tab_fqname, tab_fqname,
  						 nodeon73 ? "" : PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
--- 2990,2994 ----
  		{
  			slon_mkquery(&query1,
! 			 "delete from %s;\ncopy %s %s from stdin;", tab_fqname, tab_fqname,
  						 nodeon73 ? "" : PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
***************
*** 3783,3790 ****
  		     set_id, node->no_id, ssy_seqno, ssy_minxid, ssy_maxxid, ssy_xip,
  		     dstring_data(&ssy_action_list));
- 	PQclear(res1);
  	dstring_free(&ssy_action_list);
  	if (query_execute(node, loc_dbconn, &query1) < 0)
  	{
  		slon_disconnectdb(pro_conn);
  		dstring_free(&query1);
--- 3720,3727 ----
  		     set_id, node->no_id, ssy_seqno, ssy_minxid, ssy_maxxid, ssy_xip,
  		     dstring_data(&ssy_action_list));
  	dstring_free(&ssy_action_list);
  	if (query_execute(node, loc_dbconn, &query1) < 0)
  	{
+ 		PQclear(res1);
  		slon_disconnectdb(pro_conn);
  		dstring_free(&query1);
***************
*** 3808,3811 ****
--- 3745,3749 ----
  					 " could not insert to sl_setsync_offline",
  					 node->no_id);
+ 			PQclear(res1);
  			slon_disconnectdb(pro_conn);
  			dstring_free(&query1);
***************
*** 3818,3821 ****
--- 3756,3760 ----
  		}
  	}
+ 	PQclear(res1);
  	gettimeofday(&tv_now, NULL);
  	slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: "
***************
*** 3824,3844 ****
  			 TIMEVAL_DIFF(&tv_start2, &tv_now));
  
- 	if (archive_dir)
- 	{
- 		rc = archive_close(node);
- 		if (rc < 0)
- 		{
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 	}
- 
- 
  	/*
  	 * Roll back the transaction we used on the provider and close the
--- 3763,3766 ----
***************
*** 5495,5498 ****
--- 5417,5423 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
  	if (node->archive_name == NULL)
  	{
***************
*** 5508,5511 ****
--- 5433,5444 ----
  	}
  
+ 	if (node->archive_fp != NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"archive_open() called - archive is already opened\n",
+ 				node->no_id);
+ 		return -1;
+ 	}
+ 
  	sprintf(node->archive_name, "%s/slony1_log_%d_", archive_dir, 
  			node->no_id);
***************
*** 5550,5590 ****
  	int		rc = 0;
  
! 	if (archive_dir)
  	{
! 		rc = fprintf(node->archive_fp,
! 			"\n------------------------------------------------------------------\n"
! 			"-- End Of Archive Log\n"
! 			"------------------------------------------------------------------\n"
! 			"commit;\n"
! 			"vacuum analyze %s.sl_setsync_offline;\n",
! 			rtcfg_namespace);
! 		if (rc < 0)
! 		{
! 			archive_terminate(node);
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot write to archive file %s - %s\n",
! 					node->no_id, node->archive_temp, strerror(errno));
! 			return -1;
! 		}
  
! 		rc = fclose(node->archive_fp);
! 		node->archive_fp = NULL;
! 		if (rc != 0)
! 		{
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot close archive file %s - %s\n",
! 					node->no_id, node->archive_temp, strerror(errno));
! 			return -1;
! 		}
  
! 		rc = rename(node->archive_temp, node->archive_name);
! 		if (rc != 0)
! 		{
! 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 					"Cannot rename archive file %s to %s - %s\n",
! 					node->no_id, node->archive_temp, node->archive_name, 
! 					strerror(errno));
! 			return -1;
! 		}
  	}
  
--- 5483,5531 ----
  	int		rc = 0;
  
! 	if (!archive_dir)
! 		return 0;
! 
! 	if (node->archive_fp == NULL)
  	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot close archive file %s - not open\n",
! 				node->no_id, node->archive_temp);
! 		return -1;
! 	}
  
! 	rc = fprintf(node->archive_fp,
! 		"\n------------------------------------------------------------------\n"
! 		"-- End Of Archive Log\n"
! 		"------------------------------------------------------------------\n"
! 		"commit;\n"
! 		"vacuum analyze %s.sl_setsync_offline;\n",
! 		rtcfg_namespace);
! 	if (rc < 0)
! 	{
! 		archive_terminate(node);
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot write to archive file %s - %s\n",
! 				node->no_id, node->archive_temp, strerror(errno));
! 		return -1;
! 	}
  
! 	rc = fclose(node->archive_fp);
! 	node->archive_fp = NULL;
! 	if (rc != 0)
! 	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot close archive file %s - %s\n",
! 				node->no_id, node->archive_temp, strerror(errno));
! 		return -1;
! 	}
! 
! 	rc = rename(node->archive_temp, node->archive_name);
! 	if (rc != 0)
! 	{
! 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
! 				"Cannot rename archive file %s to %s - %s\n",
! 				node->no_id, node->archive_temp, node->archive_name, 
! 				strerror(errno));
! 		return -1;
  	}
  
***************
*** 5617,5620 ****
--- 5558,5572 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, 
  		"\nselect %s.setsyncTracking_offline(%d, '%s', '%s', '%s');\n"
***************
*** 5644,5647 ****
--- 5596,5610 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, "%s\n", dstring_data(ds));
  	if (rc < 0)
***************
*** 5665,5668 ****
--- 5628,5642 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fprintf(node->archive_fp, "%s\n", s);
  	if (rc < 0)
***************
*** 5688,5691 ****
--- 5662,5676 ----
  	int		rc;
  
+ 	if (!archive_dir)
+ 		return 0;
+ 
+ 	if (node->archive_fp == NULL)
+ 	{
+ 		slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
+ 				"Cannot write to archive file %s - not open\n",
+ 				node->no_id, node->archive_temp);
+ 		return -1;
+ 	}
+ 
  	rc = fwrite(s, len, 1, node->archive_fp);
  	if (rc != 1)
***************
*** 5701,5727 ****
  
  /* ----------
-  * archive_void_log
-  *
-  * writes out a "void" log consisting of the message which must either 
-  * be a valid SQL query or a SQL comment.
-  * ----------
-  */
- static int
- archive_void_log(SlonNode *node, char *seqbuf, const char *message)
- {
- 	int			rc;
- 
- 	rc = archive_open(node, seqbuf);
- 	if (rc < 0)
- 		return rc;
- 	rc = archive_append_str(node, message);
- 	if (rc < 0)
- 		return rc;
- 	rc = archive_close(node);
- 
- 	return rc;
- }
- 
- /* ----------
   * given a string consisting of a list of actionseq values, return a
   * string that compresses this into a set of log_actionseq ranges
--- 5686,5689 ----
***************
*** 6130,6144 ****
  				if ((ddl_only_on_node < 1) || (ddl_only_on_node == rtcfg_nodeid))
  					{
- 						
- 						if (archive_open(node, seqbuf) < 0)
- 							slon_retry();
- 						if (archive_tracking(node, rtcfg_namespace, 
- 											 ddl_setid, seqbuf, seqbuf, 
- 											 event->ev_timestamp_c) < 0)
- 							slon_retry();
  						if (archive_append_str(node, ddl_script) < 0)
  							slon_retry();
- 						if (archive_close(node) < 0)
- 							slon_retry();
  					}
  			}
--- 6092,6097 ----

From wieck at lists.slony.info  Thu May 31 06:29:50 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 06:29:53 2007
Subject: [Slony1-commit] slony1-engine configure
Message-ID: <20070531132951.3D4492903FE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv1063

Modified Files:
      Tag: REL_1_2_STABLE
	configure 
Log Message:
Fix archive log ship tracking. Slon now tracks the setsync status in memory
and generates a void archive with the correct old,new event seqno for all
events.

Jan


Index: configure
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/configure,v
retrieving revision 1.70.2.4
retrieving revision 1.70.2.5
diff -C2 -d -r1.70.2.4 -r1.70.2.5
*** configure	3 Apr 2007 21:55:03 -0000	1.70.2.4
--- configure	31 May 2007 13:29:47 -0000	1.70.2.5
***************
*** 1,8 ****
  #! /bin/sh
  # Guess values for system-dependent variables and create Makefiles.
! # Generated by GNU Autoconf 2.61 for postgresql-slony1-engine 1.2.STABLE.
  #
! # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
! # 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
  # This configure script is free software; the Free Software Foundation
  # gives unlimited permission to copy, distribute and modify it.
--- 1,7 ----
  #! /bin/sh
[...17466 lines suppressed...]
+   	  s/.*/./; q'`
+     done
+     test ! -n "$as_dirs" || mkdir $as_dirs
+   fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
+ echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
+    { (exit 1); exit 1; }; }; }
+ 
        rm -f $ac_file
!       mv $tmp/config.h $ac_file
      fi
    else
!     cat $tmp/config.h
!     rm -f $tmp/config.h
    fi
! done
! _ACEOF
  
+ cat >>$CONFIG_STATUS <<\_ACEOF
  
  { (exit 0); exit 0; }

From wieck at lists.slony.info  Thu May 31 09:46:20 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 09:46:24 2007
Subject: [Slony1-commit] slony1-engine config.h.in
Message-ID: <20070531164620.17D3E290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine
In directory main.slony.info:/tmp/cvs-serv2496

Modified Files:
	config.h.in 
Log Message:
This is the first step towards Slony-I version 2.0.

It drops all support for databases prior to Postgres version 8.3.
This is required because we now make use of new functionality in
Postgres, namely the trigger and rule support for session replication
role. As of now, every node (origin/subscriber/mixed) can be dumped
with pg_dump and result in a consistent snapshot of the database.

TODO:
  - Run DDL scripts as "local" replication role. Currently DDL
    scripts don't work at all.
  - Get rid of STORE TRIGGER and force users to make use of 8.3's
	advanced trigger and rule configuration.

Jan


Index: config.h.in
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/config.h.in,v
retrieving revision 1.18
retrieving revision 1.19
diff -C2 -d -r1.18 -r1.19
*** config.h.in	15 Dec 2006 17:38:10 -0000	1.18
--- config.h.in	31 May 2007 16:46:17 -0000	1.19
***************
*** 4,8 ****
   *	Autoconf input file for config.h
   *
!  *	Copyright (c) 2003-2004, PostgreSQL Global Development Group
   *	Author: Jan Wieck, Afilias USA INC.
   *
--- 4,8 ----
   *	Autoconf input file for config.h
   *
!  *	Copyright (c) 2003-2007, PostgreSQL Global Development Group
   *	Author: Jan Wieck, Afilias USA INC.
   *
***************
*** 13,18 ****
  #define SLONY_I_CONFIG_H
  
! #define SLONY_I_VERSION_STRING	"1.3.0"
! #define SLONY_I_VERSION_STRING_DEC 1,3,0
  
  #ifndef PG_VERSION_MAJOR
--- 13,18 ----
  #define SLONY_I_CONFIG_H
  
! #define SLONY_I_VERSION_STRING	"2.0.0"
! #define SLONY_I_VERSION_STRING_DEC 2,0,0
  
  #ifndef PG_VERSION_MAJOR

From wieck at lists.slony.info  Thu May 31 09:46:20 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 09:46:24 2007
Subject: [Slony1-commit] slony1-engine/src/slon remote_worker.c
Message-ID: <20070531164620.55136290BF0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slon
In directory main.slony.info:/tmp/cvs-serv2496/src/slon

Modified Files:
	remote_worker.c 
Log Message:
This is the first step towards Slony-I version 2.0.

It drops all support for databases prior to Postgres version 8.3.
This is required because we now make use of new functionality in
Postgres, namely the trigger and rule support for session replication
role. As of now, every node (origin/subscriber/mixed) can be dumped
with pg_dump and result in a consistent snapshot of the database.

TODO:
  - Run DDL scripts as "local" replication role. Currently DDL
    scripts don't work at all.
  - Get rid of STORE TRIGGER and force users to make use of 8.3's
	advanced trigger and rule configuration.

Jan


Index: remote_worker.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slon/remote_worker.c,v
retrieving revision 1.139
retrieving revision 1.140
diff -C2 -d -r1.139 -r1.140
*** remote_worker.c	31 May 2007 13:29:27 -0000	1.139
--- remote_worker.c	31 May 2007 16:46:18 -0000	1.140
***************
*** 336,340 ****
  	 */
  	(void) slon_mkquery(&query1,
! 				 "select %s.setSessionRole('_%s', 'slon'); ",
  				 rtcfg_namespace, rtcfg_cluster_name);
  	if (query_execute(node, local_dbconn, &query1) < 0)
--- 336,340 ----
  	 */
  	(void) slon_mkquery(&query1,
! 				 "set session_replication_role = replica; ",
  				 rtcfg_namespace, rtcfg_cluster_name);
  	if (query_execute(node, local_dbconn, &query1) < 0)
***************
*** 2355,2360 ****
  	PGresult   *res2;
  	PGresult   *res3;
- 	PGresult   *res4;
- 	int			nodeon73;
  	int			rc;
  	int			set_origin = 0;
--- 2355,2358 ----
***************
*** 2367,2377 ****
  	SlonDString ssy_action_list;
  	char		seqbuf[64];
- 
- #ifdef HAVE_PQPUTCOPYDATA
  	char	   *copydata = NULL;
- #else
- 	char		copybuf[8192];
- 	int			copydone;
- #endif
  	struct timeval tv_start;
  	struct timeval tv_start2;
--- 2365,2369 ----
***************
*** 2854,2886 ****
  		}
  
- 		(void) slon_mkquery(&query2, "select %s.pre74();",
- 					 rtcfg_namespace);
- 		res4 = PQexec(loc_dbconn, dstring_data(&query2));
- 
- 		if (PQresultStatus(res4) != PGRES_TUPLES_OK)
- 		{
- 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: \"%s\" %s\n",
- 					 node->no_id, dstring_data(&query2),
- 					 PQresultErrorMessage(res4));
- 			PQclear(res4);
- 			PQclear(res3);
- 			PQclear(res1);
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 
- 		/* Are we running on < PG 7.4???  result =	*/
- 		nodeon73 = atoi(PQgetvalue(res4, 0, 0));
- 
- 		slon_log(SLON_DEBUG2, "remoteWorkerThread_%d: "
- 				 " nodeon73 is %d\n",
- 				 node->no_id, nodeon73);
- 
  		(void) slon_mkquery(&query1,
  					 "select %s.prepareTableForCopy(%d); "
--- 2846,2849 ----
***************
*** 2888,2892 ****
  					 rtcfg_namespace,
  					 tab_id, tab_fqname,
! 					 nodeon73 ? "" : PQgetvalue(res3, 0, 0)
  			);
  		res2 = PQexec(loc_dbconn, dstring_data(&query1));
--- 2851,2855 ----
  					 rtcfg_namespace,
  					 tab_id, tab_fqname,
! 					 PQgetvalue(res3, 0, 0)
  			);
  		res2 = PQexec(loc_dbconn, dstring_data(&query1));
***************
*** 2912,2916 ****
  			(void) slon_mkquery(&query1,
  			 "delete from %s;\ncopy %s %s from stdin;", tab_fqname, tab_fqname,
! 						 nodeon73 ? "" : PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
  			if (rc < 0)
--- 2875,2879 ----
  			(void) slon_mkquery(&query1,
  			 "delete from %s;\ncopy %s %s from stdin;", tab_fqname, tab_fqname,
! 						 PQgetvalue(res3, 0, 0));
  			rc = archive_append_ds(node, &query1);
  			if (rc < 0)
***************
*** 2940,2949 ****
  					 PQresultErrorMessage(res2),
  					 PQerrorMessage(pro_dbconn));
- #ifdef HAVE_PQPUTCOPYDATA
  			PQputCopyEnd(loc_dbconn, "Slony-I: copy set operation failed");
- #else
- 			PQputline(loc_dbconn, "\\.\n");
- 			PQendcopy(loc_dbconn);
- #endif
  			PQclear(res3);
  			PQclear(res2);
--- 2903,2907 ----
***************
*** 2962,2966 ****
  		 * Copy the data over
  		 */
- #ifdef HAVE_PQPUTCOPYDATA
  		while ((rc = PQgetCopyData(pro_dbconn, &copydata, 0)) > 0)
  		{
--- 2920,2923 ----
***************
*** 3117,3247 ****
  			}
  		}
- #else							/* ! HAVE_PQPUTCOPYDATA */
- 		copydone = false;
- 		while (!copydone)
- 		{
- 			rc = PQgetline(pro_dbconn, copybuf, sizeof(copybuf));
- 
- 			if (copybuf[0] == '\\' &&
- 				copybuf[1] == '.' &&
- 				copybuf[2] == '\0')
- 			{
- 				copydone = true;
- 			}
- 			else
- 			{
- 				switch (rc)
- 				{
- 				case EOF:
- 				  copydone = true;
- 				  break;
- 				case 0:
- 				  PQputline(loc_dbconn, copybuf);
- 				  PQputline(loc_dbconn, "\n");
- 				  if (archive_dir) {
- 				    rc = archive_append_str(node, copybuf);
- 				    if (rc < 0) {
- 				      PQclear(res2);
- 				      PQclear(res1);
- 				      slon_disconnectdb(pro_conn);
- 				      dstring_free(&query1);
- 				      dstring_free(&query2);
- 				      dstring_free(&query3);
- 				      dstring_free(&lsquery);
- 				      dstring_free(&indexregenquery);
- 				      archive_terminate(node);
- 				      return -1;
- 				    }
- 				  }
- 				  break;
- 				case 1:
- 				  PQputline(loc_dbconn, copybuf);
- 				  if (archive_dir) {
- 				    rc = archive_append_data(node, copybuf, strlen(copybuf));
- 				    if (rc < 0) {
- 				      PQclear(res2);
- 				      PQclear(res1);
- 				      slon_disconnectdb(pro_conn);
- 				      dstring_free(&query1);
- 				      dstring_free(&query2);
- 				      dstring_free(&query3);
- 				      dstring_free(&lsquery);
- 				      dstring_free(&indexregenquery);
- 				      archive_terminate(node);
- 				      return -1;
- 				    }
- 
- 				  }
- 				  break;
- 
- 				}
- 			}
- 		}
- 		PQputline(loc_dbconn, "\\.\n");
- 		if (archive_dir)
- 		{
- 			rc = archive_append_str(node, "\\.");
- 			if (rc < 0) {
- 			  PQclear(res2);
- 			  PQclear(res1);
- 			  slon_disconnectdb(pro_conn);
- 			  dstring_free(&query1);
- 			  dstring_free(&query2);
- 			  dstring_free(&query3);
- 			  dstring_free(&lsquery);
- 			  dstring_free(&indexregenquery);
- 			  archive_terminate(node);
- 			  return -1;
- 			}
- 		}
- 
- 		/*
- 		 * End the COPY to stdout on the provider
- 		 */
- 		if (PQendcopy(pro_dbconn) != 0)
- 		{
- 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
- 					 "PGendcopy() on provider%s",
- 					 node->no_id, PQerrorMessage(pro_dbconn));
- 			PQclear(res3);
- 			PQendcopy(loc_dbconn);
- 			PQclear(res2);
- 			PQclear(res1);
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- 		PQclear(res3);
- 
- 		/*
- 		 * Check that the COPY to stdout on the provider node finished
- 		 * successful.
- 		 */
- 
- 		/*
- 		 * End the COPY from stdin on the local node with success
- 		 */
- 		if (PQendcopy(loc_dbconn) != 0)
- 		{
- 			slon_log(SLON_ERROR, "remoteWorkerThread_%d: "
- 					 "PGendcopy() on local DB%s",
- 					 node->no_id, PQerrorMessage(loc_dbconn));
- 			PQclear(res2);
- 			PQclear(res1);
- 			slon_disconnectdb(pro_conn);
- 			dstring_free(&query1);
- 			dstring_free(&query2);
- 			dstring_free(&query3);
- 			dstring_free(&lsquery);
- 			dstring_free(&indexregenquery);
- 			archive_terminate(node);
- 			return -1;
- 		}
- #endif   /* HAVE_PQPUTCOPYDATA */
  
  		PQclear(res2);
--- 3074,3077 ----

From wieck at lists.slony.info  Thu May 31 09:46:20 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 09:46:24 2007
Subject: [Slony1-commit] slony1-engine/src/backend Makefile
	slony1_base.v73.sql slony1_base.v74.sql slony1_base.v80.sql
	slony1_base.v81.sql slony1_funcs.c slony1_funcs.sql
	slony1_funcs.v73.sql slony1_funcs.v74.sql
	slony1_funcs.v80.sql slony1_funcs.v81.sql
Message-ID: <20070531164620.9DEF9290BD0@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv2496/src/backend

Modified Files:
	Makefile slony1_funcs.c slony1_funcs.sql 
Removed Files:
	slony1_base.v73.sql slony1_base.v74.sql slony1_base.v80.sql 
	slony1_base.v81.sql slony1_funcs.v73.sql slony1_funcs.v74.sql 
	slony1_funcs.v80.sql slony1_funcs.v81.sql 
Log Message:
This is the first step towards Slony-I version 2.0.

It drops all support for databases prior to Postgres version 8.3.
This is required because we now make use of new functionality in
Postgres, namely the trigger and rule support for session replication
role. As of now, every node (origin/subscriber/mixed) can be dumped
with pg_dump and result in a consistent snapshot of the database.

TODO:
  - Run DDL scripts as "local" replication role. Currently DDL
    scripts don't work at all.
  - Get rid of STORE TRIGGER and force users to make use of 8.3's
	advanced trigger and rule configuration.

Jan


--- slony1_funcs.v73.sql DELETED ---

Index: slony1_funcs.sql
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.sql,v
retrieving revision 1.108
retrieving revision 1.109
diff -C2 -d -r1.108 -r1.109
*** slony1_funcs.sql	18 Apr 2007 19:26:54 -0000	1.108
--- slony1_funcs.sql	31 May 2007 16:46:18 -0000	1.109
***************
*** 4,8 ****
  --    Declaration of replication support functions.
  --
! --	Copyright (c) 2003-2004, PostgreSQL Global Development Group
  --	Author: Jan Wieck, Afilias USA INC.
  --
--- 4,8 ----
  --    Declaration of replication support functions.
  --
! --	Copyright (c) 2003-2007, PostgreSQL Global Development Group
  --	Author: Jan Wieck, Afilias USA INC.
[...1091 lines suppressed...]
+ ' language plpgsql;
+ 
+ comment on function @NAMESPACE@.finishTableAfterCopy(int4) is
+ 'Reenable index maintenance and reindex the table';
+ 
+ create or replace function @NAMESPACE@.make_function_strict (text, text) returns void as
+ '
+ declare
+    fun alias for $1;
+    parms alias for $2;
+    stmt text;
+ begin
+    stmt := ''ALTER FUNCTION "_@CLUSTERNAME@".'' || fun || '' '' || parms || '' STRICT;'';
+    execute stmt;
+    return;
+ end
+ ' language plpgsql;
+ 
+ comment on function @NAMESPACE@.make_function_strict (text, text) is
+ 'Equivalent to 8.1+ ALTER FUNCTION ... STRICT';

Index: Makefile
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/Makefile,v
retrieving revision 1.24
retrieving revision 1.25
diff -C2 -d -r1.24 -r1.25
*** Makefile	18 Apr 2007 21:20:22 -0000	1.24
--- Makefile	31 May 2007 16:46:18 -0000	1.25
***************
*** 22,48 ****
  BASE_COMMON		= slony1_base.sql
  FUNCS_COMMON	= slony1_funcs.sql
- BASE_73			= slony1_base.v73.sql
- FUNCS_73		= slony1_funcs.v73.sql
- 
- BASE_74			= slony1_base.v74.sql
- FUNCS_74		= slony1_funcs.v74.sql
  
! BASE_80			= slony1_base.v80.sql
! FUNCS_80		= slony1_funcs.v80.sql
! 
! BASE_81			= slony1_base.v81.sql
! FUNCS_81		= slony1_funcs.v81.sql
  
  SQL_NAMES =				\
  	$(BASE_COMMON)		\
  	$(FUNCS_COMMON)		\
! 	$(BASE_73)			\
! 	$(FUNCS_73)			\
! 	$(BASE_74)			\
! 	$(FUNCS_74)			\
! 	$(BASE_80)			\
! 	$(FUNCS_80)			\
! 	$(BASE_81)			\
! 	$(FUNCS_81)
  
  DISTFILES = Makefile README README.events $(wildcard *.sql) $(wildcard *.in) $(wildcard *.c)
--- 22,34 ----
  BASE_COMMON		= slony1_base.sql
  FUNCS_COMMON	= slony1_funcs.sql
  
! BASE_83			= slony1_base.v83.sql
! FUNCS_83		= slony1_funcs.v83.sql
  
  SQL_NAMES =				\
  	$(BASE_COMMON)		\
  	$(FUNCS_COMMON)		\
! 	$(BASE_83)			\
! 	$(FUNCS_83)
  
  DISTFILES = Makefile README README.events $(wildcard *.sql) $(wildcard *.in) $(wildcard *.c)

--- slony1_base.v74.sql DELETED ---

--- slony1_base.v80.sql DELETED ---

--- slony1_funcs.v80.sql DELETED ---

--- slony1_funcs.v74.sql DELETED ---

--- slony1_base.v81.sql DELETED ---

--- slony1_funcs.v81.sql DELETED ---

Index: slony1_funcs.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.c,v
retrieving revision 1.60
retrieving revision 1.61
diff -C2 -d -r1.60 -r1.61
*** slony1_funcs.c	2 May 2007 21:36:17 -0000	1.60
--- slony1_funcs.c	31 May 2007 16:46:18 -0000	1.61
***************
*** 44,58 ****
  #endif
  
- /* -- Change from PostgreSQL Ver 8.3 -- */
- #if !((PG_VERSION_MAJOR > 8) || ((PG_VERSION_MAJOR == 8) && (PG_VERSION_MINOR >= 3)))
- #define SET_VARSIZE(datum, size) (VARATT_SIZEP(datum)=(size))
- #endif
- 
  PG_FUNCTION_INFO_V1(_Slony_I_createEvent);
  PG_FUNCTION_INFO_V1(_Slony_I_getLocalNodeId);
  PG_FUNCTION_INFO_V1(_Slony_I_getModuleVersion);
  
- PG_FUNCTION_INFO_V1(_Slony_I_setSessionRole);
- PG_FUNCTION_INFO_V1(_Slony_I_getSessionRole);
  PG_FUNCTION_INFO_V1(_Slony_I_logTrigger);
  PG_FUNCTION_INFO_V1(_Slony_I_denyAccess);
--- 44,51 ----
***************
*** 67,72 ****
  Datum		_Slony_I_getModuleVersion(PG_FUNCTION_ARGS);
  
- Datum		_Slony_I_setSessionRole(PG_FUNCTION_ARGS);
- Datum		_Slony_I_getSessionRole(PG_FUNCTION_ARGS);
  Datum		_Slony_I_logTrigger(PG_FUNCTION_ARGS);
  Datum		_Slony_I_denyAccess(PG_FUNCTION_ARGS);
--- 60,63 ----
***************
*** 103,107 ****
  	int32		localNodeId;
  	TransactionId currentXid;
- 	int			session_role;
  	void	   *plan_active_log;
  
--- 94,97 ----
***************
*** 320,410 ****
  
  Datum
- _Slony_I_setSessionRole(PG_FUNCTION_ARGS)
- {
- 	Slony_I_ClusterStatus *cs;
- 	int			rc;
- 	text	   *new_role_t = PG_GETARG_TEXT_P(1);
- 	int			new_role = SLON_ROLE_UNSET;
- 
- 	if ((rc = SPI_connect()) < 0)
- 		elog(ERROR, "Slony-I: SPI_connect() failed in setSessionRole()");
- 
- 	cs = getClusterStatus(PG_GETARG_NAME(0), PLAN_NONE);
- 
- 	SPI_finish();
- 
- 	if (VARSIZE(new_role_t) == VARHDRSZ + 6 &&
- 		memcmp(VARDATA(new_role_t), "normal", 6) == 0)
- 	{
- 		new_role = SLON_ROLE_NORMAL;
- 	}
- 	else if (VARSIZE(new_role_t) == VARHDRSZ + 4 &&
- 			 memcmp(VARDATA(new_role_t), "slon", 4) == 0)
- 	{
- 		if (!superuser())
- 			elog(ERROR, "Slony-I: insufficient privilege for replication role");
- 
- 		new_role = SLON_ROLE_SLON;
- 	}
- 	else
- 	{
- 		elog(ERROR, "Slony-I: invalid session role");
- 	}
- 
- 	if (cs->session_role == SLON_ROLE_UNSET ||
- 		cs->session_role == new_role)
- 	{
- 		cs->session_role = new_role;
- 	}
- 	else
- 	{
- 		elog(ERROR, "Slony-I: cannot change session role once set");
- 	}
- 
- 	PG_RETURN_TEXT_P(new_role_t);
- }
- 
- 
- Datum
- _Slony_I_getSessionRole(PG_FUNCTION_ARGS)
- {
- 	Slony_I_ClusterStatus *cs;
- 	int			rc;
- 	text	   *retval = NULL;
- 
- 	if ((rc = SPI_connect()) < 0)
- 		elog(ERROR, "Slony-I: SPI_connect() failed in getSessionRole()");
- 
- 	cs = getClusterStatus(PG_GETARG_NAME(0), PLAN_NONE);
- 
- 	SPI_finish();
- 
- 	switch (cs->session_role)
- 	{
- 		case SLON_ROLE_UNSET:
- 			cs->session_role = SLON_ROLE_NORMAL;
- 			retval = palloc(VARHDRSZ + 6);
- 			SET_VARSIZE(retval, VARHDRSZ + 6);
- 			memcpy(VARDATA(retval), "normal", 6);
- 			break;
- 
- 		case SLON_ROLE_NORMAL:
- 			retval = palloc(VARHDRSZ + 6);
- 			SET_VARSIZE(retval, VARHDRSZ + 6);
- 			memcpy(VARDATA(retval), "normal", 6);
- 			break;
- 
- 		case SLON_ROLE_SLON:
- 			retval = palloc(VARHDRSZ + 4);
- 			SET_VARSIZE(retval, VARHDRSZ + 4);
- 			memcpy(VARDATA(retval), "slon", 4);
- 			break;
- 	}
- 
- 	PG_RETURN_TEXT_P(retval);
- }
- 
- 
- Datum
  _Slony_I_logTrigger(PG_FUNCTION_ARGS)
  {
--- 310,313 ----
***************
*** 422,425 ****
--- 325,334 ----
  
  	/*
+ 	 * Don't do any logging if the current session role isn't Origin.
+ 	 */
+ 	if (SessionReplicationRole != SESSION_REPLICATION_ROLE_ORIGIN)
+ 		return PointerGetDatum(NULL);
+ 
+ 	/*
  	 * Get the trigger call context
  	 */
***************
*** 459,482 ****
  
  	/*
- 	 * Check/set the session role
- 	 */
- 	switch (cs->session_role)
- 	{
- 		case SLON_ROLE_UNSET:	/* Nobody told us, force it to normal */
- 			cs->session_role = SLON_ROLE_NORMAL;
- 			break;
- 
- 		case SLON_ROLE_NORMAL:	/* Normal, that's good */
- 			break;
- 
- 		case SLON_ROLE_SLON:	/* non-client session ??? */
- 			/* This would happen when a trigger on a
- 			 * subscriber on a replicated table fires, and
- 			 * modifies a tuple in a replication set for
- 			 * which this node is the origin */
- 			break;
- 	}
- 
- 	/*
  	 * Do the following only once per transaction.
  	 */
--- 368,371 ----
***************
*** 966,973 ****
  _Slony_I_denyAccess(PG_FUNCTION_ARGS)
  {
- 	Slony_I_ClusterStatus *cs;
  	TriggerData *tg;
- 	int			rc;
- 	Name		cluster_name;
  
  	/*
--- 855,859 ----
***************
*** 991,1026 ****
  	 * Connect to the SPI manager
  	 */
! 	if ((rc = SPI_connect()) < 0)
  		elog(ERROR, "Slony-I: SPI_connect() failed in denyAccess()");
  
! 	/*
! 	 * Get all the trigger arguments
! 	 */
! 	cluster_name = DatumGetName(DirectFunctionCall1(namein,
! 								CStringGetDatum(tg->tg_trigger->tgargs[0])));
! 
! 	/*
! 	 * Get or create the cluster status information and make sure it has the
! 	 * SPI plans that we need here.
! 	 */
! 	cs = getClusterStatus(cluster_name, PLAN_INSERT_LOG);
! 
! 	/*
! 	 * Check/set the session role
! 	 */
! 	switch (cs->session_role)
! 	{
! 		case SLON_ROLE_UNSET:	/* Unknown or Normal is not allowed here */
! 		case SLON_ROLE_NORMAL:
! 			cs->session_role = SLON_ROLE_NORMAL;
! 			elog(ERROR,
! 				 "Slony-I: Table %s is replicated and cannot be "
! 				 "modified on a subscriber node",
! 				 NameStr(tg->tg_relation->rd_rel->relname));
! 			break;
! 
! 		case SLON_ROLE_SLON:	/* Replication session, nothing to do here */
! 			break;
! 	}
  
  	SPI_finish();
--- 877,887 ----
  	 * Connect to the SPI manager
  	 */
! 	if (SPI_connect() < 0)
  		elog(ERROR, "Slony-I: SPI_connect() failed in denyAccess()");
  
! 	elog(ERROR,
! 		 "Slony-I: Table %s is replicated and cannot be "
! 		 "modified on a subscriber node",
! 		 NameStr(tg->tg_relation->rd_rel->relname));
  
  	SPI_finish();

--- slony1_base.v73.sql DELETED ---

From wieck at lists.slony.info  Thu May 31 09:46:20 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 09:46:24 2007
Subject: [Slony1-commit] slony1-engine/src/slonik slonik.c
Message-ID: <20070531164620.691B0290BFE@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/slonik
In directory main.slony.info:/tmp/cvs-serv2496/src/slonik

Modified Files:
	slonik.c 
Log Message:
This is the first step towards Slony-I version 2.0.

It drops all support for databases prior to Postgres version 8.3.
This is required because we now make use of new functionality in
Postgres, namely the trigger and rule support for session replication
role. As of now, every node (origin/subscriber/mixed) can be dumped
with pg_dump and result in a consistent snapshot of the database.

TODO:
  - Run DDL scripts as "local" replication role. Currently DDL
    scripts don't work at all.
  - Get rid of STORE TRIGGER and force users to make use of 8.3's
	advanced trigger and rule configuration.

Jan


Index: slonik.c
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/slonik/slonik.c,v
retrieving revision 1.76
retrieving revision 1.77
diff -C2 -d -r1.76 -r1.77
*** slonik.c	15 May 2007 19:40:16 -0000	1.76
--- slonik.c	31 May 2007 16:46:18 -0000	1.77
***************
*** 1810,1861 ****
  
  	/* determine what schema version we should load */
! 	if (adminfo->pg_version < 70300)	/* 7.3 and lower */
! 	{
! 		printf("%s:%d: unsupported PostgreSQL "
! 			"version %d.%d (versions < 7.3 were never supported by Slony-I)\n",
! 			stmt->stmt_filename, stmt->stmt_lno,
! 			(adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
! 	}
! 	else if ((adminfo->pg_version >= 70300) && (adminfo->pg_version<70400)) /* 7.3 */
  	{
  		printf("%s:%d: unsupported PostgreSQL "
! 			"version %d.%d (try Slony-I 1.1.8)\n",
  			stmt->stmt_filename, stmt->stmt_lno,
  			(adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
  	}
! 	else if ((adminfo->pg_version >= 70400) && (adminfo->pg_version<70500)) /* 7.4 */
! 	{
! 		use_major = 7;
! 		use_minor = 4;
! 	}
! 	else if ((adminfo->pg_version >= 70500) && adminfo->pg_version < 80100)	/* 8.0 */ 
! 	{
! 		use_major = 8;
! 		use_minor = 0;
! 	}
! 	else if ((adminfo->pg_version >= 80100) && adminfo->pg_version < 80300)	/* 8.1 and 8.2 */ 
  	{
  		use_major = 8;
! 		use_minor = 1;
  	}
! 	else	/* 8.3 and above */
  	{
  		use_major = 8;
! 		use_minor = 1;
  		printf("%s:%d: Possible unsupported PostgreSQL "
! 			"version (%d) %d.%d, defaulting to 8.1 support\n",
                          stmt->stmt_filename, stmt->stmt_lno, adminfo->pg_version,
  			(adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
  	}
  
- #define ROWIDBITS "_Slony-I__rowID"
- 
- 	if (strlen(stmt->script->clustername) + strlen("ROWIDBITS") > NAMEDATALEN)
- 	{
- 		printf("Cluster name %s too long to permit creation of columns containing %s - maximum name length: %d\n",
- 			   stmt->script->clustername, ROWIDBITS, NAMEDATALEN);
- 		return -1;
- 	}
- 
  	dstring_init(&query);
  
--- 1810,1836 ----
  
  	/* determine what schema version we should load */
! 	if (adminfo->pg_version < 80300)	/* before 8.3 */
  	{
  		printf("%s:%d: unsupported PostgreSQL "
! 			"version %d.%d (versions < 8.3 are not supported by Slony-I >= 2.0)\n",
  			stmt->stmt_filename, stmt->stmt_lno,
  			(adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
+ 			return -1;
  	}
! 	else if ((adminfo->pg_version >= 80300) && (adminfo->pg_version < 80400)) /* 8.3 */
  	{
  		use_major = 8;
! 		use_minor = 3;
  	}
! 	else	/* above 8.3 ??? */
  	{
  		use_major = 8;
! 		use_minor = 3;
  		printf("%s:%d: Possible unsupported PostgreSQL "
! 			"version (%d) %d.%d, defaulting to 8.3 support\n",
                          stmt->stmt_filename, stmt->stmt_lno, adminfo->pg_version,
  			(adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
  	}
  
  	dstring_init(&query);
  
***************
*** 1910,1921 ****
          /* determine what schema version we should load */
  
!         if (adminfo->pg_version < 70300)        /* 7.2 and lower */
!         {
!                 printf("%s:%d: unsupported PostgreSQL "
!                         "version %d.%d\n",
!                         stmt->stmt_filename, stmt->stmt_lno,
!                         (adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
!         }
!         else if ((adminfo->pg_version >= 70300) && (adminfo->pg_version<70400)) /* 7.3 */
          {
                  printf("%s:%d: unsupported PostgreSQL "
--- 1885,1889 ----
          /* determine what schema version we should load */
  
!         if (adminfo->pg_version < 80300)        /* before 8.3 */
          {
                  printf("%s:%d: unsupported PostgreSQL "
***************
*** 1923,1948 ****
                          stmt->stmt_filename, stmt->stmt_lno,
                          (adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
          }
!         else if ((adminfo->pg_version >= 70400) && (adminfo->pg_version<70500)) /* 7.4 */
!         {
!                 use_major = 7;
!                 use_minor = 4;
!         }
!         else if ((adminfo->pg_version >= 70500) && adminfo->pg_version < 80100) /* 8.0 */
!         {
!                 use_major = 8;
!                 use_minor = 0;
!         }
!         else if ((adminfo->pg_version >= 80100) && adminfo->pg_version < 80300) /* 8.1, 8.2 */
          {
                  use_major = 8;
!                 use_minor = 1;
          }
!         else    /* 8.3 and above */
          {
                  use_major = 8;
!                 use_minor = 1;
                  printf("%s:%d: Possible unsupported PostgreSQL "
!                         "version %d.%d, defaulting to 8.1 support\n",
                          stmt->stmt_filename, stmt->stmt_lno,
                          (adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
--- 1891,1907 ----
                          stmt->stmt_filename, stmt->stmt_lno,
                          (adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));
+ 			return -1;
          }
!         else if ((adminfo->pg_version >= 80300) && adminfo->pg_version < 80400) /* 8.0 */
          {
                  use_major = 8;
!                 use_minor = 3;
          }
!         else    /* above 8.3 */
          {
                  use_major = 8;
!                 use_minor = 3;
                  printf("%s:%d: Possible unsupported PostgreSQL "
!                         "version %d.%d, defaulting to 8.3 support\n",
                          stmt->stmt_filename, stmt->stmt_lno,
                          (adminfo->pg_version/10000), ((adminfo->pg_version%10000)/100));

From wieck at lists.slony.info  Thu May 31 10:44:05 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 10:44:05 2007
Subject: [Slony1-commit] slony1-engine/src/backend slony1_funcs.sql
Message-ID: <20070531174405.0A44E290BF6@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv3012/src/backend

Modified Files:
	slony1_funcs.sql 
Log Message:
Still need alterTableRestore() for the upgrade from 1.2.x to 2.0.
upgradeSchema() will restore the system catalog to a consistent
state and define+configure the new versions of the log and deny_access
triggers. 

Jan


Index: slony1_funcs.sql
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/backend/slony1_funcs.sql,v
retrieving revision 1.109
retrieving revision 1.110
diff -C2 -d -r1.109 -r1.110
*** slony1_funcs.sql	31 May 2007 16:46:18 -0000	1.109
--- slony1_funcs.sql	31 May 2007 17:44:02 -0000	1.110
***************
*** 3955,3958 ****
--- 3955,4075 ----
  
  -- ----------------------------------------------------------------------
+ -- FUNCTION alterTableRestore (tab_id)
+ -- ----------------------------------------------------------------------
+ create or replace function @NAMESPACE@.alterTableRestore (int4)
+ returns int4
+ as '
+ declare
+ 	p_tab_id			alias for $1;
+ 	v_no_id				int4;
+ 	v_tab_row			record;
+ 	v_tab_fqname		text;
+ 	v_n					int4;
+ begin
+ 	-- ----
+ 	-- Grab the central configuration lock
+ 	-- ----
+ 	lock table @NAMESPACE@.sl_config_lock;
+ 
+ 	-- ----
+ 	-- Get our local node ID
+ 	-- ----
+ 	v_no_id := @NAMESPACE@.getLocalNodeId(''_@CLUSTERNAME@'');
+ 
+ 	-- ----
+ 	-- Get the sl_table row and the current tables origin. Check
+ 	-- that the table currently IS in altered state.
+ 	-- ----
+ 	select T.tab_reloid, T.tab_set, T.tab_altered,
+ 			S.set_origin, PGX.indexrelid,
+ 			@NAMESPACE@.slon_quote_brute(PGN.nspname) || ''.'' ||
+ 			@NAMESPACE@.slon_quote_brute(PGC.relname) as tab_fqname
+ 			into v_tab_row
+ 			from @NAMESPACE@.sl_table T, @NAMESPACE@.sl_set S,
+ 				"pg_catalog".pg_class PGC, "pg_catalog".pg_namespace PGN,
+ 				"pg_catalog".pg_index PGX, "pg_catalog".pg_class PGXC
+ 			where T.tab_id = p_tab_id
+ 				and T.tab_set = S.set_id
+ 				and T.tab_reloid = PGC.oid
+ 				and PGC.relnamespace = PGN.oid
+ 				and PGX.indrelid = T.tab_reloid
+ 				and PGX.indexrelid = PGXC.oid
+ 				and PGXC.relname = T.tab_idxname
+ 				for update;
+ 	if not found then
+ 		raise exception ''Slony-I: alterTableRestore(): Table with id % not found'', p_tab_id;
+ 	end if;
+ 	v_tab_fqname = v_tab_row.tab_fqname;
+ 	if not v_tab_row.tab_altered then
+ 		raise exception ''Slony-I: alterTableRestore(): Table % is not in altered state'',
+ 				v_tab_fqname;
+ 	end if;
+ 
+ 	execute ''lock table '' || v_tab_fqname || '' in access exclusive mode'';
+ 
+ 	-- ----
+ 	-- Procedures are different on origin and subscriber
+ 	-- ----
+ 	if v_no_id = v_tab_row.set_origin then
+ 		-- ----
+ 		-- On the Origin we just drop the trigger we originally added
+ 		-- ----
+ 		execute ''drop trigger "_@CLUSTERNAME@_logtrigger_'' || 
+ 				p_tab_id || ''" on '' || v_tab_fqname;
+ 	else
+ 		-- ----
+ 		-- On the subscriber drop the denyAccess trigger
+ 		-- ----
+ 		execute ''drop trigger "_@CLUSTERNAME@_denyaccess_'' || 
+ 				p_tab_id || ''" on '' || v_tab_fqname;
+ 				
+ 		-- ----
+ 		-- Restore all original triggers
+ 		-- ----
+ 		update "pg_catalog".pg_trigger
+ 				set tgrelid = v_tab_row.tab_reloid
+ 				where tgrelid = v_tab_row.indexrelid;
+ 		get diagnostics v_n = row_count;
+ 		if v_n > 0 then
+ 			update "pg_catalog".pg_class
+ 					set reltriggers = reltriggers + v_n
+ 					where oid = v_tab_row.tab_reloid;
+ 		end if;
+ 
+ 		-- ----
+ 		-- Restore all original rewrite rules
+ 		-- ----
+ 		update "pg_catalog".pg_rewrite
+ 				set ev_class = v_tab_row.tab_reloid
+ 				where ev_class = v_tab_row.indexrelid;
+ 		get diagnostics v_n = row_count;
+ 		if v_n > 0 then
+ 			update "pg_catalog".pg_class
+ 					set relhasrules = true
+ 					where oid = v_tab_row.tab_reloid;
+ 		end if;
+ 
+ 	end if;
+ 
+ 	-- ----
+ 	-- Mark the table not altered in our configuration
+ 	-- ----
+ 	update @NAMESPACE@.sl_table
+ 			set tab_altered = false where tab_id = p_tab_id;
+ 
+ 	return p_tab_id;
+ end;
+ ' language plpgsql;
+ comment on function @NAMESPACE@.alterTableRestore (int4) is
+ 'alterTableRestore (tab_id)
+ 
+ Restores table tab_id from being replicated.
+ 
+ On the origin, this simply involves dropping the "logtrigger" trigger.
+ 
+ On subscriber nodes, this involves dropping the "denyaccess" trigger,
+ and restoring user triggers and rules.';
+ 
+ -- ----------------------------------------------------------------------
  -- FUNCTION subscribeSet (sub_set, sub_provider, sub_receiver, sub_forward)
  -- ----------------------------------------------------------------------
***************
*** 5274,5278 ****
  
  declare
!         p_old   alias for $1;
  begin
  	-- ----
--- 5391,5396 ----
  
  declare
!         p_old   	alias for $1;
! 		v_tab_row	record;
  begin
  	-- ----
***************
*** 5285,5292 ****
  
  	if p_old IN (''1.2.0'', ''1.2.1'', ''1.2.2'', ''1.2.3'', ''1.2.4'', ''1.2.5'', ''1.2.6'', ''1.2.7'', ''1.2.8'', ''1.2.9'', ''1.2.10'') then
  
  		execute ''drop function @NAMESPACE@.alterTableForReplication(int4)'';
- 		execute ''drop function @NAMESPACE@.alterTableRestore(int4)'';
  		execute ''drop function @NAMESPACE@.pre74()'';
  	end if;
  
--- 5403,5426 ----
  
  	if p_old IN (''1.2.0'', ''1.2.1'', ''1.2.2'', ''1.2.3'', ''1.2.4'', ''1.2.5'', ''1.2.6'', ''1.2.7'', ''1.2.8'', ''1.2.9'', ''1.2.10'') then
+ 		-- ---- 
+ 		-- Upgrading from a pre-2.0 ... repair the system catalog
+ 		-- ----
+ 		for v_tab_row in select * from @NAMESPACE@.sl_table loop
+ 			perform @NAMESPACE@.alterTableRestore(v_tab_row.tab_id);
+ 		end loop;
  
+ 		-- ----
+ 		-- drop obsolete functions
+ 		-- ----
  		execute ''drop function @NAMESPACE@.alterTableForReplication(int4)'';
  		execute ''drop function @NAMESPACE@.pre74()'';
+ 
+ 		-- ----
+ 		-- and create the new versions of the log and deny access triggers.
+ 		-- ----
+ 		for v_tab_row in select * from @NAMESPACE@.sl_table loop
+ 			perform @NAMESPACE@.alterTableAddTriggers(v_tab_row.tab_id);
+ 			perform @NAMESPACE@.alterTableConfigureTriggers(v_tab_row.tab_id);
+ 		end loop;
  	end if;
  

From wieck at lists.slony.info  Thu May 31 10:44:05 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 10:44:06 2007
Subject: [Slony1-commit] slony1-engine/src/ducttape test_1_update_functions
Message-ID: <20070531174405.14BD9290BFC@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/ducttape
In directory main.slony.info:/tmp/cvs-serv3012/src/ducttape

Modified Files:
	test_1_update_functions 
Log Message:
Still need alterTableRestore() for the upgrade from 1.2.x to 2.0.
upgradeSchema() will restore the system catalog to a consistent
state and define+configure the new versions of the log and deny_access
triggers. 

Jan


Index: test_1_update_functions
===================================================================
RCS file: /home/cvsd/slony1/slony1-engine/src/ducttape/test_1_update_functions,v
retrieving revision 1.3
retrieving revision 1.4
diff -C2 -d -r1.3 -r1.4
*** test_1_update_functions	4 May 2005 20:43:16 -0000	1.3
--- test_1_update_functions	31 May 2007 17:44:02 -0000	1.4
***************
*** 18,26 ****
  slonik <<_EOF_
  	cluster name = T1;
! 	node 1 admin conninfo = 'dbname=$DB1';
! 	node 2 admin conninfo = 'dbname=$DB2';
  
! 	update functions (id = 1);
! 	update functions (id = 2);
  _EOF_
  
--- 18,26 ----
  slonik <<_EOF_
  	cluster name = T1;
! 	node 11 admin conninfo = 'dbname=$DB1';
! 	node 22 admin conninfo = 'dbname=$DB2';
  
! 	update functions (id = 11);
! 	update functions (id = 22);
  _EOF_
  

From wieck at lists.slony.info  Thu May 31 11:55:30 2007
From: wieck at lists.slony.info (Jan Wieck)
Date: Thu May 31 11:55:33 2007
Subject: [Slony1-commit] slony1-engine/src/backend slony1_base.v83.sql
	slony1_funcs.v83.sql
Message-ID: <20070531185530.F2EF92902B3@main.slony.info>

Update of /home/cvsd/slony1/slony1-engine/src/backend
In directory main.slony.info:/tmp/cvs-serv3505

Added Files:
	slony1_base.v83.sql slony1_funcs.v83.sql 
Log Message:
Well, someone might miss these two ...

Jan


--- NEW FILE: slony1_funcs.v83.sql ---
-- ----------------------------------------------------------------------
-- slony1_funcs.v83.sql
--
--    Version 8.3 specific part of the replication support functions.
--
--	Copyright (c) 2007, PostgreSQL Global Development Group
--	Author: Jan Wieck, Afilias USA INC.
--
-- $Id: slony1_funcs.v83.sql,v 1.1 2007-05-31 18:55:28 wieck Exp $
-- ----------------------------------------------------------------------


--- NEW FILE: slony1_base.v83.sql ---
-- ----------------------------------------------------------------------
-- slony1_base.v83.sql
--
--    Version 8.3 specific parts of the basic replication schema.
--
--	Copyright (c) 2007, PostgreSQL Global Development Group
--	Author: Jan Wieck, Afilias USA INC.
--
-- $Id: slony1_base.v83.sql,v 1.1 2007-05-31 18:55:28 wieck Exp $
-- ----------------------------------------------------------------------



