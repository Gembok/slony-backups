From mu at forsa.de  Mon Aug  1 06:12:09 2011
From: mu at forsa.de (marmu)
Date: Mon, 1 Aug 2011 06:12:09 -0700 (PDT)
Subject: [Slony1-general] subscribeSet() the receiver does not exist
 receiver id:2
In-Reply-To: <4E316F37.8080105@ca.afilias.info>
References: <32138395.post@talk.nabble.com> <4E316F37.8080105@ca.afilias.info>
Message-ID: <32169512.post@talk.nabble.com>


>> Then I get this message:
>> Starting SLONY slave(fquest)<stdin>:4: NOTICE:  subscribe set:
>> omit_copy=f
>> <stdin>:4: PGRES_FATAL_ERROR select "_fquest".subscribeSet(1, 1, 2, 'f',
>> 'f');  - ERROR:  Slony-I: subscribeSet() the receiver does not exist
>> receiver id:2

>You need to add something like

>store node(id=2, event node=1);

>before the subscribe set command in your
>fquest-slave-setupmaker script

thanks a lot, this solved the "receiver does not exist"-problem. both master
and slave start without any errors now.


>> Further I get this error when clicking on the cluster in pgadmin:
>> 2011-07-26 10:58:42 CEST fquest postgres ERROR:  relation "pg_listener"
>> does
>> not exist at character 25
>> 2011-07-26 10:58:42 CEST fquest postgres STATEMENT:  SELECT listenerpid
>> FROM
>> pg_listener WHERE relname = '_fquest_Event'

>This error is unrelated, but might be because the version of pgadmin you 
>have is older than the version of postgresql you are using.
>
>AI will also warn you that many (maybe even the last released one) 
>versions of pgadmin don't properly work with slony 2.0.x

read about that already. will keep it in mind. but pgadmin is for now the
best way for me to check what is going on. further comparing the old and the
new server replication wise.



What still bothers me, is that the replication set on the master-DB states
24 tables. this is ok. but the replication set on the slave does not state
any abonnements/subscriptions (to these tables). I think there should be an
abonnement/subscription. like this (on the old server - pgadmin sql field):

-- subscribe replication set

 SELECT _fquest.subscribeset(1, 1, 2, false);

thanks for your help, really appreciated.

Cheers,
Marcus
-- 
View this message in context: http://old.nabble.com/subscribeSet%28%29-the-receiver-does-not-exist-receiver-id%3A2-tp32138395p32169512.html
Sent from the Slony-I -- General mailing list archive at Nabble.com.


From francescoboccacci at libero.it  Tue Aug  2 08:44:38 2011
From: francescoboccacci at libero.it (Francesco Boccacci)
Date: Tue, 2 Aug 2011 15:44:38 +0000 (UTC)
Subject: [Slony1-general] Invitation to connect on LinkedIn
Message-ID: <3595972.1769677.1312299878938.JavaMail.app@ela4-app0131.prod>

LinkedIn
------------



   
I'd like to add you to my professional network on LinkedIn.

- Francesco

Francesco Boccacci
R&D developer at Navionics s.p.a 
Florence Area, Italy

Confirm that you know Francesco Boccacci
https://www.linkedin.com/e/-8dhz-gqv1gr2v-2a/isd/3732900460/eoPbSnL0/


 
-- 
(c) 2011, LinkedIn Corporation
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20110802/82656d11/attachment.htm 

From ssinger at ca.afilias.info  Wed Aug  3 12:53:56 2011
From: ssinger at ca.afilias.info (Steve Singer)
Date: Wed, 03 Aug 2011 15:53:56 -0400
Subject: [Slony1-general] try { DROP NODE(...)} in 2.1.0
Message-ID: <4E39A754.6040601@ca.afilias.info>

In doing some testing against the 2.1.0 beta I tried executing some 
slonik code like

try {
   drop node(id=3, event node=1);
}
on error {
   echo "node already gone";
}
store node(id=3, event node=1);

A script like this will fail in the current 2.1.0 betas and this 
shouldn't surprise anyone who has read about the new features in 2.1.0

A drop node requires that the cluster be somewhat caught up (at least to 
the extent that any events from the drop'd node that have been confirmed 
elsewhere are confirmed everywhere).  This means that drop node has an 
implicit 'wait for event' before it.   However you can't have 'wait for 
events' inside a try block.

I am surprised that no one else has stumbled upon this while testing 2.1.0

The options I see are

1) Accept that you can't do that type of thing anymore (using try blocks 
as control flow structures)

2)  Have some way of moving the 'wait for event' to the 'try' statement 
instead of the first statement in the try block (details and syntax 
proposals or even a patch welcome)

3) A better idea

Steve




