From bogus@does.not.exist.com  Tue Feb 13 08:23:58 2007
From: bogus@does.not.exist.com ()
Date: Tue Feb 13 08:23:59 2007
Subject: No subject
Message-ID: <mailman.0.1171383839.20060.slony1-general@lists.slony.info>

  _cluster.storeset()
  to create the temporary replication set

  _cluster.setaddtable()
  to add the new partition to the temporary replicationset

  _cluster.subscribeset()
  to subscribe the temporary set to a subscriber node

  _cluster.mergeset()
  to merge the temporary set with the main set

  _cluster.setdroptable()
  to remove old, inactive, partitions from the main replication set

  <contrib>.dblink()
  to check the status of the temporary set, etc at each node

All of this is automated and fired off by a daily cron script, which
will only do real work when executing on the provider node for the main
replication set.

All per-partition ddl and dml is recorded in tables, and executed
dynamically.

If you have specific questions I will try to answer them.
__
Marc

On Thu, 2006-03-30 at 12:00 +0100,
slony1-general-request at gborg.postgresql.org wrote:
> essage: 3
> Date: Wed, 29 Mar 2006 16:42:36 -0800
> From: "Nick Johnson" <nick at haydrian.com>
> Subject: [Slony1-general] Dynamic table subscription
> To: <slony1-general at gborg.postgresql.org>
> Message-ID:
>         <775F825B46B551499DC75DC4E92F80AB1EEFE5 at jupiter.ad.haydrian.com>
> Content-Type: text/plain; charset="us-ascii"
> 
> Hi,
> 
>  
> 
> We're attempting to apply Slony1 to our database for replication.
> However, we use a table partitioning system that causes new tables to
> be
> created at runtime. Slony1 doesn't directly support runtime schema
> changes, I realize, but we think we have a solution: There's a master
> 'partition descriptor' table, which has a row for each table in the
> system. If we were to create triggers on insert/update/delete for this
> table on master and slave, we could, on the master, invoke a trigger
> that adds the table to the set and configures it, and on the slave
> invoke a trigger that creates the table (since it always follows a
> defined template), and subscribes to its replication set.
> 
>  
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://gborg.postgresql.org/pipermail/slony1-general/attachments/20060331/d588755c/attachment.bin

