From kleptog at gmail.com  Tue Jan  3 02:49:51 2012
From: kleptog at gmail.com (Martijn van Oosterhout)
Date: Tue, 3 Jan 2012 11:49:51 +0100
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
Message-ID: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>

Hoi,

We have a Slony-I setup in a slightly weird situation. What happened
was that the server did a huge delete (millions of rows) in a single
transaction which caused the replication to start to run behind. For
some reason in this state it takes forever to apply the change because
the query to find out what it needs to apply does a sort or something
because it doesn't want to apply the whole set at once. A single SYNC
takes 10 minutes.

In any case, the way we fixed it before was to unsubscribe and
resubscribe the set, because resyncing the whole database is quicker
than waiting for the deletes to complete. However, this time it broke
in a new way. The result is that slony thinks it is properly
subscribed, but the database data has not been resynced, so you get
some bastard combination of old and new data. Logs below.

Two questions:
1. Is there a way we could have detected the unsubscribe failed
(slonik gave no error, but we didn't ask). If so, we can add that to
the procedure as something to check
2. Seems like a bug to me, but pilot error is not impossible.

Thanks in advance,

2012-01-01 14:24:27 CETINFO   cleanupThread:    0.002 seconds for cleanupEvent()
2012-01-01 14:24:27 CETINFO   cleanupThread:    0.006 seconds for vacuuming
2012-01-01 14:30:55 CETINFO   remoteWorkerThread_1: SYNC 5000990612
done in 733.067 seconds
2012-01-01 14:30:55 CETINFO   remoteWorkerThread_1: syncing set 1 with
50 table(s) from provider 1
NOTICE:  Slony-I: log switch to sl_log_2 complete - truncate sl_log_1
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-01-01 14:35:22 CETINFO   cleanupThread:    0.066 seconds for cleanupEvent()

--- unsubscribe happens here ---
2012-01-01 14:37:58 CETCONFIG unsubscribeSet: sub_set=1
2012-01-01 14:37:58 CETCONFIG storeListen: li_origin=1 li_receiver=2
li_provider=1
--- this is the weird error ---
2012-01-01 14:44:09 CETERROR  remoteWorkerThread_1: "update
"_pp_config_rep".sl_setsync set     ssy_seqno = '5000990613',
ssy_snapshot =  '20587190:20590885:20587190',     ssy_action_list = ''
where ssy_setid in (1) and ssy_seqno < '5000990613'; " ERROR:  could
not serialize access due to concurrent update
2012-01-01 14:44:09 CETERROR  remoteWorkerThread_1: SYNC aborted
2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
configuration
2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: helper thread for
provider 1 terminated
2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: disconnecting from
data provider 1
2012-01-01 14:44:21 CETCONFIG storeSubscribe: sub_set=1 sub_provider=1
sub_forward='t'
2012-01-01 14:44:21 CETCONFIG storeListen: li_origin=1 li_receiver=2
li_provider=1
2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
configuration
--- and here it appears slony thinks it is properly subscribed, but
the database has not been resynced ---
NOTICE:  Slony-I: Logswitch to sl_log_1 initiated
CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"
PL/pgSQL function "cleanupevent" line 101 at PERFORM
2012-01-01 14:46:29 CETINFO   cleanupThread:    0.015 seconds for cleanupEvent()


-- 
Martijn van Oosterhout <kleptog at gmail.com> http://svana.org/kleptog/

From ssinger at ca.afilias.info  Tue Jan  3 08:17:00 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Tue, 03 Jan 2012 11:17:00 -0500
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
Message-ID: <4F0329FC.1040409@ca.afilias.info>

On 12-01-03 05:49 AM, Martijn van Oosterhout wrote:
> Hoi,

What version of Slony are you using?
What version of Postgresql are you using?


>
> We have a Slony-I setup in a slightly weird situation. What happened
> was that the server did a huge delete (millions of rows) in a single
> transaction which caused the replication to start to run behind. For
> some reason in this state it takes forever to apply the change because
> the query to find out what it needs to apply does a sort or something
> because it doesn't want to apply the whole set at once. A single SYNC
> takes 10 minutes.
>

I suspect you hit bug #167 (fixed in 2.1.0) that makes sync operations 
slow when sl_log_x gets big.


> In any case, the way we fixed it before was to unsubscribe and
> resubscribe the set, because resyncing the whole database is quicker
> than waiting for the deletes to complete. However, this time it broke
> in a new way. The result is that slony thinks it is properly
> subscribed, but the database data has not been resynced, so you get
> some bastard combination of old and new data. Logs below.
>
> Two questions:
> 1. Is there a way we could have detected the unsubscribe failed
> (slonik gave no error, but we didn't ask). If so, we can add that to
> the procedure as something to check

The proper procedure should be

unsubscribe(id=1, receiver=2);
wait for event(origin=2, confirmed=all, wait on=2);
subscribe set(set id=1, provider=1,receiver=2,forward=yes);

In 2.1 and above slonik should automatically perform the 'wait for event'.

The slonik command 'unsubscribe set' gets submitted to the node being 
unsubscribed (node 2).   If that command failed then slonik should have 
caught the error.



> 2. Seems like a bug to me, but pilot error is not impossible.
>
> Thanks in advance,
>
> 2012-01-01 14:24:27 CETINFO   cleanupThread:    0.002 seconds for cleanupEvent()
> 2012-01-01 14:24:27 CETINFO   cleanupThread:    0.006 seconds for vacuuming
> 2012-01-01 14:30:55 CETINFO   remoteWorkerThread_1: SYNC 5000990612
> done in 733.067 seconds
> 2012-01-01 14:30:55 CETINFO   remoteWorkerThread_1: syncing set 1 with
> 50 table(s) from provider 1
> NOTICE:  Slony-I: log switch to sl_log_2 complete - truncate sl_log_1
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-01-01 14:35:22 CETINFO   cleanupThread:    0.066 seconds for cleanupEvent()
>
> --- unsubscribe happens here ---
> 2012-01-01 14:37:58 CETCONFIG unsubscribeSet: sub_set=1
> 2012-01-01 14:37:58 CETCONFIG storeListen: li_origin=1 li_receiver=2
> li_provider=1
> --- this is the weird error ---
> 2012-01-01 14:44:09 CETERROR  remoteWorkerThread_1: "update
> "_pp_config_rep".sl_setsync set     ssy_seqno = '5000990613',
> ssy_snapshot =  '20587190:20590885:20587190',     ssy_action_list = ''
> where ssy_setid in (1) and ssy_seqno<  '5000990613'; " ERROR:  could
> not serialize access due to concurrent update
> 2012-01-01 14:44:09 CETERROR  remoteWorkerThread_1: SYNC aborted

If the receivers remoteWorkerThread_1 is aborted because of the 
unsubscribe then I don't see this as an issue.



> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
> configuration
> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: helper thread for
> provider 1 terminated
> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: disconnecting from
> data provider 1
> 2012-01-01 14:44:21 CETCONFIG storeSubscribe: sub_set=1 sub_provider=1
> sub_forward='t'
> 2012-01-01 14:44:21 CETCONFIG storeListen: li_origin=1 li_receiver=2
> li_provider=1
> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
> configuration
> --- and here it appears slony thinks it is properly subscribed, but
> the database has not been resynced ---

What do you base this statement on?   I do not see anything in the logs 
you pasted showing me that slon2 has received the SUBSCRIBE_SET or 
ENABLE_SUBSCRIPTION event.

What is sl_subscribe on node 2 at this point in time?
Does node 2 have a record in sl_event of it having processed those two 
events?






> NOTICE:  Slony-I: Logswitch to sl_log_1 initiated
> CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"
> PL/pgSQL function "cleanupevent" line 101 at PERFORM
> 2012-01-01 14:46:29 CETINFO   cleanupThread:    0.015 seconds for cleanupEvent()
>
>


From cbbrowne at afilias.info  Tue Jan  3 08:33:09 2012
From: cbbrowne at afilias.info (Christopher Browne)
Date: Tue, 3 Jan 2012 11:33:09 -0500
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
Message-ID: <CANfbgbbByGLZc_usNnYeF=RVqnadW1XfMMtHcazFH7W0KXdBcg@mail.gmail.com>

On Tue, Jan 3, 2012 at 5:49 AM, Martijn van Oosterhout
<kleptog at gmail.com> wrote:
> Hoi,
>
> We have a Slony-I setup in a slightly weird situation. What happened
> was that the server did a huge delete (millions of rows) in a single
> transaction which caused the replication to start to run behind. For
> some reason in this state it takes forever to apply the change because
> the query to find out what it needs to apply does a sort or something
> because it doesn't want to apply the whole set at once. A single SYNC
> takes 10 minutes.

If SYNCs before the big one are applying very slowly, then it sounds
like you're hitting bug #167.
<http://www.slony.info/bugzilla/show_bug.cgi?id=167>

Note that we fixed that in version 2.1, so I'll guess you're not on 2.1.

In the case of that huge update, that will indeed be applied in a
single SYNC; once you'd hit that SYNC, it's liable to process for a
good long time (hours?).

> In any case, the way we fixed it before was to unsubscribe and
> resubscribe the set, because resyncing the whole database is quicker
> than waiting for the deletes to complete. However, this time it broke
> in a new way. The result is that slony thinks it is properly
> subscribed, but the database data has not been resynced, so you get
> some bastard combination of old and new data. Logs below.

Unfortunately, the UNSUBSCRIBE request comes in as an event, and it's
later in the event stream than the SYNC-of-the-million-deletes, so
it's probably not processing when you think it ought to.

> Two questions:
> 1. Is there a way we could have detected the unsubscribe failed
> (slonik gave no error, but we didn't ask). If so, we can add that to
> the procedure as something to check

It's quite likely that nothing about the UNSUBSCRIBE *did* fail.  It's
just that it's waiting to process the event until *after* the big clot
of log data in that huge SYNC that you had.

Unfortunately, that's not remotely the result you were hoping for; you
were hoping to cancel the set *before* processing the awful huge SYNC.

I don't think we have any particularly wonderful solution to this.  I
imagined that we had a bug open on having a "Cancel Subscription"
command, which is pretty nearly similar, but I can't find it.  It
would be nice to have a "trample on that subscription - it's not valid
or wanted anymore" command.

From kleptog at gmail.com  Tue Jan  3 09:31:24 2012
From: kleptog at gmail.com (Martijn van Oosterhout)
Date: Tue, 3 Jan 2012 18:31:24 +0100
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <4F0329FC.1040409@ca.afilias.info>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
	<4F0329FC.1040409@ca.afilias.info>
Message-ID: <CADWG95tn3K7SWOncK1J89keGb1r8sArEMoqJxxu9Gbn5HEqMDA@mail.gmail.com>

Hoi,

> What version of Slony are you using?
> What version of Postgresql are you using?

Sorry, I should have mentioned: slony-I 2.0.7, PostgreSQL 9.0.3

> I suspect you hit bug #167 (fixed in 2.1.0) that makes sync operations slow
> when sl_log_x gets big.

Well, the symptoms look about right. Might see if I can push to get an
upgrade to at least that version.

> unsubscribe(id=1, receiver=2);
> wait for event(origin=2, confirmed=all, wait on=2);
> subscribe set(set id=1, provider=1,receiver=2,forward=yes);
>
> In 2.1 and above slonik should automatically perform the 'wait for event'.

Ok, that's good to know. Currently we're doing:

slonik_unsubscribe_set -c /etc/slony_tools.conf 1 2 |slonik

which is quite possibly not the recommended way. But the output is
just an unsubscribe with a try .. on error .. block around it.

>> --- unsubscribe happens here ---
>> 2012-01-01 14:37:58 CETCONFIG unsubscribeSet: sub_set=1
>> 2012-01-01 14:37:58 CETCONFIG storeListen: li_origin=1 li_receiver=2
>> li_provider=1
>> --- this is the weird error ---
>> 2012-01-01 14:44:09 CETERROR ?remoteWorkerThread_1: "update
>> "_pp_config_rep".sl_setsync set ? ? ssy_seqno = '5000990613',
>> ssy_snapshot = ?'20587190:20590885:20587190', ? ? ssy_action_list = ''
>> where ssy_setid in (1) and ssy_seqno< ?'5000990613'; " ERROR: ?could
>> not serialize access due to concurrent update
>> 2012-01-01 14:44:09 CETERROR ?remoteWorkerThread_1: SYNC aborted
>
> If the receivers remoteWorkerThread_1 is aborted because of the unsubscribe
> then I don't see this as an issue.

Given the timing I wonder if it's the subscribe that's actually failing...

>> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
>> configuration
>> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: helper thread for
>> provider 1 terminated
>> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: disconnecting from
>> data provider 1
>> 2012-01-01 14:44:21 CETCONFIG storeSubscribe: sub_set=1 sub_provider=1
>> sub_forward='t'
>> 2012-01-01 14:44:21 CETCONFIG storeListen: li_origin=1 li_receiver=2
>> li_provider=1
>> 2012-01-01 14:44:21 CETCONFIG remoteWorkerThread_1: update provider
>> configuration
>> --- and here it appears slony thinks it is properly subscribed, but
>> the database has not been resynced ---
>
> What do you base this statement on? ? I do not see anything in the logs you
> pasted showing me that slon2 has received the SUBSCRIBE_SET or
> ENABLE_SUBSCRIPTION event.

Well, I'm basing it on that the logs repeated this for two days:

2012-01-02 12:31:47 CETINFO   cleanupThread:    0.004 seconds for cleanupEvent()
NOTICE:  Slony-I: log switch to sl_log_2 complete - truncate sl_log_1
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-01-02 12:43:15 CETINFO   cleanupThread:    0.079 seconds for cleanupEvent()
2012-01-02 12:43:15 CETINFO   cleanupThread:    0.006 seconds for vacuuming
NOTICE:  Slony-I: Logswitch to sl_log_1 initiated
CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"
PL/pgSQL function "cleanupevent" line 101 at PERFORM
2012-01-02 12:54:30 CETINFO   cleanupThread:    0.004 seconds for cleanupEvent()
NOTICE:  Slony-I: log switch to sl_log_1 complete - truncate sl_log_2
CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
2012-01-02 13:05:14 CETINFO   cleanupThread:    0.096 seconds for cleanupEvent()
NOTICE:  Slony-I: Logswitch to sl_log_2 initiated
CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"

So it was doing something, but now you mention it, there are no SYNCs,
so perhaps it wasn't subscribed.

This is the log for the slave, and it says there "storeSubscribe".
doesn't that mean it received a SUBSCRIBE_SET?

> What is sl_subscribe on node 2 at this point in time?
> Does node 2 have a record in sl_event of it having processed those two
> events?

Unfortunately I don't have that information available, but it looks
like pilot error (the user claimed there were no errors) after all:
the subscribe didn't work.

Have a nice day,
-- 
Martijn van Oosterhout <kleptog at gmail.com> http://svana.org/kleptog/

From kleptog at gmail.com  Tue Jan  3 09:34:04 2012
From: kleptog at gmail.com (Martijn van Oosterhout)
Date: Tue, 3 Jan 2012 18:34:04 +0100
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <CANfbgbbByGLZc_usNnYeF=RVqnadW1XfMMtHcazFH7W0KXdBcg@mail.gmail.com>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
	<CANfbgbbByGLZc_usNnYeF=RVqnadW1XfMMtHcazFH7W0KXdBcg@mail.gmail.com>
Message-ID: <CADWG95uB_xc-aAcVTRodhAYV2VyC-R1vuVS0FzoPNriUw9ckbw@mail.gmail.com>

I responded to I think most of your points in the other email, but
there is one thing:

On 3 January 2012 17:33, Christopher Browne <cbbrowne at afilias.info> wrote:
> On Tue, Jan 3, 2012 at 5:49 AM, Martijn van Oosterhout
> <kleptog at gmail.com> wrote:
>> In any case, the way we fixed it before was to unsubscribe and
>> resubscribe the set, because resyncing the whole database is quicker
>> than waiting for the deletes to complete. However, this time it broke
>> in a new way. The result is that slony thinks it is properly
>> subscribed, but the database data has not been resynced, so you get
>> some bastard combination of old and new data. Logs below.
>
> Unfortunately, the UNSUBSCRIBE request comes in as an event, and it's
> later in the event stream than the SYNC-of-the-million-deletes, so
> it's probably not processing when you think it ought to.

In our experience whenever the replication is behind, doing an
unsubscribe is acted upon immediately. I always thought this was by
design, though I couldn't work out why. But you're saying it shouldn't
work at all... That's just weird.

I'll have to pay more attention next time to see exactly what happened.

Have a nice day,
-- 
Martijn van Oosterhout <kleptog at gmail.com> http://svana.org/kleptog/

From ssinger at ca.afilias.info  Tue Jan  3 10:05:11 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Tue, 03 Jan 2012 13:05:11 -0500
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <CADWG95uB_xc-aAcVTRodhAYV2VyC-R1vuVS0FzoPNriUw9ckbw@mail.gmail.com>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>	<CANfbgbbByGLZc_usNnYeF=RVqnadW1XfMMtHcazFH7W0KXdBcg@mail.gmail.com>
	<CADWG95uB_xc-aAcVTRodhAYV2VyC-R1vuVS0FzoPNriUw9ckbw@mail.gmail.com>
Message-ID: <4F034357.3070906@ca.afilias.info>

On 12-01-03 12:34 PM, Martijn van Oosterhout wrote:
> I responded to I think most of your points in the other email, but
> there is one thing:

>>
>> Unfortunately, the UNSUBSCRIBE request comes in as an event, and it's
>> later in the event stream than the SYNC-of-the-million-deletes, so
>> it's probably not processing when you think it ought to.
>
> In our experience whenever the replication is behind, doing an
> unsubscribe is acted upon immediately. I always thought this was by
> design, though I couldn't work out why. But you're saying it shouldn't
> work at all... That's just weird.

I think Martijn is correct, my understanding of the code in 
slonik_unsubscribe_set (slonik.c) is that the command gets submitted to 
the receiver.



>
> I'll have to pay more attention next time to see exactly what happened.
>
> Have a nice day,


From ssinger at ca.afilias.info  Tue Jan  3 10:29:38 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Tue, 03 Jan 2012 13:29:38 -0500
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <CADWG95tn3K7SWOncK1J89keGb1r8sArEMoqJxxu9Gbn5HEqMDA@mail.gmail.com>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>	<4F0329FC.1040409@ca.afilias.info>
	<CADWG95tn3K7SWOncK1J89keGb1r8sArEMoqJxxu9Gbn5HEqMDA@mail.gmail.com>
Message-ID: <4F034912.50606@ca.afilias.info>

On 12-01-03 12:31 PM, Martijn van Oosterhout wrote:
> Hoi,
>
>> What version of Slony are you using?
>> What version of Postgresql are you using?
>
> Sorry, I should have mentioned: slony-I 2.0.7, PostgreSQL 9.0.3
>
>
>>
>> What do you base this statement on?   I do not see anything in the logs you
>> pasted showing me that slon2 has received the SUBSCRIBE_SET or
>> ENABLE_SUBSCRIPTION event.
>
> Well, I'm basing it on that the logs repeated this for two days:
>
> 2012-01-02 12:31:47 CETINFO   cleanupThread:    0.004 seconds for cleanupEvent()
> NOTICE:  Slony-I: log switch to sl_log_2 complete - truncate sl_log_1
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-01-02 12:43:15 CETINFO   cleanupThread:    0.079 seconds for cleanupEvent()
> 2012-01-02 12:43:15 CETINFO   cleanupThread:    0.006 seconds for vacuuming
> NOTICE:  Slony-I: Logswitch to sl_log_1 initiated
> CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"
> PL/pgSQL function "cleanupevent" line 101 at PERFORM
> 2012-01-02 12:54:30 CETINFO   cleanupThread:    0.004 seconds for cleanupEvent()
> NOTICE:  Slony-I: log switch to sl_log_1 complete - truncate sl_log_2
> CONTEXT:  PL/pgSQL function "cleanupevent" line 99 at assignment
> 2012-01-02 13:05:14 CETINFO   cleanupThread:    0.096 seconds for cleanupEvent()
> NOTICE:  Slony-I: Logswitch to sl_log_2 initiated
> CONTEXT:  SQL statement "SELECT "_pp_config_rep".logswitch_start()"
>


The above log messages are normal activities for the cleanup thread. 
They don't indicate a problem.


> So it was doing something, but now you mention it, there are no SYNCs,
> so perhaps it wasn't subscribed.

If you had a set subscribed you would see messages like

CETINFO remoteWorkerThread_1 syncing set %d with %d table(s) from 
provider %d

on each sync.

If you are not subscribed to any sets but are processing SYNC events 
(slon should still be processing SYNC events even if it isn't subscribed 
to anything)
You would see

CETDEBUG1 no sets need syncing for this event\n

in the log.  However that message is at the DEBUG level, and if you are 
running slon at the INFO level you will need to bump up the verbosity of 
slon to see it.

 From your log snippet I would say either

1) You are not subscribed to the set, and node 2 has not processed the 
ENABLE_SUBSCRIPTION event.

2) You are subscribed to the set but are not receiving or processing any 
events from node 1 (for some unknown reason)

Querying sl_status on the master would have told you how far behind the 
slave is.




>
> This is the log for the slave, and it says there "storeSubscribe".
> doesn't that mean it received a SUBSCRIBE_SET?
>

The message

CETCONFIG storeSubscribe: sub_set=%d sub_provider=%d sub_forward='%s

comes from the function rtcfg_storeSubscribe which gets called both on 
startup and when a SUBSCRIBE_SET event is processed.

If the ENABLE_SUBSCRIPTION command was processed then it should have 
called rtcfg_enableSubscription and would have seen

CETCONFIG enableSubscription: sub_set=%d\n"

which I didn't see in the log.

The data copy takes place in response to the ENABLE_SUBSCRIPTION event.




>> What is sl_subscribe on node 2 at this point in time?
>> Does node 2 have a record in sl_event of it having processed those two
>> events?
>
> Unfortunately I don't have that information available, but it looks
> like pilot error (the user claimed there were no errors) after all:
> the subscribe didn't work.
>

The subscribe event gets submitted to the origin (or the provider, 
depending on the version of slony, but in this case I think they are the 
same).   The SUBSCRIBE_SET and ENABLE_SUBSCRIPTION events then need to 
get replicated to the receiver that will start the copy_set.




> Have a nice day,


From kleptog at gmail.com  Thu Jan  5 01:48:06 2012
From: kleptog at gmail.com (Martijn van Oosterhout)
Date: Thu, 5 Jan 2012 10:48:06 +0100
Subject: [Slony1-general] Slony-I in strange state after attempted
	unsubscribe/resubscribe
In-Reply-To: <4F034912.50606@ca.afilias.info>
References: <CADWG95soM=he7pH650myFz4FwWSV-qLf9BVmOwgH=xOFRn-Eyg@mail.gmail.com>
	<4F0329FC.1040409@ca.afilias.info>
	<CADWG95tn3K7SWOncK1J89keGb1r8sArEMoqJxxu9Gbn5HEqMDA@mail.gmail.com>
	<4F034912.50606@ca.afilias.info>
Message-ID: <CADWG95vKP1k3DobYVuGnS0LOkbE+LimUjv=gx7U5Fp7GywSa=w@mail.gmail.com>

On 3 January 2012 19:29, Steve Singer <ssinger at ca.afilias.info> wrote:
> On 12-01-03 12:31 PM, Martijn van Oosterhout wrote:
>> Sorry, I should have mentioned: slony-I 2.0.7, PostgreSQL 9.0.3
> From your log snippet I would say either
>
> 1) You are not subscribed to the set, and node 2 has not processed the
> ENABLE_SUBSCRIPTION event.
>
> 2) You are subscribed to the set but are not receiving or processing any
> events from node 1 (for some unknown reason)
>
> Querying sl_status on the master would have told you how far behind the
> slave is.

sl_status was fine, that's what the nagios check does and it said
everything was fine.

But, reviewing the script now (based on the psql_replication_check.pl)
it looks like it says green also when there is no active replication.
So I think the simplest explanation is the subscribe wasn't done
properly.

Thanks for the help,
-- 
Martijn van Oosterhout <kleptog at gmail.com> http://svana.org/kleptog/

From ssinger at ca.afilias.info  Tue Jan 10 09:03:16 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Tue, 10 Jan 2012 12:03:16 -0500
Subject: [Slony1-general] Release candidates for minor releases (1.2.23,
	2.0.8, 2.1.1)
Message-ID: <4F0C6F54.8070700@ca.afilias.info>

I have packaged release candidates for minor updates to multiple Slony 
branches.

1.2.23 RC1
===========
- Bug #195 - make slon_quote_* functions immutable
- Bug #209 - dollar quoting doesn't work on PG 7.4
- Bug #224 - PKEYEDTABLES misspelled in altperl script
- Bug #236 - fix misformatting of log string for timestamp
- Bug #239 - Fix FAILOVER on PG 9.0 by not querying pg_listener

http://www.slony.info/downloads/1.2/source/slony1-1.2.23.rc1.tar.bz2
http://www.slony.info/downloads/1.2/source/slony1-1.2.23.rc1-docs.tar.bz2

Unless additional maintainers from the community step up 1.2.23 is 
likely to be the last 1.2.x release.

2.0.8 RC1
===========
- Bug 230 - log_timestamps was always treated as true on some platforms(AIX)
- Include additional C headers required for Postgresql 9.2(master)
- Bug 233 - Fix segfault when subscribing to a set that does not exist.
- Bug 236 :: Fix default formatting of timestamp in logs
- Add express support to recognize PostgreSQL 9.1
- Bug 255 :: Fix serialization issues when using PostgreSQL 9.1

http://www.slony.info/downloads/2.0/source/slony1-2.0.8.rc1.tar.bz2
http://www.slony.info/downloads/2.0/source/slony1-2.0.8.rc1-docs.tar.bz2

2.1.1 RC1
=============
- Bug #246 :: Include path order changes
- Bug #161 :: fix memory overrun in EXECUTE SCRIPT parser
- Bug #247 :: slony_logshipper to handle TRUNCATE commands
- Bug #249 :: Add parentheses to txid_current() in function for
               TRUNCATE logging
- slonik_drop_table and slonik_drop_sequence no longer attempt to
   return -1 on an error (invalid as a slonik exit code in 2.1)
- Bug #244 :: The CREATE SET command now requires a set id to be specified.
- Bug #255 :: Fix serialization conflict issues when using PostgreSQL 9.1.
- Bug #256 :: set_conf_option() has an extra elevel parameter on PG 9.2
- Bug #259 :: Fix TRUNCATE logging so it works with mixed case slony 
clusters.

http://www.slony.info/downloads/2.1/source/slony1-2.1.1.rc1.tar.bz2
http://www.slony.info/downloads/2.1/source/slony1-2.1.1.rc1-docs.tar.bz2


I hope to release actual releases in a little over a week (if no 
problmems are found).  If any testers/packages plan on looking at the 
release candidates but need more time then they should ask.



From ssinger at ca.afilias.info  Wed Jan 18 13:48:40 2012
From: ssinger at ca.afilias.info (Steve Singer)
Date: Wed, 18 Jan 2012 16:48:40 -0500
Subject: [Slony1-general] Cluster reshaping in 2.2
Message-ID: <4F173E38.8050903@ca.afilias.info>

In Slony 2.2 we have decided to disallow cluster configurations like

  Node 100
     set 1, set 2----->Node 102
      |                  set 2
      |                   |
      V                   V
   Node 101----------->Node 103
      set 1              set 1, set 2


A node that receives multiple sets from the same origin will now need to 
receive those sets from the same provider.  Jan wrote about this
http://lists.slony.info/pipermail/slony1-general/2011-December/011997.html

A question that has come up is how should the subscribe set command 
behave when you reshape a cluster.

Say you have

Node 100----------------------->Node 102
   set 1,set 2                  set 1, set 2
    |
    |
    V
Node 103
   set 1, set 2

then you want to make node 103 receive from 102 instead of from 100.

Today you would do
subscribe set(id=1,provider=102,receiver=103,forward=yes);
subscribe set(id=2,provider=102,receiver=103,forward=yes);

that won't work anymore because it leaves the cluster in an invalid 
intermediate state.

We can instead

1)  Make the first subscribe set automatically also move set 2.  This 
will preserve existing slonik scripts but will mean that the old slonik 
scripts do something different than they used to (a subscribe set to 
reshape set 1 might also change the subscription for set 2).

2) Make slonik fail if you try to resubscribe a set with subscribe set 
that would leave you in an invalid state after the first command. 
Instead you would need to use a new 'reshape subscription' command that 
was like 'reshape subscriptions(receiver=103, old provider=101, new 
provider=101);

3) Make slonik fail if you ever try the subscribe set command in cases 
where the receiver is already subscribed to the set but from a different 
provider.  All reshaping would need to go through the 'reshape 
subscriptions' command described above?


I am leaning towards (3).   What do others think?

Steve




From zbbentley at gmail.com  Fri Jan 20 13:44:18 2012
From: zbbentley at gmail.com (Zac Bentley)
Date: Fri, 20 Jan 2012 16:44:18 -0500
Subject: [Slony1-general] Initial subscription disk space issue
Message-ID: <CAAFQqzQFPrFS21Du=jf35LDASG8CVsoa104Aj_9OOhQ9VKYJ3g@mail.gmail.com>

We have a test cluster of machines that we run Slony
(2.0.7/postgres8.4/centos6) on in our facility. In the past, in order to
update the cluster to the latest application code, we have simply wiped the
servers, reinstalled a fresh configuration of centOS, Slony, postgres etc,
restored the same pg_dump to each database, and then created the main
replication set and kicked off subscription. This worked for the past few
months, but recently, every time I kick off initial subscription, the
postgres database files simply grow until the servers run out of disk
space. This is more than a doubling of our database size; it is going from
18G (normal) to around 40G. I can watch the Slony logs, and see that a
table copy on a very large and complex table in our application has just
finished (the table alone is 2GB), and I can watch the postgres server
status and see that FinishTableAfterCopy is running on the large table.
However, the server always runs out of disk space before subscription can
complete. Our application has experienced slow linear growth for the past
months, and none of these tables are unusually large. Is there any reason
you can think of that subscription has started filling up 2x the database's
size on the disk?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.slony.info/pipermail/slony1-general/attachments/20120120/c7e04183/attachment.htm 

